[{"/Users/sheng/Documents/GitHub/SDMSS/src/index.js":"1","/Users/sheng/Documents/GitHub/SDMSS/src/App.js":"2","/Users/sheng/Documents/GitHub/SDMSS/src/components/Home.js":"3","/Users/sheng/Documents/GitHub/SDMSS/src/components/CreateAccount.js":"4","/Users/sheng/Documents/GitHub/SDMSS/src/components/LoyaltyPage.js":"5","/Users/sheng/Documents/GitHub/SDMSS/src/components/LoyaltyTransaction.js":"6","/Users/sheng/Documents/GitHub/SDMSS/src/components/ReviewRating.js":"7","/Users/sheng/Documents/GitHub/SDMSS/src/components/Staff.js":"8","/Users/sheng/Documents/GitHub/SDMSS/src/components/Login.js":"9","/Users/sheng/Documents/GitHub/SDMSS/src/components/GlobalStore.js":"10","/Users/sheng/Documents/GitHub/SDMSS/src/components/User.js":"11","/Users/sheng/Documents/GitHub/SDMSS/src/components/FoodAndDrink.js":"12","/Users/sheng/Documents/GitHub/SDMSS/src/components/NavBarUser.js":"13","/Users/sheng/Documents/GitHub/SDMSS/src/components/GetReviewRating.js":"14","/Users/sheng/Documents/GitHub/SDMSS/src/components/NavBar.js":"15","/Users/sheng/Documents/GitHub/SDMSS/src/components/NavBarStaff.js":"16","/Users/sheng/Documents/GitHub/SDMSS/src/components/ReleaseList.js":"17","/Users/sheng/Documents/GitHub/SDMSS/src/components/AdoptList.js":"18","/Users/sheng/Documents/GitHub/SDMSS/src/components/Reducer.js":"19","/Users/sheng/Documents/GitHub/SDMSS/src/components/SuccessModal.jsx":"20","/Users/sheng/Documents/GitHub/SDMSS/src/Manager/ManagerMain.jsx":"21","/Users/sheng/Documents/GitHub/SDMSS/src/Manager/create/CreateMovieSess.jsx":"22","/Users/sheng/Documents/GitHub/SDMSS/src/Manager/create/CreateRoom.jsx":"23","/Users/sheng/Documents/GitHub/SDMSS/src/Manager/view/ViewMovie.jsx":"24","/Users/sheng/Documents/GitHub/SDMSS/src/Manager/create/CreateMovie.jsx":"25","/Users/sheng/Documents/GitHub/SDMSS/src/Manager/view/viewSession.jsx":"26","/Users/sheng/Documents/GitHub/SDMSS/src/Manager/view/ViewRoom.jsx":"27","/Users/sheng/Documents/GitHub/SDMSS/src/Manager/ConfirmModal.jsx":"28","/Users/sheng/Documents/GitHub/SDMSS/src/Manager/UpdateModal.jsx":"29","/Users/sheng/Documents/GitHub/SDMSS/src/SystemAdmin/SystemAdminMain.jsx":"30","/Users/sheng/Documents/GitHub/SDMSS/src/SystemAdmin/View/ViewUserAcc.jsx":"31","/Users/sheng/Documents/GitHub/SDMSS/src/SystemAdmin/Create/CreateUserAcc.jsx":"32"},{"size":221,"mtime":1683263319088,"results":"33","hashOfConfig":"34"},{"size":1993,"mtime":1683445871541,"results":"35","hashOfConfig":"34"},{"size":6374,"mtime":1683263319086,"results":"36","hashOfConfig":"34"},{"size":4156,"mtime":1683263319085,"results":"37","hashOfConfig":"34"},{"size":4199,"mtime":1683263319086,"results":"38","hashOfConfig":"34"},{"size":1524,"mtime":1683263319086,"results":"39","hashOfConfig":"34"},{"size":4679,"mtime":1683263319087,"results":"40","hashOfConfig":"34"},{"size":2810,"mtime":1683263319087,"results":"41","hashOfConfig":"34"},{"size":4874,"mtime":1683263319086,"results":"42","hashOfConfig":"34"},{"size":1410,"mtime":1683263319086,"results":"43","hashOfConfig":"34"},{"size":6872,"mtime":1683263319087,"results":"44","hashOfConfig":"34"},{"size":2997,"mtime":1683263319085,"results":"45","hashOfConfig":"34"},{"size":712,"mtime":1683263319086,"results":"46","hashOfConfig":"34"},{"size":739,"mtime":1683263319085,"results":"47","hashOfConfig":"34"},{"size":492,"mtime":1683263319086,"results":"48","hashOfConfig":"34"},{"size":503,"mtime":1683263319086,"results":"49","hashOfConfig":"34"},{"size":763,"mtime":1683263319087,"results":"50","hashOfConfig":"34"},{"size":623,"mtime":1683263319085,"results":"51","hashOfConfig":"34"},{"size":558,"mtime":1683263319086,"results":"52","hashOfConfig":"34"},{"size":495,"mtime":1683270307892,"results":"53","hashOfConfig":"34"},{"size":3196,"mtime":1683445562698,"results":"54","hashOfConfig":"34"},{"size":5039,"mtime":1683445713469,"results":"55","hashOfConfig":"34"},{"size":1993,"mtime":1683445717855,"results":"56","hashOfConfig":"34"},{"size":7961,"mtime":1683445562704,"results":"57","hashOfConfig":"34"},{"size":3307,"mtime":1683445703774,"results":"58","hashOfConfig":"34"},{"size":8361,"mtime":1683445562705,"results":"59","hashOfConfig":"34"},{"size":3609,"mtime":1683445562704,"results":"60","hashOfConfig":"34"},{"size":1410,"mtime":1683445562698,"results":"61","hashOfConfig":"34"},{"size":7736,"mtime":1683445562699,"results":"62","hashOfConfig":"34"},{"size":1302,"mtime":1683445826839,"results":"63","hashOfConfig":"34"},{"size":9025,"mtime":1683446026567,"results":"64","hashOfConfig":"34"},{"size":2776,"mtime":1683445914249,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ardk5c",{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sheng/Documents/GitHub/SDMSS/src/index.js",[],[],"/Users/sheng/Documents/GitHub/SDMSS/src/App.js",[],[],"/Users/sheng/Documents/GitHub/SDMSS/src/components/Home.js",[],[],"/Users/sheng/Documents/GitHub/SDMSS/src/components/CreateAccount.js",[],[],"/Users/sheng/Documents/GitHub/SDMSS/src/components/LoyaltyPage.js",["178"],[],"import { useState, useEffect } from \"react\";\r\nimport NavBarUser from \"./NavBarUser\";\r\n\r\nconst LoyaltyPage = () => {\r\n    const [item, setItem] = useState('');\r\n    const [itemstatus, setitemstatus] = useState(\"Unclaimed\");\r\n    const [quantity, setquantity] = useState(\" \");\r\n    const [isPending, setIsPending] = useState(false);\r\n\r\n    const handleSubmit = (e) =>{\r\n        \r\n        const loyaltytransaction = {item, itemstatus, quantity};\r\n        //e.preventDefault();\r\n        setIsPending(true);\r\n        \r\n        fetch('http://localhost:8003/loyaltytransaction',{\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(loyaltytransaction)\r\n        }).then(()=>{\r\n            console.log(\"Item is redeemed\");\r\n        })\r\n    }\r\n\r\n    const [loyaltyitem, setLoyaltyItem] = useState([]);\r\n    useEffect(() => {\r\n        fetch('http://localhost:8004/loyaltyitems')\r\n        .then(res =>{\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setLoyaltyItem(data);\r\n        })\r\n    }, []); \r\n    \r\n    return (  \r\n        <>\r\n            <NavBarUser />\r\n\r\n            <div className=\"loyalty-page\">\r\n                <h1>List of Loyalty Redemption Items</h1>\r\n                <p>Customer points:</p>\r\n                <table>\r\n                <tr>\r\n                    <th>Item ID</th>\r\n                    <th>Item Name</th>\r\n                    <th>Points required</th>\r\n                    <th>Image</th>\r\n                </tr>\r\n                {loyaltyitem.map( record =>(\r\n                    <tr id={record.key}>\r\n                        <td>{record.itemid}</td>\r\n                        <td>{record.itemname}</td>\r\n                        <td>{record.points}</td>\r\n                        <td><img src={record.imagesrc}></img></td>\r\n                    </tr>\r\n                            ))}\r\n                </table>\r\n\r\n                <h2>Loyalty Point Redemption</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <h3>Select one item in the dropdown bar below to redeem:</h3>\r\n                    <label>Select item:</label>\r\n                    <select \r\n                        value={item}\r\n                        \r\n                        onChange={(e) => setItem(e.target.value)}\r\n                        >\r\n                        {loyaltyitem.map( record =>(\r\n                            <option value={record.itemname}>{record.itemname}</option>\r\n                            ))}\r\n                    </select>\r\n                    \r\n                    <label className=\"w3-left w3-xlarge\" >Pet Health Status:</label>\r\n                    <select\r\n                        className=\"w3-input w3-section w3-border w3-round w3-dark-grey\"\r\n                        value={itemstatus}\r\n                        onChange={(e) => setitemstatus(e.target.value)}\r\n                    >\r\n                        \r\n                        <option value=\"claimed\">claimed</option>\r\n                        <option value=\"unclaimed\">Unclaimed</option>\r\n                    </select>\r\n\r\n                    <label className=\"w3-left w3-xlarge\" >Quantity:</label>\r\n                    <select\r\n                        className=\"w3-input w3-section w3-border w3-round w3-dark-grey\"\r\n                        value={quantity}\r\n                        onChange={(e) => setquantity(e.target.value)}\r\n                    >\r\n                        \r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n    \r\n                    </select>\r\n                   \r\n                    \r\n\r\n                    { !isPending && <button className=\"w3-button w3-light-grey w3-round-large w3-margin\" >Redeem</button>}\r\n                    { isPending && <button disabled className=\"w3-button w3-light-grey w3-round-large w3-margin-top\">Submitting release form...</button>}\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n \r\nexport default LoyaltyPage;","/Users/sheng/Documents/GitHub/SDMSS/src/components/LoyaltyTransaction.js",[],[],"/Users/sheng/Documents/GitHub/SDMSS/src/components/ReviewRating.js",["179"],[],"import React from 'react';\r\nimport GetReviewRating from './GetReviewRating';\r\nimport NavBarUser from './NavBarUser';\r\nimport  Modal  from 'react-modal'\r\nimport { useState } from 'react';\r\nimport { BsHouse } from 'react-icons/bs';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      backgroundColor       : '#4f4747'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst ReviewRating = () => {\r\n    const [feedback, setFeedback] = useState('');\r\n    const [rating, setRating] = useState(1);\r\n    const [modalIsOpen3, setModalIsOpen3] = useState(false);\r\n    const [modalIsOpen4, setModalIsOpen4] = useState(false);\r\n    const [isPending, setIsPending] = useState(false);\r\n    const history = useNavigate();\r\n\r\n    const handleSubmit2 = (e) =>{\r\n        history('/user');\r\n        setModalIsOpen4(false)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        const review = { feedback, rating };\r\n        setIsPending(true);\r\n\r\n        fetch('http://localhost:8002/reviews',{\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(review)\r\n        }).then(()=>{\r\n            console.log(\"new review added\");\r\n            setIsPending(false);\r\n            setModalIsOpen3(false);\r\n            setModalIsOpen4(true);\r\n            //history(-1);\r\n            //history('/user');\r\n            \r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        \r\n        <NavBarUser />\r\n        <div className='w3-row w3-margin'>\r\n            <h3 class=\"w3-twothird w3-container w3-xxlarge w3-border-bottom w3-border-light-grey\" style={{maxWidth:\"\"}}>Review and Rating Section</h3>\r\n            <div className='w3-third w3-container w3-cell w3-cell-middle '>\r\n                <a className='w3-right w3-button w3-deep-orange w3-round-medium w3-margin' onClick={() => setModalIsOpen3(true)}> Submit Review & Feedback</a>\r\n            </div>\r\n\r\n        </div>\r\n        \r\n        \r\n        <Modal\r\n            isOpen={modalIsOpen3}\r\n            onRequestClose={() => setModalIsOpen3(false)}\r\n            style={customStyles} >\r\n            \r\n            <h1 className=\"w3-xxlarge\">Submit Review and Rating <BsHouse /></h1>\r\n            <p className='w3-center'>Your feedback is important to us!!! <br></br>Do let us know what can we improve further.</p>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <label className=\"w3-left w3-xlarge\" >Feedback:</label>\r\n                <textarea\r\n                    className=\"w3-input w3-section w3-border w3-round\"\r\n                    type=\"text\" \r\n                    required\r\n                    value={feedback}\r\n                    onChange={(e) => setFeedback(e.target.value)}\r\n                    />\r\n                <label className=\"w3-left w3-xlarge\" >Rating:</label>\r\n                <select \r\n                    className=\"w3-input w3-section w3-border w3-round\"\r\n                    value={rating}\r\n                    onChange={(e) => setRating(e.target.value)}\r\n                >\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </select>\r\n\r\n                <div className=\"Iwantaligncenter\">\r\n                    <button className='w3-button w3-light-grey w3-round-large w3-margin ' onClick={() => setModalIsOpen3(false)}>Close</button>\r\n                    { !isPending && <button className=\"w3-button w3-light-grey w3-round-large w3-margin\" >Submit</button>}\r\n                    { isPending && <button disabled className=\"w3-button w3-light-grey w3-round-large w3-margin-top\">Submitting release form...</button>}\r\n                </div>\r\n                \r\n            </form>\r\n            \r\n        </Modal>\r\n        <Modal\r\n            isOpen={modalIsOpen4}\r\n            onRequestClose={() => setModalIsOpen4(false)}\r\n            style={customStyles} >\r\n\r\n            <h1>Thank you for your feedback!</h1>\r\n            <div className=\"Iwantaligncenter\">\r\n                <button className='w3-button w3-light-grey w3-round-large w3-margin-top' onClick={handleSubmit2}>Close</button>\r\n            </div>\r\n        </Modal>\r\n        \r\n        <GetReviewRating/>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReviewRating","/Users/sheng/Documents/GitHub/SDMSS/src/components/Staff.js",[],[],"/Users/sheng/Documents/GitHub/SDMSS/src/components/Login.js",["180"],[],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../w3.css';\r\nimport NavBar from './NavBar';\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport  Modal  from 'react-modal'\r\n\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      backgroundColor       : '#4f4747'\r\n    }\r\n};\r\n\r\nconst Login = () => {\r\n    const [username, setusername] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [dbuser, setdbuser] = useState([]);\r\n    const [modalIsOpen4, setModalIsOpen4] = useState(false);\r\n    const history = useNavigate();\r\n    var successaccess = false;\r\n    var accounttype = \" \";\r\n\r\n    useEffect(()=>{\r\n        fetch('http://localhost:8005/user')\r\n        .then(res =>{\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setdbuser(data);\r\n            console.log(data);\r\n        });\r\n    },[]);\r\n\r\n    const handleSubmit2 = () =>{\r\n        setModalIsOpen4(false)\r\n    }\r\n\r\n    // const handleClickSignIn = () => {\r\n\r\n    //     console.log(\"redirect to customer page\");\r\n\r\n    //     this.props.history.push({ \r\n    //         pathname: \"/user\",\r\n    //         state: {id: \"123\", name: \"testing\"} // your data array of objects\r\n    //     });\r\n  \r\n    // };\r\n\r\n    const handleSubmit = (e) =>{\r\n            e.preventDefault();\r\n            dbuser.filter(record => record.username === username && record.password === password).map(filterrecord =>{\r\n\r\n                successaccess = true\r\n                console.log(filterrecord.name)\r\n                console.log(filterrecord.acctype)\r\n                console.log(\"Log In Successful\")\r\n                accounttype = filterrecord.acctype\r\n                \r\n                \r\n            })\r\n\r\n            if (successaccess) {\r\n                if (accounttype === \"customer\"){\r\n                    //handleClickSignIn()\r\n                    console.log(\"redirect to customer page\");\r\n\r\n                    // this.props.history.push({ \r\n                    //     pathname: \"/user\",\r\n                    //     state: {id: \"123\", name: \"testing\"} // your data array of objects\r\n                    // });\r\n                    history('/user');\r\n                } else if (accounttype === \"staff\"){\r\n                    console.log(\"redirect to staff page\");\r\n                    history('/staff');\r\n                }\r\n                \r\n            } else {\r\n                setModalIsOpen4(true);\r\n            }\r\n            \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n\r\n            {/* <!-- Page content --> */}\r\n            <div className=\"w3-content w3-padding w3-center\" style={{width:\"60%\"}}>\r\n                \r\n                {/* <!-- Log in Section --> */}\r\n                <div className=\"w3-container w3-margin-top\" id=\"login\">\r\n                    <div className=\"w3-padding-32\">\r\n                        <h1 className=\"w3-border-bottom w3-border-teal w3-padding-64\">Sign In</h1>\r\n\r\n                        <form onSubmit={handleSubmit} className=\"w3-padding-32\">\r\n                            <input value={username} placeholder=\"Username\" onChange={(e)=> setusername(e.target.value)}className=\"w3-input w3-section w3-border w3-round\" type=\"text\" required name=\"Username\"/>\r\n                            <input type=\"password\" value={password} placeholder=\"Password\" onChange={(e)=> setpassword(e.target.value)} className=\"w3-input w3-section w3-border w3-round\" required name=\"Password\"/>\r\n                            <div className=\"w3-center w3-padding-large w3-padding-32\">\r\n                                \r\n                                <button className=\"w3-button w3-teal w3-round-large w3-margin-top\">SIGN IN</button>\r\n                                <Link to='/createaccount' className=\"w3-button w3-light-grey w3-round-large w3-margin-top\">CREATE A NEW ACCOUNT</Link>\r\n                                \r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* <!-- End page content --> */}\r\n            </div>\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen4}\r\n                onRequestClose={() => setModalIsOpen4(false)}\r\n                style={customStyles} >\r\n\r\n                <h1>Incorrect Username Or Password</h1>\r\n                <div className=\"Iwantaligncenter\">\r\n                    <button className='w3-button w3-light-grey w3-round-large w3-margin-top' onClick={handleSubmit2}>Close</button>\r\n                </div>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","/Users/sheng/Documents/GitHub/SDMSS/src/components/GlobalStore.js",[],[],"/Users/sheng/Documents/GitHub/SDMSS/src/components/User.js",["181","182"],[],"import React from 'react';\r\nimport NavBarUser from './NavBarUser';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst User = () => {\r\n    return (\r\n        <>\r\n        \r\n        <NavBarUser />\r\n        \r\n        <div className=\"w3-padding\">\r\n\r\n            <div className=\" \" id=\"pets\">\r\n                \r\n                <div className='w3-border-top w3-border-dark-grey' ></div>\r\n\r\n                <div className=\"w3-row w3-padding-32\">    \r\n\r\n                    \r\n                    <div className=\"w3-third w3-padding-16\">\r\n                        <div className=\"w3-padding-top-64\">\r\n                        <div className=\"w3-padding-top-64\">\r\n                            <div className=\"w3-row-padding w3-padding-16\">\r\n                                    <div className=\"w3-half w3-padding-16\">\r\n                                        <h3 className=\"\">Book Ticket</h3>\r\n                                        <h3 className=\"w3-text-amber\">Now</h3>\r\n                                    </div>\r\n                                    <div className=\"w3-half w3-padding-top-64\">\r\n                                        <a className=\"w3-button w3-deep-orange w3-round-medium\" href=\"#\">Book</a>\r\n                                    </div>\r\n                            </div>\r\n                            <div className=\"w3-row-padding w3-padding-16\">\r\n                                    <div className=\"w3-half w3-padding-16\">\r\n                                        <h3 className=\"\">Buy Food & Drink</h3>\r\n                                        <h3 className=\"w3-text-amber\">Here</h3>\r\n                                    </div>\r\n                                    <div className=\"w3-half w3-padding-top-64\">\r\n                                    <Link to='/foodanddrink'><a className=\"w3-button w3-deep-orange w3-round-medium\" href=\"#\">Order</a></Link>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"w3-twothird w3-padding-16\">\r\n                        \r\n                        <div className=\"w3-row-padding w3-padding-16\">\r\n                            <h3 className=\"w3-border-bottom w3-border-light-grey\" style={{maxWidth:\"170px\"}}>Now Showing</h3>\r\n                    \r\n                            <div className=\"w3-col l4 m8 w3-margin-bottom w3-padding-16\">\r\n                                <img src={require(\"../pics/blacky.jpg\")} alt=\"blacky\" className=\"\" style={{width:\"100%\"}}/>\r\n                                <div className='w3-dark-grey w3-padding' style={{minHeight:\"400px\"}}>\r\n                                    <h3>Blacky</h3>\r\n                                    <p className=\"w3-opacity w3-large\">The AZoom team makes the experience of car-renting relatively stress-free. They are an awesome group of people to work with - quick to respond, always ready to help, positive and open to suggestions for improvements. Keep up the good work!</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"w3-col l4 m8 w3-margin-bottom w3-padding-16\">\r\n                                <img src={require(\"../pics/colin.jpg\")} alt=\"colin\" className=\"\" style={{width:\"100%\"}}/>\r\n                                <div className='w3-dark-grey w3-padding' style={{minHeight:\"400px\"}}>\r\n                                    <h3>Blacky</h3>\r\n                                    <p className=\"w3-opacity w3-large\">The AZoom team makes the experience of car-renting relatively stress-free. They are an awesome group of people to work with - quick to respond, always ready to help, positive and open to suggestions for improvements. Keep up the good work!</p>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <div className=\"w3-col l4 m8 w3-margin-bottom w3-padding-16\">\r\n                                <img src={require(\"../pics/goldy.jpg\")} alt=\"goldy\" className=\"\" style={{width:\"100%\"}}/>\r\n                                <div className='w3-dark-grey w3-padding' style={{minHeight:\"400px\"}}>\r\n                                    <h3>Blacky</h3>\r\n                                    <p className=\"w3-opacity w3-large\">The AZoom team makes the experience of car-renting relatively stress-free. They are an awesome group of people to work with - quick to</p>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className=\" \" id=\"pets\">\r\n                \r\n                <div className='w3-border-top w3-border-dark-grey' ></div>\r\n\r\n                <div className=\"w3-container w3-padding-32\" id=\"reviews\">\r\n                    <h3 className=\"w3-padding-16 w3-xxlarge\">What our customer are saying about us</h3>\r\n\r\n                    <div className=\"w3-panel w3-leftbar w3-dark-grey w3-round\">\r\n                        <p><i>\"The AZoom team makes the experience of car-renting relatively stress-free. They are an awesome group of people to work with - quick to respond, always ready to help, positive and open to suggestions for improvements. Keep up the good work! 👍\"</i></p>\r\n                        <p>Albert Tan</p>\r\n                    </div>\r\n\r\n                    <div className=\"w3-panel w3-leftbar w3-dark-grey w3-round\">\r\n                        <p><i>\"AZoom has a great and very responsive customer service team. It is an easy and hassle-free platform for me to rent an eletric car. No confusion and is clear-cut.\"</i></p>\r\n                        <p>Shimei He</p>\r\n                    </div>\r\n\r\n                    <div className=\"w3-panel w3-leftbar w3-dark-grey w3-round\">\r\n                        <p><i>\"Convenient way to rent an eletric car. Hassle free! :)\"</i></p>\r\n                        <p>Jonathan Lai</p>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            {/* <!-- location/map --> */}\r\n            <div className=\"w3-container w3-padding-32\" id=\"location\">\r\n                <h1 className=\"w3-border-bottom w3-border-dark-grey w3-padding-16\">Come visit us at Jurong East.</h1>\r\n                \r\n                <div className='w3-center w3-padding-32'>\r\n                    <h4 className=\"w3-padding-16\">21 Jurong East 3, #34, Singapore 123456 </h4>\r\n                    <img src={require(\"../pics/location.PNG\")} alt=\"location\" className=\"w3-round\" style={{width:\"900px\", height:\"500px\"}}/>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default User","/Users/sheng/Documents/GitHub/SDMSS/src/components/FoodAndDrink.js",["183"],[],"import { useState, useEffect } from \"react\";\nimport NavBarUser from './NavBarUser';\n\nconst FoodAndDrink = () => {\n    const [foodanddrink, setfoodanddrink] = useState([]);\n    const [quantity, setquantity] = useState();\n    const [item, setItem]= useState();\n    const [itemstatus, setitemstatus] = useState(\"Unclaimed\");\n    const [isPending, setIsPending] = useState(false);\n\n    useEffect(()=>{\n        fetch('http://localhost:9000/foodanddrink')\n        .then(res =>{\n            return res.json();\n        })\n        .then(data => {\n            setfoodanddrink(data);\n        });\n    },[]);\n\n    const handleSubmit = (e) => {\n        const loyaltytransaction = {item, itemstatus, quantity};\n        //e.preventDefault();\n        setIsPending(true);\n        \n        fetch('http://localhost:8003/loyaltytransaction',{\n            method: 'POST',\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(loyaltytransaction)\n        }).then(()=>{\n            console.log(\"Order have been placed\");\n        })\n    }\n\n    return ( \n        <>\n        \n        <NavBarUser />\n\n        <div>\n            <h1>Food And Drink Purchase Section</h1>\n            <p>Select list of items to purchase:</p>\n            <form onSubmit={handleSubmit}>\n                <table>\n                    <tr>\n                        \n                        <th>Item name</th>\n                        <th>Item Description:</th>\n                        <th>Price</th>\n                    </tr>\n                    {foodanddrink.map(record =>(\n                        <tr id={record.key}>\n                            <td>{record.itemname}</td>\n                            <td>{record.itemdesc}</td>\n                            <td>${record.price.toFixed(2)}</td>\n                        </tr>\n                    ))}\n                </table>\n                <label>Choose a combo:</label>\n                <select value={item} onChange={(e)=> setItem(e.target.value)}>\n                    {foodanddrink.map(current =>(\n                        <option value={current.itemname}>{current.itemname}</option>\n                    ))}\n                </select>\n                <label>Item Quantity: </label>\n                <select value={quantity} onChange={(e)=>setquantity(e.target.value)}>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                </select>\n                <p>Total: $</p>\n                { !isPending && <button className=\"w3-button w3-light-grey w3-round-large w3-margin\" >Place Order</button>}\n                { isPending && <button disabled className=\"w3-button w3-light-grey w3-round-large w3-margin-top\">Submitting release form...</button>}\n                \n            </form>\n        </div>\n        \n        </>\n        \n     );\n}\n \nexport default FoodAndDrink;","/Users/sheng/Documents/GitHub/SDMSS/src/components/NavBarUser.js",[],[],"/Users/sheng/Documents/GitHub/SDMSS/src/components/GetReviewRating.js",[],[],"/Users/sheng/Documents/GitHub/SDMSS/src/components/NavBar.js",[],[],"/Users/sheng/Documents/GitHub/SDMSS/src/components/NavBarStaff.js",[],[],"/Users/sheng/Documents/GitHub/SDMSS/src/components/ReleaseList.js",[],[],"/Users/sheng/Documents/GitHub/SDMSS/src/components/AdoptList.js",[],[],"/Users/sheng/Documents/GitHub/SDMSS/src/components/Reducer.js",[],[],"/Users/sheng/Documents/GitHub/SDMSS/src/components/SuccessModal.jsx",["184"],[],"import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nfunction SuccessModel({message, show , handleClose}){\n\n     return(\n          <>\n     <Modal show={show} onHide={handleClose}>\n     <Modal.Body>\n          {message}\n     </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleClose}>\n          Yes \n        </Button>\n      </Modal.Footer>\n    </Modal>\n          </>\n     )\n}\n\n\nexport default SuccessModel;",[],"/Users/sheng/Documents/GitHub/SDMSS/src/Manager/ManagerMain.jsx",["185","186","187","188","189","190","191","192","193","194","195","196","197"],[],"//Manager View\nimport { useNavigate, Link} from \"react-router-dom\";\nimport {BrowserRouter as Router,  Route, Routes, Switch } from 'react-router-dom';\nimport CreateMovie from \"./create/CreateMovie\";\nimport CreateMovieSession from \"./create/CreateMovieSess\";\nimport CreateRoom from \"./create/CreateRoom\";\nimport ViewMovie from \"./view/ViewMovie\";\nimport ViewSession from \"./view/viewSession\";\nimport ViewRoom from \"./view/ViewRoom\";\n\n//states\nimport { useState } from \"react\";\nfunction Main() {\n\n     //Select from dd   \n     const [Option, setOption] = useState('');//set default val\n\n     const navigate = useNavigate();\n     const currentUrl = window.location.pathname.split('/').pop();\n\n     const handleOptionChange = (event) => {\n       setOption(event.target.value);\n       //navigate(`${event.target.value}`);\n       \n     };\n     //console.log(Option);\n\n     //set max-width to main body, then align content left\n     return (\n     <>\n     <div style={{maxWidth : '1000px', margin : '0 auto'}}>\n          <div className=\"d-flex\">\n               <div className=\" text-white d-flex align-items-center text-left p-3 \">\n                    <p className=\"m-0\"  style={{width:'100px'}}>Toggle:</p>\n                    <select className=\"form-select\" value={Option} onChange={handleOptionChange}  style={{width:'200px'}}>\n                         <option value=\"create-movie\">\n                              Create Movie\n                         </option>\n                         <option value=\"create-movie-session\">\n                              Create Movie Session\n                         </option>\n                         <option value=\"create-room\">\n                              Create Room\n                         </option>\n                         <option value=\"view-room\">\n                              View Room\n                         </option>\n                         <option value=\"view-session\">\n                              View Movie Session\n                         </option>\n                         <option value=\"view-movie\">\n                              View Movie\n                         </option>\n                         <option value=\"GenerateReport\">\n                              Generate Report\n                         </option>\n                    </select>\n               </div>\n          {/* \n               <div className=\"m-0 input-group justify-content-end align-items-center\">\n                    <form class=\"form-inline my-2 my-lg-0\">\n                         <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\n                    </form>\n               </div>\n          */}\n          </div>\n          <div style={{width : '100%'}}>\n                {Option == \"create-movie\" && <CreateMovie/>}\n                {Option == \"create-movie-session\" && <CreateMovieSession/>}\n               {Option == \"create-room\" && <CreateRoom/>}\n               {Option == \"view-room\" && <ViewRoom/>}\n               {Option == \"view-session\" && <ViewSession/>}\n               {Option == \"view-movie\" && <ViewMovie/>}\n               \n          </div>\n     </div>\n\n     </>\n     );\n   }\n   \n   export default Main;\n   \n","/Users/sheng/Documents/GitHub/SDMSS/src/Manager/create/CreateMovieSess.jsx",["198","199"],[],"import { useEffect, useState } from \"react\";\nimport SuccessModel from \"../../components/SuccessModal\";\nfunction CreateMovieSession() {\n     const apiUrl_Movie = process.env.REACT_APP_API_URL_MOVIE;\n     const apiUrl_Room = process.env.REACT_APP_API_URL_ROOM;\n     const apiUrl_Session = process.env.REACT_APP_API_URL_SESSION;\n\n     const [showModal, setShowModal] = useState(false);\n     const [movies, setMovies] = useState([])\n     const [rooms , setRooms] = useState([])\n     const [formData, setFormData] = useState({\n          id: \"\",\n          Movie: \"\",\n          Room: \"\",\n          Date: \"\",\n          Start: \"\",\n          End: \"\" });\n\n\n     const loadMoviesnRooms = () => {\n          // read the data from the JSON file when the component mounts\n          fetch(`${apiUrl_Movie}/Movie`)\n          .then(response => response.json())\n          .then(data => {\n               const extractedMovies = data.map(item => item.Movie);\n               setMovies(extractedMovies);\n          })\n          .catch(error => console.error(error));\n\n          //fetch room too\n          fetch(`${apiUrl_Room}/Room`)\n          .then(response => response.json())\n          .then(data => {\n               const extractedRooms = data.map(item => item.Room);\n               setRooms(extractedRooms);\n          })\n          .catch(error => console.error(error));\n     }\n\n     \n     //on page load\n     useEffect(() => {\n          loadMoviesnRooms()\n     }, []);\n\n     const formatTime = (time) => {\n          const [hours, minutes] = time.split(':');\n          let suffix = hours >= 12 ? 'pm' : 'am';\n          let formattedHours = hours % 12 || 12;\n          return `${formattedHours}:${minutes}${suffix}`;\n        }\n\n     const handleCloseModal = () => {\n          setShowModal(false); \n     };\n          \n     const handleEdit = (event) => {\n          const { id, value } = event.target;\n          setFormData((prevFormData) => ({ ...prevFormData, [id]: value }));\n             \n     }\n      \n     const handleSubmit = (event) =>{\n          event.preventDefault();\n          console.log(\"pleaes\")\n          \n          fetch(`${apiUrl_Session}/MovieSession`, {\n               method: 'POST',\n               headers: {\n                 'Content-Type': 'application/json',\n               },\n               body: JSON.stringify(formData),\n             })\n               .then((response) => response.json())\n               .then((data) => console.log(data))\n               .catch((error) => console.error(error));\n          \n     }\n\n     return (\n          <>\n          <form onSubmit={handleSubmit} className=\"CreateMovie text-white bg-dark d-flex-column \">\n          \n          <div className=\"form-group d-flex p-3\">\n               <p class=\"col-form-label\" style={{width:'100px'}}>Movie</p>\n               <select id=\"Movie\" className=\"form-select text-wrap\" style={{ width: '400px'}} onChange={handleEdit}>\n                    {/* got data then use map to populate the dd */}\n                    {movies.map((option) => (\n                         <option key={option} value={option}>{option} </option>\n                    ))}\n               </select>\n          </div>\n\n          <div className=\"form-group d-flex align-items-center text-left p-3 \">\n               <p class=\"col-form-label\"  style={{width:'100px'}}>Room:</p>\n               <select id=\"Room\" className=\"form-select text-wrap\" style={{ width: '400px'}} onChange={handleEdit}>\n                    {/* got data then use map to populate the dd */}\n                    {rooms.map((option) => (\n                         <option key={option} value={option}>{option} </option>\n                    ))}\n               </select>\n          </div>\n\n          <div className=\"form-group d-flex p-3\">\n               <p  style={{width:'100px'}}>Date</p>\n               <input min={new Date().toISOString().split('T')[0]} type=\"date\" id=\"Date\" class=\"form-control\" style={{ width: '400px'}} onChange={handleEdit}  ></input>\n          </div>\n\n          <div className=\"form-group d-flex align-items-center text-left p-3 \">\n               <label class=\"col-form-label\"  style={{width:'100px'}}>From:</label>\n               <input id= \"Start\" class=\"form-control\" type=\"time\" style={{ width: '400px'}}  onChange={handleEdit} ></input>\n          </div>\n\n          <div className=\"form-group d-flex align-items-center text-left p-3 \">\n               <label class=\"col-form-label\"  style={{width:'100px'}}>To:</label>\n               <input id= \"End\" class=\"form-control\" type=\"time\" style={{ width: '400px'}}  onChange={handleEdit} ></input>\n          </div>\n\n\n          <div className=\"d-flex justify-content-center  p-3\">\n               <button type=\"submit\" onClick={()=>setShowModal(true)} className=\"btn btn-danger\">Create</button>\n          </div>\n     </form>\n          <SuccessModel \n               message = \"Movie Successfully Created !\" \n               show = {showModal}\n               handleClose={handleCloseModal}\n          />\n  </>\n     );\n   }\n   \n   export default CreateMovieSession;\n   ","/Users/sheng/Documents/GitHub/SDMSS/src/Manager/create/CreateRoom.jsx",[],[],"/Users/sheng/Documents/GitHub/SDMSS/src/Manager/view/ViewMovie.jsx",["200","201","202","203","204","205","206","207"],[],"import { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nfunction ViewMovie() {\n\n  const [showModal, setShowModal] = useState(false);\n  const [showConfirmModal, setConfirmModal] = useState(false);\n  const [data, setData] = useState([])\n  const [filteredData, setFilteredData] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const apiUrl = process.env.REACT_APP_API_URL_MOVIE;\n\n  const loadData = () => {\n    fetch(`${apiUrl}/Movie`)\n    .then(response => response.json())\n    .then(data => setData(data))\n    .catch(error => console.error(error));\n  }\n  \n  useEffect(() => { //load data on page load \n    loadData()\n  }, [filteredData,query]);\n\n  const handleUpdate = (id) => { //filter by id and pass to modal\n    setFilteredData(data.filter((movieData) => movieData.id === id));\n    // filteredData will now contain an array with only the movie data objects that match the given id\n    setShowModal(true);\n  };\n\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false); \n    setConfirmModal(false);\n  };\n\n  const confirmModal = (id) => {\n    setFilteredData(data.filter((movieData) => movieData.id === id));\n    //delete modal\n    setConfirmModal(true); \n  }\n\n  const handleSubmit = (e)=> {\n    e.preventDefault();\n    fetch(`${apiUrl}/Movie?Movie=${query}`)\n      .then(response => response.json())\n      .then(data => setData(data))\n      .catch(error => console.error(error));\n  };\n\n  return (\n    <> \n      <div className=\"d-flex justify-content-end\">\n        <form className=\"input-group p-3\" style={{width : \"350px\"}}   onSubmit={handleSubmit}>\n          <input class=\"form-control border \" type={\"text\"} value={query} onChange={handleChange} ></input>\n        <button  className=\"btn btn-light\" type=\"submit\">search</button>\n        </form>\n      </div>\n    <table className=\"text-black\" style={{backgroundColor : \"whitesmoke\", width : '1000px'}}>\n      <thead>\n        <tr className=\"d-flex-column\" style={{backgroundColor : \"orange\"}}>\n          <th scope=\"col\" className=\"p-3\">Id</th>\n          <th scope=\"col\">Movie</th>\n          <th scope=\"col\">Duration</th>\n          <th scope=\"col\">Synopsis</th>\n          <th scope=\"col\" className=\"text-nowrap\">Age Rating</th>\n          <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody >\n      {data.length == 0 ?  (<p className=\"p-3\">No Matching Records</p>) : (\n        data?.map((movie) => (\n          <>\n          <tr key={movie.id}>\n            <td className=\"p-2\">{movie.id}</td>\n            <td className=\"p-2\">{movie.Movie}</td>\n            <td className=\"p-2\">{movie.Duration}</td>\n            <td className=\"p-2\">{movie.Synopsis}</td>\n            <td className=\"p-2\">{movie.AgeRating}</td>\n            <td>\n              <div className=\"d-flex align-items-center justify-content-end\"> \n                    <button type=\"button\" className=\"btn text-white m-1 \" style={{backgroundColor : \"royalblue\"}}\n                        onClick={() => handleUpdate(movie.id)}>\n                        Update {/*pass id instead handleupdate(id)*/}\n                      </button>\n                    <button type=\"button\" className=\"btn text-white m-1\" style={{backgroundColor : \"red\"}} onClick={() => confirmModal(movie.id)}>Delete</button>\n               </div>\n            </td>\n          </tr>\n          <tr>\n              <td colSpan=\"6\" className=\"border-bottom\"></td>\n          </tr>\n          </>\n        )))}\n      </tbody>\n    </table>\n    {showModal === true &&          \n          <UpdateMovie\n          data={filteredData}\n          setData = {setFilteredData} //setData to reload parent\n          show={showModal}\n          handleClose={handleCloseModal}\n        />}\n    {showConfirmModal == true &&\n        <DeleteMovie\n        data={filteredData}\n        setData ={setFilteredData}\n        show={showConfirmModal}\n        handleClose={handleCloseModal}/>\n    }\n    </>\n  );\n}\n\nexport default ViewMovie;\n\nconst UpdateMovie = ({data, setData, show, handleClose}) => {\n  const apiUrl_Room = process.env.REACT_APP_API_URL_ROOM;\n  const apiUrl_Movie = process.env.REACT_APP_API_URL_MOVIE;\n  const apiUrl_Session = process.env.REACT_APP_API_URL_SESSION;\n  const [formData, setFormData] = useState(data[0]);\n  const [movies, setMovies] = useState([])\n  const [rooms , setRooms] = useState([])\n\n  useEffect(() => { \n    fetch(`${apiUrl_Movie}/Movie`)\n    .then(response => response.json())\n    .then(data => {\n         const extractedMovies = data.map(item => item.Movie);\n         setMovies(extractedMovies);\n    })\n    .catch(error => console.error(error));\n\n    //fetch room too\n    fetch(`${apiUrl_Room}/Room`)\n    .then(response => response.json())\n    .then(data => {\n         const extractedRooms = data.map(item => item.Room);\n         setRooms(extractedRooms);\n    })\n    .catch(error => console.error(error));\n  }, []);\n\n\n   \n  const handleEdit = (event) => {\n    const { id, value } = event.target;\n    setFormData((prevFormData) => ({ ...prevFormData, [id]: value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(`${apiUrl_Movie}/Movie/${formData.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setData(\"re-load parent\")\n        handleClose();\n      })\n      .catch((error) => console.error(error));\n  }\n  return(\n    <>\n      <Modal show={show} onHide={handleClose}>\n      <Modal.Body>\n      <form  onSubmit={handleSubmit}>\n          <div class=\"form-group\">\n            <label hmtlfor=\"id\"  class=\"col-form-label\">id:</label>\n            <input type=\"text\" disabled onChange={handleEdit}  value={formData.id} class=\"form-control\" id=\"id\"></input>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"Movie\" class=\"col-form-label\">Movie:</label>\n            <textarea class=\"form-control\" onChange={handleEdit} value={formData.Movie} id=\"Movie\"></textarea>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"Duration\" class=\"col-form-label\">Duration:</label>\n            <textarea class=\"form-control\" onChange={handleEdit} value={formData.Duration} id=\"Duration\"></textarea>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"Synopsis\" class=\"col-form-label\">Synopsis:</label>\n            <textarea class=\"form-control\" onChange={handleEdit} value={formData.Synopsis} id=\"Synopsis\"></textarea>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"AgeRating\" class=\"col-form-label\">Age Rating:</label>\n            <select className=\"form-select\" onChange={handleEdit} value={formData.AgeRating} id=\"AgeRating\">\n                  <option value=\"PG-13\">PG-12</option>\n                  <option value=\"PG\">PG</option>\n                  <option value=\"R21\">R21</option>\n            </select>\n          </div>\n          <button type=\"submit\">Update</button>\n        </form>\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\n\nconst DeleteMovie = ({data, setData, show, handleClose}) => {\n  const [id, setId] = useState(data[0].id)\n  const apiUrl_Movie = process.env.REACT_APP_API_URL_MOVIE;\n\n  const handleDelete = () => {\n    fetch(`${apiUrl_Movie}/Movie/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => response.json())\n      .then(data => \n        setData(\"reload\"))\n      .catch(error => console.error(error))\n\n    handleClose()\n  }\n  return(\n    <>\n    <Modal show={show} onHide={handleClose}>\n     <Modal.Body>\n          Confirm Delete Movie ?\n     </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleDelete}>\n          Yes {/*handle delete/update*/}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n    </>\n  )\n}\n\n","/Users/sheng/Documents/GitHub/SDMSS/src/Manager/create/CreateMovie.jsx",[],[],"/Users/sheng/Documents/GitHub/SDMSS/src/Manager/view/viewSession.jsx",["208","209","210","211","212","213","214","215"],[],"import { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport ConfirmModal from \"../ConfirmModal\";\nfunction ViewSession() {\n\n  const [showModal, setShowModal] = useState(false);\n  const [showConfirmModal, setConfirmModal] = useState(false);\n  const [data, setData] = useState([])\n  const [filteredData, setFilteredData] = useState([]);\n  const [query, setQuery] = useState('');\n  const apiUrl = process.env.REACT_APP_API_URL_SESSION;\n\n  const loadData = () => {\n    fetch(`${apiUrl}/MovieSession`)\n    .then(response => response.json())\n    .then(data => setData(data))\n    .catch(error => console.error(error));\n  }\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n  \n  const handleCloseModal = () => {\n    setShowModal(false); \n    setConfirmModal(false);\n  };\n  useEffect(() => { //load data on page load \n    loadData()\n  }, [filteredData, query]);\n\n  const handleUpdate = (id) => { //filter by id and pass to modal\n    setFilteredData(data.filter((sessionData) => sessionData.id === id));\n    // filteredData will now contain an array with only the movie data objects that match the given id\n    setShowModal(true);\n  };\n\n\n  const confirmModal = (id) => {\n    setFilteredData(data.filter((sessionData) => sessionData.id === id));\n    //delete modal\n    setConfirmModal(true); \n  }\n\n\n  const handleSubmit = (e)=> {//rename\n    e.preventDefault();\n    console.log(query)\n    fetch(`${apiUrl}/MovieSession?Movie=${query}`)\n      .then(response => response.json())\n      .then(data => setData(data))\n      .catch(error => console.error(error));\n  };\n\n  return (\n    <>\n      <div className=\"d-flex justify-content-end\">\n        <form className=\"input-group p-3\" style={{width : \"350px\"}}   onSubmit={handleSubmit}>\n          <input class=\"form-control border \" type={\"text\"} value={query} onChange={handleChange} ></input>\n        <button  className=\"btn btn-light\" type=\"submit\">search</button>\n        </form>\n    </div>\n    <table className=\"text-black\" style={{backgroundColor : \"whitesmoke\", width : '1000px'}}>\n      <thead>\n        <tr className=\"d-flex-column\" style={{backgroundColor : \"orange\"}}>\n        <th scope=\"col\" className=\"p-3\">Movie</th>\n          <th scope=\"col\">Room</th>\n          <th scope=\"col\">Date</th>\n          <th scope=\"col\">Start</th>\n          <th scope=\"col\">End</th>\n          <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody >\n      {data.length == 0 ?  (<p className=\"p-3\">No Matching Records</p>) : (\n        data?.map((session) => (\n          <>\n          <tr key={session.id}>\n            <td className=\"p-2\">{session.Movie}</td>\n            <td className=\"p-2\">{session.Room}</td>\n            <td className=\"p-2\">{session.Date}</td>\n            <td className=\"p-2\">{session.Start}</td>\n            <td className=\"p-2\">{session.End}</td>\n            <td>\n               <div className=\"d-flex align-items-center justify-content-end\"> \n                    <button type=\"button\" className=\"btn text-white m-1 \" style={{backgroundColor : \"royalblue\"}} onClick={() => handleUpdate(session.id)}>Update</button>\n                    <button type=\"button\" className=\"btn text-white m-1\" style={{backgroundColor : \"red\"}} onClick={() => confirmModal(session.id)}>Delete</button>\n               </div>\n               \n            </td>\n          </tr>\n          <tr>\n              <td colSpan=\"6\" className=\"border-bottom\"></td>\n          </tr>\n          </>\n        )))}\n      </tbody>\n    </table>\n    {showModal === true &&          \n          <UpdateSession\n          data={filteredData}\n          setData = {setFilteredData} //setData to reload parent\n          show={showModal}\n          handleClose={handleCloseModal}\n        />}\n    {showConfirmModal == true &&\n        <DeleteSession\n        data={filteredData}\n        setData = {setFilteredData}\n        show={showConfirmModal}\n        handleClose={handleCloseModal}/>\n    }\n</>\n  );\n}\n\nexport default ViewSession;\n\n\nconst UpdateSession = ({data, setData, show, handleClose}) => {\n  \n    const apiUrl_Room = process.env.REACT_APP_API_URL_ROOM;\n    const apiUrl_Movie = process.env.REACT_APP_API_URL_MOVIE;\n    const apiUrl_Session = process.env.REACT_APP_API_URL_SESSION;\n    const [formData, setFormData] = useState(data[0]);\n    const [movies, setMovies] = useState([])\n    const [rooms , setRooms] = useState([])\n\n  useEffect(() => { //load data on page load \n      fetch(`${apiUrl_Movie}/Movie`)\n      .then(response => response.json())\n      .then(data => {\n           const extractedMovies = data.map(item => item.Movie);\n           setMovies(extractedMovies);\n      })\n      .catch(error => console.error(error));\n\n      //fetch room too\n      fetch(`${apiUrl_Room}/Room`)\n      .then(response => response.json())\n      .then(data => {\n           const extractedRooms = data.map(item => item.Room);\n           setRooms(extractedRooms);\n      })\n      .catch(error => console.error(error));\n    }, []);\n\n  const handleEdit = (event) => {\n    const { id, value } = event.target;\n    setFormData((prevFormData) => ({ ...prevFormData, [id]: value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(`${apiUrl_Session}/MovieSession/${formData.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data)\n        setData(\"reload parent\")\n        handleClose();\n        \n      })\n      .catch((error) => console.error(error));\n     \n  }\n  return(\n    <>\n        <Modal show={show} onHide={handleClose}>\n        <Modal.Body>\n        <form onSubmit={handleSubmit}>\n        <div class=\"form-group\">\n            <label hmtlfor=\"Movie\" class=\"col-form-label\">Movie:</label>\n            <select className=\"form-select\" onChange={handleEdit} value={formData.Movie} id=\"Movie\">\n                {movies.map((option) => (\n                        <option key={option} value={option}>{option} </option>\n                    ))}\n            </select>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"Room\" class=\"col-form-label\">Room:</label>\n            <select className=\"form-select\" onChange={handleEdit} value={formData.Room} id=\"Room\">\n                {rooms.map((option) => (\n                        <option key={option} value={option}>{option} </option>\n                    ))}\n            </select>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"Date\" class=\"col-form-label\">Date:</label>\n            <input type=\"Date\" class=\"form-control\" min={new Date().toISOString().split('T')[0]} onChange={handleEdit} value={formData.Date} id=\"Date\"></input>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"Start\" class=\"col-form-label\">Start:</label>\n            <input type=\"time\" class=\"form-control\" onChange={handleEdit} value={formData.Start} id=\"Start\"></input>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"End\" class=\"col-form-label\">End:</label>\n            <input type=\"time\" class=\"form-control\" onChange={handleEdit} value={formData.End} id=\"End\"></input>\n          </div>\n          <button type=\"submit\">update</button>\n        </form>\n        </Modal.Body>\n        \n      </Modal>\n    </>\n  )\n}\n\nconst DeleteSession = ({data, setData, show, handleClose}) => {\n  const [id, setId] = useState(data[0].id)\n  const apiUrl_Room = process.env.REACT_APP_API_URL_ROOM;\n  const apiUrl_Movie = process.env.REACT_APP_API_URL_MOVIE;\n  const apiUrl_Session = process.env.REACT_APP_API_URL_SESSION;\n\n  const handleDelete = () => {\n    \n    fetch(`${apiUrl_Session}/MovieSession/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => response.json())\n      .then(data => \n        setData(\"reload\"))\n      .catch(error => console.error(error))\n\n    handleClose()\n  }\n\n  return(\n    <>\n    <Modal show={show} onHide={handleClose}>\n     <Modal.Body>\n          Confirm Delete Movie Session ? \n     </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleDelete}>\n          Yes {/*handle delete/update*/}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n    </>\n  )\n}","/Users/sheng/Documents/GitHub/SDMSS/src/Manager/view/ViewRoom.jsx",["216","217","218"],[],"import { useState, useEffect} from \"react\";\nimport UpdateModal from \"../UpdateModal\";\nimport ConfirmModal from \"../ConfirmModal\";\nfunction ViewRoom() {\n\n  const [showModal, setShowModal] = useState(false);\n  const [showConfirmModal, setConfirmModal] = useState(false);\n  const [data, setData] = useState([])\n  const [filteredData, setFilteredData] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const apiUrl = process.env.REACT_APP_API_URL_ROOM;\n\n  const loadData = () => {\n    fetch(`${apiUrl}/Room`)\n    .then(response => response.json())\n    .then(data => setData(data))\n    .catch(error => console.error(error));\n  }\n\n  useEffect(() => { //load data on page load \n    loadData()\n  }, [filteredData, query]);\n\n\n\n  const handleUpdate = (id) => { //filter by id and pass to modal\n    setFilteredData(data.filter((roomData) => roomData.id === id));\n    // filteredData will now contain an array with only the movie data objects that match the given id\n    setShowModal(true);\n  };\n\n  //for search \n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false); \n    setConfirmModal(false);\n  };\n\n  const confirmModal = (id) => {\n    setFilteredData(data.filter((roomData) => roomData.id === id));\n    //delete modal\n    setConfirmModal(true); \n  }\n\n  const handleSubmit = (e)=> {\n    e.preventDefault();\n    console.log(query)\n    fetch(`${apiUrl}/Room?Room=${query}`)\n      .then(response => response.json())\n      .then(data => setData(data))\n      .catch(error => console.error(error));\n  };\n\n  return (\n     <>\n      <div className=\"d-flex justify-content-end\">\n        <form className=\"input-group p-3\" style={{width : \"350px\"}}   onSubmit={handleSubmit}>\n          <input class=\"form-control border \" type={\"text\"} value={query} onChange={handleChange} ></input>\n        <button  className=\"btn btn-light\" type=\"submit\">search</button>\n        </form>\n      </div>\n    <table className=\"text-black\" style={{backgroundColor : \"whitesmoke\", width : '100%'}}>\n      <thead>\n        <tr className=\"d-flex-column\" style={{backgroundColor : \"orange\"}}>\n          <th scope=\"col\" className=\"p-3\">Room</th>\n          <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody >\n      {data.length == 0 ?  (<p className=\"p-3\">No Matching Records</p>) : (\n        data?.map((room) => (\n          <>\n          <tr key={room.No}>\n            <td className=\"p-4\">{room.Room}</td>\n            <td>\n               <div className=\"d-flex justify-content-end\"> \n                    <button type=\"button\" className=\"btn text-white m-1 \" style={{backgroundColor : \"royalblue\"}} onClick={()=>handleUpdate(room.id)}>Update</button>\n                    <button type=\"button\" className=\"btn text-white m-1\" style={{backgroundColor : \"red\"}}  onClick={() => confirmModal(room.id)}>Delete</button>\n               </div>\n            </td>\n          </tr>\n          <tr>\n              <td colSpan=\"2\" className=\"border-bottom\"></td>\n          </tr>\n          </>\n        )))}\n      </tbody>\n     </table>\n     {showModal === true && \n          <UpdateModal\n          type = \"ViewRoom\"\n          data={filteredData}\n          setData = {setFilteredData} //setData to reload parent\n          show={showModal}\n          handleClose={handleCloseModal}/>\n     }\n    {showConfirmModal == true &&\n        <ConfirmModal\n        type = \"delete\"\n        db = \"Room\"\n        data={filteredData}\n        setData ={setFilteredData}\n        show={showConfirmModal}\n        handleClose={handleCloseModal}/>\n    }\n     </>\n  );\n}\n\nexport default ViewRoom;\n","/Users/sheng/Documents/GitHub/SDMSS/src/Manager/ConfirmModal.jsx",["219","220","221","222","223"],[],"import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\nfunction ConfirmModal({type,db, data, setData, show, handleClose}) {\n  //if(Type == \"delete\" || Type == \"suspend\")\n  const [id, setId] = useState(data[0].id)\n  const apiUrl_Room = process.env.REACT_APP_API_URL_ROOM;\n  const apiUrl_Movie = process.env.REACT_APP_API_URL_MOVIE;\n  const apiUrl_Session = process.env.REACT_APP_API_URL_SESSION;\n  const handleDelete = () => {\n    //host \n    var host = \"\"\n    if (db == \"Movie\") { host =  apiUrl_Movie}\n    else if (db == \"MovieSession\") { host = apiUrl_Session}\n    else if (db == \"Room\") { host = apiUrl_Room};\n    \n    fetch(`${host}/${db}/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => response.json())\n      .then(data => \n        setData(\"reload\"))\n      .catch(error => console.error(error))\n\n    handleClose()\n  }\n  const handleSuspend = () => {\n    \n  }\n  return (\n    <Modal show={show} onHide={handleClose}>\n     <Modal.Body>\n          {type == \"delete\" ? \"Confirm Delete\" : \"Suspend User?\"}\n     </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={type === \"delete\" ? handleDelete : handleSuspend}>\n          Yes {/*handle delete/update*/}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default ConfirmModal;","/Users/sheng/Documents/GitHub/SDMSS/src/Manager/UpdateModal.jsx",["224","225","226","227"],[],"import React, { useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { useState } from \"react\";\n\nfunction UpdateModal({type,  data, setData, show, handleClose}) {\n  const apiUrl_Room = process.env.REACT_APP_API_URL_ROOM;\n  const apiUrl_Movie = process.env.REACT_APP_API_URL_MOVIE;\n  const apiUrl_Session = process.env.REACT_APP_API_URL_SESSION;\n  const [formData, setFormData] = useState(data[0]);\n  const [movies, setMovies] = useState([])\n  const [rooms , setRooms] = useState([])\n  \n  useEffect(() => { //load data on page load \n\n    if(type === \"ViewMovieSession\" || type ===\"ViewMovies\"){\n      fetch(`${apiUrl_Movie}/Movie`)\n      .then(response => response.json())\n      .then(data => {\n           const extractedMovies = data.map(item => item.Movie);\n           setMovies(extractedMovies);\n      })\n      .catch(error => console.error(error));\n\n      //fetch room too\n      fetch(`${apiUrl_Room}/Room`)\n      .then(response => response.json())\n      .then(data => {\n           const extractedRooms = data.map(item => item.Room);\n           setRooms(extractedRooms);\n      })\n      .catch(error => console.error(error));\n    }\n\n\n\n  }, []);\n\n  //view Movies\n  if(type === \"ViewMovies\"){\n\n  //changing movie name should change the name in session also\n  \n    \n  const handleEdit = (event) => {\n    const { id, value } = event.target;\n    setFormData((prevFormData) => ({ ...prevFormData, [id]: value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(`${apiUrl_Movie}/Movie/${formData.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setData(\"re-load parent\")\n        handleClose();\n      })\n      .catch((error) => console.error(error));\n     \n      \n      /* \n      console.log(data[0].Movie)\n      fetch(`http://localhost:4001/Movie?Movie=darkknight`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({Movie: \"apple\" }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(data)\n          // Handle the response data\n        })\n        .catch((error) => console.error(error));*/\n  }\n\n    return (\n      <Modal show={show} onHide={handleClose}>\n      <Modal.Body>\n      <form  onSubmit={handleSubmit}>\n          <div class=\"form-group\">\n            <label hmtlfor=\"id\"  class=\"col-form-label\">id:</label>\n            <input type=\"text\" disabled onChange={handleEdit}  value={formData.id} class=\"form-control\" id=\"id\"></input>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"Movie\" class=\"col-form-label\">Movie:</label>\n            <textarea class=\"form-control\" onChange={handleEdit} value={formData.Movie} id=\"Movie\"></textarea>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"Duration\" class=\"col-form-label\">Duration:</label>\n            <textarea class=\"form-control\" onChange={handleEdit} value={formData.Duration} id=\"Duration\"></textarea>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"Synopsis\" class=\"col-form-label\">Synopsis:</label>\n            <textarea class=\"form-control\" onChange={handleEdit} value={formData.Synopsis} id=\"Synopsis\"></textarea>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"AgeRating\" class=\"col-form-label\">Age Rating:</label>\n            <select className=\"form-select\" onChange={handleEdit} value={formData.AgeRating} id=\"AgeRating\">\n                  <option value=\"PG-13\">PG-12</option>\n                  <option value=\"PG\">PG</option>\n                  <option value=\"R21\">R21</option>\n            </select>\n          </div>\n          <button type=\"submit\">Update</button>\n        </form>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n\n  else if (type == \"ViewRoom\"){\n    \n    const handleEdit = (event) => {\n      const { id, value } = event.target;\n      setFormData((prevFormData) => ({ ...prevFormData, [id]: value }));\n    };\n  \n    const handleSubmit = (e) => {\n      e.preventDefault();\n      fetch(`${apiUrl_Room}/Room/${formData.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n            //window.location.reload();\n            setData(\"re-load parent\")\n            handleClose()\n        })\n        .catch((error) => console.error(error));\n       \n    }\n    return (\n    \n        <Modal show={show} onHide={handleClose}>\n     <Modal.Body>\n     <form  onSubmit={handleSubmit}>\n          <div  class=\"form-group\">\n            <label hmtlfor=\"Room\"  class=\"col-form-label\">Room:</label>\n            <input type=\"Room\" onChange={handleEdit}  value={formData.Room} class=\"form-control\" id=\"Room\"></input>\n          </div>\n          <button type=\"submit\">Update</button>\n        </form>\n        </Modal.Body>\n      </Modal>\n      \n    )\n  }\n\n  else if (type == \"ViewMovieSession\"){\n\n   // console.log(movies,rooms)\n    const handleEdit = (event) => {\n      const { id, value } = event.target;\n      setFormData((prevFormData) => ({ ...prevFormData, [id]: value }));\n    };\n  \n    const handleSubmit = (e) => {\n      e.preventDefault();\n      fetch(`${apiUrl_Session}/MovieSession/${formData.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"reload\")\n          setData(\"reload parent\")\n          handleClose();\n          \n        })\n        .catch((error) => console.error(error));\n       \n    }\n    return (\n    \n        <Modal show={show} onHide={handleClose}>\n        <Modal.Body>\n        <form onSubmit={handleSubmit}>\n        <div class=\"form-group\">\n            <label hmtlfor=\"Movie\" class=\"col-form-label\">Movie:</label>\n            <select className=\"form-select\" onChange={handleEdit} value={formData.Movie} id=\"Movie\">\n                {movies.map((option) => (\n                        <option key={option} value={option}>{option} </option>\n                    ))}\n            </select>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"Room\" class=\"col-form-label\">Room:</label>\n            <select className=\"form-select\" onChange={handleEdit} value={formData.Room} id=\"Room\">\n                {rooms.map((option) => (\n                        <option key={option} value={option}>{option} </option>\n                    ))}\n            </select>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"Date\" class=\"col-form-label\">Date:</label>\n            <input type=\"Date\" class=\"form-control\" min={new Date().toISOString().split('T')[0]} onChange={handleEdit} value={formData.Date} id=\"Date\"></input>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"Start\" class=\"col-form-label\">Start:</label>\n            <input type=\"time\" class=\"form-control\" onChange={handleEdit} value={formData.Start} id=\"Start\"></input>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"End\" class=\"col-form-label\">End:</label>\n            <input type=\"time\" class=\"form-control\" onChange={handleEdit} value={formData.End} id=\"End\"></input>\n          </div>\n          <button type=\"submit\">update</button>\n        </form>\n        </Modal.Body>\n        \n      </Modal>\n      \n    )\n  }\n}\nexport default UpdateModal;\n\n","/Users/sheng/Documents/GitHub/SDMSS/src/SystemAdmin/SystemAdminMain.jsx",["228","229"],[],"import { useState } from \"react\";\n\n//imports\nimport CreateUserAcc from \"./Create/CreateUserAcc\";\nimport ViewUserAcc from \"./View/ViewUserAcc\";\n\nfunction SystemAdmin() {\n  const [Option, setOption] = useState('Cuser');//set default val\n\n  const handleOptionChange = (event) => {\n       setOption(event.target.value);\n  };\n  return (\n    <>\n    <div style={{maxWidth : '1000px', margin : '0 auto'}}>\n         <div className=\"d-flex\">\n              <div className=\" text-white d-flex align-items-center text-left p-3 \">\n                   <p className=\"m-0\"  style={{width:'100px'}}>Toggle:</p>\n                   <select className=\"form-select\" value={Option} onChange={handleOptionChange}  style={{width:'200px'}}>\n                        <option value=\"Cuser\">Create User Account</option>\n                        <option value=\"Vuser\">View User Account</option>\n                        <option value=\"Cprofile\">Create User Profile</option>\n                        <option value=\"Vprofile\">View User Profile</option>\n                   </select>\n              </div>\n         </div>\n\n         <div style={{width : '100%'}}>\n              {Option == \"Cuser\" && <CreateUserAcc/>}\n              {Option == \"Vuser\" && <ViewUserAcc/>}\n         </div>\n\n    </div>\n\n    </>\n  );\n}\n\nexport default SystemAdmin;\n","/Users/sheng/Documents/GitHub/SDMSS/src/SystemAdmin/View/ViewUserAcc.jsx",["230","231"],[],"import { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nfunction ViewUserAcc(){\n  const [showModal, setShowModal] = useState(false);\n  const [showConfirmModal, setConfirmModal] = useState(false);\n  const [data, setData] = useState([])\n  const [filteredData, setFilteredData] = useState([]);\n  const [query, setQuery] = useState('');\n  const [type, setType] = useState('');\n\n  const apiUrl = process.env.REACT_APP_API_URL_USERACC;\n\n  const loadData = () => {\n    fetch(`${apiUrl}/User`)\n    .then(response => response.json())\n    .then(data => {\n      setData(data)\n    })\n    .catch(error => console.error(error));\n  }\n\n  useEffect(() => { //load data on page load \n    loadData()\n  }, [filteredData, query]);\n\n\n  const handleUpdate = (id) => { //filter by id and pass to modal\n    setFilteredData(data.filter((userData) => userData.id === id));\n    // filteredData will now contain an array with only the movie data objects that match the given id\n    setShowModal(true);\n  };\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false); \n    setConfirmModal(false);\n    setType('');\n  };\n\n  const confirmModal = (id, status) => {\n    setFilteredData(data.filter((userData) => userData.id === id));\n    //delete modal\n    if (status === \"Active\") {\n      setType(\"suspend\")\n    }\n    else {\n      setType(\"unsuspend\")\n    }\n    setConfirmModal(true); \n  }\n\n  const handleSubmit = (e)=> {\n    e.preventDefault();\n    fetch(`${apiUrl}/User?Email=${query}`)\n      .then(response => response.json())\n      .then(data => setData(data))\n      .catch(error => console.error(error));\n  };\n\n   console.log(data)\n     return(\n      <>\n       <div className=\"d-flex justify-content-end\">\n        <form className=\"input-group p-3\" style={{width : \"350px\"}}   onSubmit={handleSubmit}>\n          <input class=\"form-control border \" type={\"text\"} value={query} onChange={handleChange} ></input>\n        <button  className=\"btn btn-light\" type=\"submit\">search</button>\n        </form>\n      </div>\n      <table className=\"text-black\" style={{backgroundColor : \"whitesmoke\", width : '1000px'}}>\n      <thead>\n        <tr className=\"d-flex-column\" style={{backgroundColor : \"orange\"}}>\n          <th scope=\"col\">Email</th>\n          <th scope=\"col\">Account Type</th>\n          <th scope=\"col\">Status</th>\n          <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.length == 0 ?  (<p className=\"p-3\">No Matching Records</p>) : (\n        data?.map((acc) => (\n          <>\n          <tr key={acc.Email}>\n            <td className=\"p-2\">{acc.Email}</td>\n            <td className=\"p-2\">{acc.Type}</td>\n            <td className='p-2' style={{ color: acc.Status === \"Active\" ? \"royalblue\" : \"red\"}}>{acc.Status}</td>\n            <td>\n              <div className=\"d-flex align-items-center justify-content-end\"> \n                    <button type=\"button\" className=\"btn text-white m-1 \" style={{backgroundColor : \"royalblue\"}}\n                        onClick={() => handleUpdate(acc.id)}>\n                        Update\n                      </button>\n                  <button type=\"button\" className=\"btn text-white m-1\" style={{backgroundColor : \"red\"}} onClick={()=> confirmModal(acc.id, \"delete\")}>Delete</button>\n                    <button type=\"button\" className=\"btn text-white m-1\" style={{backgroundColor : \"red\"}} onClick={()=> confirmModal(acc.id, acc.Status)}>{acc.Status === \"Active\" ? \"Suspend\" : \"Unsuspend\"}</button>\n               </div>\n            </td>\n          </tr>\n          <tr>\n              <td colSpan=\"6\" className=\"border-bottom\"></td>\n          </tr>\n          </>\n        ))) }\n      </tbody>\n     </table>\n     {showModal === true  && \n      <UpdateUserAccount\n        data={filteredData}\n        setData = {setFilteredData} //setData to reload parent\n        show={showModal}\n        handleClose={handleCloseModal}/>\n     }\n      {showConfirmModal === true && type === \"delete\" &&\n     <DeleteUserAcc\n          data={filteredData}\n          setData = {setFilteredData}\n          show={showConfirmModal}\n          handleClose={handleCloseModal}/>\n      }\n      {showConfirmModal === true && (type === \"suspend\" || type === \"unsuspend\") &&\n     <SuspendUserAcc\n          type = {type}\n          data={filteredData}\n          setData = {setFilteredData}\n          show={showConfirmModal}\n          handleClose={handleCloseModal}/>\n      }\n     </>\n     );\n}\n\nexport default ViewUserAcc;\n\n\nconst UpdateUserAccount = ({data, setData, show, handleClose}) => {\n  const apiUrl_User = process.env.REACT_APP_API_URL_USERACC;\n  const [formData, setFormData] = useState(data[0]);\n  \n  /*alternate way\n  const [user , setUser] = useState([]);\n  useEffect(() => { //load data on page load \n    fetch(`${apiUrl_User}/User`)\n    .then(response => response.json())\n    .then(data => {\n          const extractedEmail = data.map(item => item.Email);\n          setUser(extractedEmail);\n    })\n    .catch(error => console.error(error));\n  });*/\n  \n  const handleEdit = (event) => {\n    const { id, value } = event.target;\n    setFormData((prevFormData) => ({ ...prevFormData, [id]: value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    fetch(`${apiUrl_User}/User/${formData.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setData(\"re-load parent\")\n        handleClose();\n        \n      })\n      .catch((error) => console.error(error));\n  }\n  return(\n    <>\n      <Modal show={show} onHide={handleClose}>\n      <Modal.Body>\n      <form  onSubmit={handleSubmit}>\n          <div class=\"form-group\">\n            <label hmtlfor=\"Email\"  class=\"col-form-label\">Email:</label>\n            <input type=\"text\" onChange={handleEdit}  value={formData.Email} class=\"form-control\" id=\"Email\"></input>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"Status\" class=\"col-form-label\">Status:</label>\n            <textarea class=\"form-control\" onChange={handleEdit} value={formData.Status} id=\"Status\"></textarea>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"Type\" class=\"col-form-label\">Type</label>\n            <select className=\"form-select\" onChange={handleEdit} value={formData.Type} id=\"Type\">\n            <option value=\"Customer\">Customer</option>\n                    <option value=\"System Admin\">System Admin</option>\n                    <option value=\"Manager\">Manager</option>\n                    <option value=\"Staff\">Staff</option>\n            </select>\n          </div>\n          <button type=\"submit\">Update</button>\n       </form>\n      </Modal.Body>\n      </Modal>\n\n    </>\n  )\n}\n\nconst DeleteUserAcc = ({data, setData, show , handleClose}) => {\n  const apiUrl_User = process.env.REACT_APP_API_URL_USERACC;\n\n  const handleDelete = e =>{\n    fetch(`${apiUrl_User}/User/${data[0].id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => response.json())\n      .then(data => \n        setData(\"reload\"))\n      .catch(error => console.error(error))\n\n    handleClose()\n  }\n  return(\n    <>\n    <Modal show={show} onHide={handleClose}>\n     <Modal.Body>\n          Confirm Delete User ?\n     </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleDelete}>\n          Yes {/*handle delete/update*/}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n\n    </>\n  )\n}\n\nconst SuspendUserAcc = ({type, data, setData, show , handleClose}) => {\n  const apiUrl_User = process.env.REACT_APP_API_URL_USERACC;\n\n  const handleDelete = e =>{\n    if (type === \"unsuspend\"){\n      fetch(`${apiUrl_User}/User/${data[0].id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify( {...data[0], Status : \"Active\"}),\n      })\n        .then(response => response.json())\n        .then(data => \n          setData(\"reload\"))\n        .catch(error => console.error(error))\n\n      handleClose()\n    }\n    else {\n      fetch(`${apiUrl_User}/User/${data[0].id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify( {...data[0], Status : \"Suspended\"}),\n      })\n        .then(response => response.json())\n        .then(data => \n          setData(\"reload\"))\n        .catch(error => console.error(error))\n\n      handleClose()\n    }\n  } \n  return(\n    <>\n    <Modal show={show} onHide={handleClose}>\n     <Modal.Body>\n          {type === \"suspend\" ?  \"Confirm Suspend User ?\" : \"Confirm Unsuspend User ?\"}\n     </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleDelete}>\n          Yes {/*handle delete/update*/}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n    </>\n  )\n}","/Users/sheng/Documents/GitHub/SDMSS/src/SystemAdmin/Create/CreateUserAcc.jsx",[],[],{"ruleId":"232","severity":1,"message":"233","line":55,"column":29,"nodeType":"234","endLine":55,"endColumn":56},{"ruleId":"235","severity":1,"message":"236","line":63,"column":17,"nodeType":"234","endLine":63,"endColumn":130},{"ruleId":"237","severity":1,"message":"238","line":59,"column":116,"nodeType":"239","messageId":"240","endLine":59,"endColumn":118},{"ruleId":"235","severity":1,"message":"241","line":29,"column":41,"nodeType":"234","endLine":29,"endColumn":106},{"ruleId":"235","severity":1,"message":"241","line":38,"column":62,"nodeType":"234","endLine":38,"endColumn":127},{"ruleId":"242","severity":1,"message":"243","line":8,"column":24,"nodeType":"244","messageId":"245","endLine":8,"endColumn":37},{"ruleId":"242","severity":1,"message":"246","line":3,"column":10,"nodeType":"244","messageId":"245","endLine":3,"endColumn":18},{"ruleId":"242","severity":1,"message":"247","line":2,"column":23,"nodeType":"244","messageId":"245","endLine":2,"endColumn":27},{"ruleId":"242","severity":1,"message":"248","line":3,"column":26,"nodeType":"244","messageId":"245","endLine":3,"endColumn":32},{"ruleId":"242","severity":1,"message":"249","line":3,"column":35,"nodeType":"244","messageId":"245","endLine":3,"endColumn":40},{"ruleId":"242","severity":1,"message":"250","line":3,"column":42,"nodeType":"244","messageId":"245","endLine":3,"endColumn":48},{"ruleId":"242","severity":1,"message":"251","line":3,"column":50,"nodeType":"244","messageId":"245","endLine":3,"endColumn":56},{"ruleId":"242","severity":1,"message":"252","line":18,"column":12,"nodeType":"244","messageId":"245","endLine":18,"endColumn":20},{"ruleId":"242","severity":1,"message":"253","line":19,"column":12,"nodeType":"244","messageId":"245","endLine":19,"endColumn":22},{"ruleId":"254","severity":1,"message":"255","line":68,"column":25,"nodeType":"256","messageId":"257","endLine":68,"endColumn":27},{"ruleId":"254","severity":1,"message":"255","line":69,"column":25,"nodeType":"256","messageId":"257","endLine":69,"endColumn":27},{"ruleId":"254","severity":1,"message":"255","line":70,"column":24,"nodeType":"256","messageId":"257","endLine":70,"endColumn":26},{"ruleId":"254","severity":1,"message":"255","line":71,"column":24,"nodeType":"256","messageId":"257","endLine":71,"endColumn":26},{"ruleId":"254","severity":1,"message":"255","line":72,"column":24,"nodeType":"256","messageId":"257","endLine":72,"endColumn":26},{"ruleId":"254","severity":1,"message":"255","line":73,"column":24,"nodeType":"256","messageId":"257","endLine":73,"endColumn":26},{"ruleId":"258","severity":1,"message":"259","line":44,"column":9,"nodeType":"260","endLine":44,"endColumn":11,"suggestions":"261"},{"ruleId":"242","severity":1,"message":"262","line":46,"column":12,"nodeType":"244","messageId":"245","endLine":46,"endColumn":22},{"ruleId":"258","severity":1,"message":"263","line":22,"column":6,"nodeType":"260","endLine":22,"endColumn":26,"suggestions":"264"},{"ruleId":"254","severity":1,"message":"255","line":74,"column":20,"nodeType":"256","messageId":"257","endLine":74,"endColumn":22},{"ruleId":"254","severity":1,"message":"255","line":107,"column":23,"nodeType":"256","messageId":"257","endLine":107,"endColumn":25},{"ruleId":"242","severity":1,"message":"265","line":123,"column":9,"nodeType":"244","messageId":"245","endLine":123,"endColumn":23},{"ruleId":"242","severity":1,"message":"266","line":125,"column":10,"nodeType":"244","messageId":"245","endLine":125,"endColumn":16},{"ruleId":"242","severity":1,"message":"267","line":126,"column":10,"nodeType":"244","messageId":"245","endLine":126,"endColumn":15},{"ruleId":"258","severity":1,"message":"268","line":145,"column":6,"nodeType":"260","endLine":145,"endColumn":8,"suggestions":"269"},{"ruleId":"242","severity":1,"message":"270","line":208,"column":14,"nodeType":"244","messageId":"245","endLine":208,"endColumn":19},{"ruleId":"242","severity":1,"message":"271","line":3,"column":8,"nodeType":"244","messageId":"245","endLine":3,"endColumn":20},{"ruleId":"258","severity":1,"message":"263","line":30,"column":6,"nodeType":"260","endLine":30,"endColumn":27,"suggestions":"272"},{"ruleId":"254","severity":1,"message":"255","line":75,"column":20,"nodeType":"256","messageId":"257","endLine":75,"endColumn":22},{"ruleId":"254","severity":1,"message":"255","line":106,"column":23,"nodeType":"256","messageId":"257","endLine":106,"endColumn":25},{"ruleId":"258","severity":1,"message":"268","line":146,"column":8,"nodeType":"260","endLine":146,"endColumn":10,"suggestions":"273"},{"ruleId":"242","severity":1,"message":"270","line":215,"column":14,"nodeType":"244","messageId":"245","endLine":215,"endColumn":19},{"ruleId":"242","severity":1,"message":"274","line":216,"column":9,"nodeType":"244","messageId":"245","endLine":216,"endColumn":20},{"ruleId":"242","severity":1,"message":"275","line":217,"column":9,"nodeType":"244","messageId":"245","endLine":217,"endColumn":21},{"ruleId":"258","severity":1,"message":"263","line":23,"column":6,"nodeType":"260","endLine":23,"endColumn":27,"suggestions":"276"},{"ruleId":"254","severity":1,"message":"255","line":74,"column":20,"nodeType":"256","messageId":"257","endLine":74,"endColumn":22},{"ruleId":"254","severity":1,"message":"255","line":101,"column":23,"nodeType":"256","messageId":"257","endLine":101,"endColumn":25},{"ruleId":"242","severity":1,"message":"270","line":6,"column":14,"nodeType":"244","messageId":"245","endLine":6,"endColumn":19},{"ruleId":"254","severity":1,"message":"255","line":13,"column":12,"nodeType":"256","messageId":"257","endLine":13,"endColumn":14},{"ruleId":"254","severity":1,"message":"255","line":14,"column":17,"nodeType":"256","messageId":"257","endLine":14,"endColumn":19},{"ruleId":"254","severity":1,"message":"255","line":15,"column":17,"nodeType":"256","messageId":"257","endLine":15,"endColumn":19},{"ruleId":"254","severity":1,"message":"255","line":36,"column":17,"nodeType":"256","messageId":"257","endLine":36,"endColumn":19},{"ruleId":"242","severity":1,"message":"277","line":2,"column":17,"nodeType":"244","messageId":"245","endLine":2,"endColumn":23},{"ruleId":"258","severity":1,"message":"278","line":36,"column":6,"nodeType":"260","endLine":36,"endColumn":8,"suggestions":"279"},{"ruleId":"254","severity":1,"message":"255","line":118,"column":17,"nodeType":"256","messageId":"257","endLine":118,"endColumn":19},{"ruleId":"254","severity":1,"message":"255","line":160,"column":17,"nodeType":"256","messageId":"257","endLine":160,"endColumn":19},{"ruleId":"254","severity":1,"message":"255","line":29,"column":23,"nodeType":"256","messageId":"257","endLine":29,"endColumn":25},{"ruleId":"254","severity":1,"message":"255","line":30,"column":23,"nodeType":"256","messageId":"257","endLine":30,"endColumn":25},{"ruleId":"258","severity":1,"message":"263","line":25,"column":6,"nodeType":"260","endLine":25,"endColumn":27,"suggestions":"280"},{"ruleId":"254","severity":1,"message":"255","line":83,"column":22,"nodeType":"256","messageId":"257","endLine":83,"endColumn":24},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-unused-vars","'setitemstatus' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","'Switch' is defined but never used.","'navigate' is assigned a value but never used.","'currentUrl' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadMoviesnRooms'. Either include it or remove the dependency array.","ArrayExpression",["281"],"'formatTime' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.",["282"],"'apiUrl_Session' is assigned a value but never used.","'movies' is assigned a value but never used.","'rooms' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'apiUrl_Movie' and 'apiUrl_Room'. Either include them or remove the dependency array.",["283"],"'setId' is assigned a value but never used.","'ConfirmModal' is defined but never used.",["284"],["285"],"'apiUrl_Room' is assigned a value but never used.","'apiUrl_Movie' is assigned a value but never used.",["286"],"'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'apiUrl_Movie', 'apiUrl_Room', and 'type'. Either include them or remove the dependency array.",["287"],["288"],{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"291","fix":"295"},{"desc":"293","fix":"296"},{"desc":"291","fix":"297"},{"desc":"298","fix":"299"},{"desc":"291","fix":"300"},"Update the dependencies array to be: [loadMoviesnRooms]",{"range":"301","text":"302"},"Update the dependencies array to be: [filteredData, loadData, query]",{"range":"303","text":"304"},"Update the dependencies array to be: [apiUrl_Movie, apiUrl_Room]",{"range":"305","text":"306"},{"range":"307","text":"304"},{"range":"308","text":"306"},{"range":"309","text":"304"},"Update the dependencies array to be: [apiUrl_Movie, apiUrl_Room, type]",{"range":"310","text":"311"},{"range":"312","text":"304"},[1444,1446],"[loadMoviesnRooms]",[671,691],"[filteredData, loadData, query]",[4924,4926],"[apiUrl_Movie, apiUrl_Room]",[893,914],[4975,4977],[702,723],[1171,1173],"[apiUrl_Movie, apiUrl_Room, type]",[725,746]]