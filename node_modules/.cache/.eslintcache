[{"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\index.js":"1","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\App.js":"2","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\GlobalStore.js":"3","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\Login.js":"4","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\User.js":"5","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\Home.js":"6","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\ReviewRating.js":"7","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\CreateAccount.js":"8","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\Staff.js":"9","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\LoyaltyPage.js":"10","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\LoyaltyTransaction.js":"11","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\FoodAndDrink.js":"12","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\NavBar.js":"13","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\Reducer.js":"14","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\NavBarUser.js":"15","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\GetReviewRating.js":"16","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\AdoptList.js":"17","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\NavBarStaff.js":"18","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\ReleaseList.js":"19","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\StaffSetLoyaltyTransaction.js":"20","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\TestWater.js":"21","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\BookTicket.js":"22","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\viewSession.jsx":"23"},{"size":234,"mtime":1683098684863,"results":"24","hashOfConfig":"25"},{"size":1899,"mtime":1683527933358,"results":"26","hashOfConfig":"25"},{"size":1410,"mtime":1683098684853,"results":"27","hashOfConfig":"25"},{"size":4750,"mtime":1683393496321,"results":"28","hashOfConfig":"25"},{"size":7854,"mtime":1683527947242,"results":"29","hashOfConfig":"25"},{"size":6374,"mtime":1683137672509,"results":"30","hashOfConfig":"25"},{"size":4767,"mtime":1683393496329,"results":"31","hashOfConfig":"25"},{"size":4164,"mtime":1683393496318,"results":"32","hashOfConfig":"25"},{"size":3103,"mtime":1683530970983,"results":"33","hashOfConfig":"25"},{"size":6823,"mtime":1683534346636,"results":"34","hashOfConfig":"25"},{"size":1803,"mtime":1683534202152,"results":"35","hashOfConfig":"25"},{"size":3566,"mtime":1683393496320,"results":"36","hashOfConfig":"25"},{"size":492,"mtime":1683098684855,"results":"37","hashOfConfig":"25"},{"size":558,"mtime":1683098684857,"results":"38","hashOfConfig":"25"},{"size":2221,"mtime":1683393496326,"results":"39","hashOfConfig":"25"},{"size":739,"mtime":1683123162823,"results":"40","hashOfConfig":"25"},{"size":623,"mtime":1683098684850,"results":"41","hashOfConfig":"25"},{"size":503,"mtime":1683098684856,"results":"42","hashOfConfig":"25"},{"size":763,"mtime":1683098684859,"results":"43","hashOfConfig":"25"},{"size":3782,"mtime":1683393496334,"results":"44","hashOfConfig":"25"},{"size":964,"mtime":1683469878506,"results":"45","hashOfConfig":"25"},{"size":3855,"mtime":1683529054277,"results":"46","hashOfConfig":"25"},{"size":10761,"mtime":1683530453540,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xi3c6n",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"61"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"61"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\index.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\App.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\GlobalStore.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\Login.js",["128"],[],"import React from 'react';\r\nimport { createSearchParams, Link } from 'react-router-dom';\r\nimport '../w3.css';\r\nimport NavBar from './NavBar';\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport  Modal  from 'react-modal'\r\n\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      backgroundColor       : '#4f4747'\r\n    }\r\n};\r\n\r\nconst Login = () => {\r\n\r\n    const [username, setusername] = useState('');\r\n    const [password, setpassword] = useState('');\r\n    const [dbuser, setdbuser] = useState([]);\r\n    const [modalIsOpen4, setModalIsOpen4] = useState(false);\r\n    const history = useNavigate();\r\n    var successaccess = false;\r\n    var accounttype = \" \";\r\n    var loyaltypoint = \" \";\r\n    var seatpref = \" \";\r\n    var id = \" \";\r\n\r\n    useEffect(()=>{\r\n        fetch('http://localhost:8005/user')\r\n        .then(res =>{\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setdbuser(data);\r\n            console.log(data);\r\n        });\r\n    },[]);\r\n\r\n    const handleSubmit2 = () =>{\r\n        setModalIsOpen4(false)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n            e.preventDefault();\r\n            dbuser.filter(record => record.username === username && record.password === password).map(filterrecord =>{\r\n\r\n                successaccess = true\r\n                console.log(filterrecord.name)\r\n                console.log(filterrecord.acctype)\r\n                console.log(\"Log In Successfully\")\r\n                accounttype = filterrecord.acctype\r\n                loyaltypoint = filterrecord.loyaltypoint\r\n                seatpref = filterrecord.seatpref\r\n                id = filterrecord.id\r\n\r\n                \r\n            })\r\n\r\n            if (successaccess) {\r\n\r\n                if (accounttype === \"customer\"){\r\n\r\n                    console.log(\"redirect to customer page\");\r\n                    history('/user', {state:{username, loyaltypoint, seatpref, id}});\r\n                    //history({pathname: '/user', search: createSearchParams({id:username}).toString()});\r\n\r\n                } else if (accounttype === \"staff\"){\r\n                    console.log(\"redirect to staff page\");\r\n                    history('/staff', {state:{username}});\r\n                    \r\n                }\r\n                \r\n            } else {\r\n                setModalIsOpen4(true);\r\n            }\r\n            \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n\r\n            {/* <!-- Page content --> */}\r\n            <div className=\"w3-content w3-padding w3-center\" style={{width:\"60%\"}}>\r\n                \r\n                {/* <!-- Log in Section --> */}\r\n                <div className=\"w3-container w3-margin-top\" id=\"login\">\r\n                    <div className=\"w3-padding-32\">\r\n                        <h1 className=\"w3-border-bottom w3-border-teal w3-padding-64\">Sign In</h1>\r\n\r\n                        <form onSubmit={handleSubmit} className=\"w3-padding-32\">\r\n                            <input value={username} placeholder=\"Username\" onChange={(e)=> setusername(e.target.value)}className=\"w3-input w3-section w3-border w3-round\" type=\"text\" required name=\"Username\"/>\r\n                            <input type=\"password\" value={password} placeholder=\"Password\" onChange={(e)=> setpassword(e.target.value)} className=\"w3-input w3-section w3-border w3-round\" required name=\"Password\"/>\r\n                            <div className=\"w3-center w3-padding-large w3-padding-32\">\r\n                                \r\n                                <button className=\"w3-button w3-teal w3-round-large w3-margin-top\">SIGN IN</button>\r\n                                <Link to='/createaccount' className=\"w3-button w3-light-grey w3-round-large w3-margin-top\">CREATE A NEW ACCOUNT</Link>\r\n                                \r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* <!-- End page content --> */}\r\n            </div>\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen4}\r\n                onRequestClose={() => setModalIsOpen4(false)}\r\n                style={customStyles} >\r\n\r\n                <h1>Incorrect Username Or Password</h1>\r\n                <div className=\"Iwantaligncenter\">\r\n                    <button className='w3-button w3-light-grey w3-round-large w3-margin-top' onClick={handleSubmit2}>Close</button>\r\n                </div>\r\n            </Modal>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login",[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\User.js",["129","130","131"],[],"import React from 'react';\r\nimport NavBarUser from './NavBarUser';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst User = () => {\r\n\r\n    const location = useLocation();\r\n    const history = useNavigate();\r\n    const username = location.state.username;\r\n    var loyaltypoint = location.state.loyaltypoint;\r\n    var seatpref = location.state.seatpref;\r\n    var id = location.state.id;\r\n    \r\n\r\n    const handleSubmit = () => {\r\n        console.log(\"redirect to food and drink page\");\r\n        history('/foodanddrink', {state:{username, loyaltypoint, seatpref, id}});\r\n    }\r\n\r\n    const handleSubmit2 = () => {\r\n        console.log(\"redirect to food and drink page\");\r\n        history('/bookticket', {state:{username, loyaltypoint, seatpref, id}});\r\n    }\r\n\r\n    return (\r\n        <>\r\n        \r\n        <NavBarUser />\r\n        \r\n        <div>\r\n            <h3>{username}</h3>\r\n            <h3>{loyaltypoint}</h3>\r\n            <h3>{seatpref}</h3>\r\n            <h3>{id}</h3>\r\n        </div>\r\n\r\n        <div className=\"w3-padding\">\r\n\r\n            <div className=\" \" id=\"pets\">\r\n                \r\n                <div className='w3-border-top w3-border-dark-grey' ></div>\r\n\r\n                <div className=\"w3-row w3-padding-32\">    \r\n\r\n                    \r\n                    <div className=\"w3-third w3-padding-16\">\r\n                        <div className=\"w3-padding-top-64\">\r\n                        <div className=\"w3-padding-top-64\">\r\n                            <div className=\"w3-row-padding w3-padding-16\">\r\n                                    <div className=\"w3-half w3-padding-16\">\r\n                                        <h3 className=\"\">Book Ticket</h3>\r\n                                        <h3 className=\"w3-text-amber\">Now</h3>\r\n                                    </div>\r\n                                    <div className=\"w3-half w3-padding-top-64\">\r\n                                        \r\n                                        <a onClick={handleSubmit2} className=\"w3-button w3-deep-orange w3-round-medium\" href=\"\">Book</a>\r\n                                    </div>\r\n                            </div>\r\n                            <div className=\"w3-row-padding w3-padding-16\">\r\n                                    <div className=\"w3-half w3-padding-16\">\r\n                                        <h3 className=\"\">Buy Food & Drink</h3>\r\n                                        <h3 className=\"w3-text-amber\">Here</h3>\r\n                                    </div>\r\n                                    <div className=\"w3-half w3-padding-top-64\">\r\n                                    <a onClick={handleSubmit} className=\"w3-button w3-deep-orange w3-round-medium\" href=\"\">Order</a>\r\n                                    \r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"w3-twothird w3-padding-16\">\r\n                        \r\n                        <div className=\"w3-row-padding w3-padding-16\">\r\n                            <h3 className=\"w3-border-bottom w3-border-light-grey\" style={{maxWidth:\"170px\"}}>Now Showing</h3>\r\n                    \r\n                            <div className=\"w3-col l4 m8 w3-margin-bottom w3-padding-16\">\r\n                                <img src={require(\"../pics/blacky.jpg\")} alt=\"blacky\" className=\"\" style={{width:\"100%\"}}/>\r\n                                <div className='w3-dark-grey w3-padding' style={{minHeight:\"400px\"}}>\r\n                                    <h3>Blacky</h3>\r\n                                    <p className=\"w3-opacity w3-large\">The AZoom team makes the experience of car-renting relatively stress-free. They are an awesome group of people to work with - quick to respond, always ready to help, positive and open to suggestions for improvements. Keep up the good work!</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"w3-col l4 m8 w3-margin-bottom w3-padding-16\">\r\n                                <img src={require(\"../pics/colin.jpg\")} alt=\"colin\" className=\"\" style={{width:\"100%\"}}/>\r\n                                <div className='w3-dark-grey w3-padding' style={{minHeight:\"400px\"}}>\r\n                                    <h3>Blacky</h3>\r\n                                    <p className=\"w3-opacity w3-large\">The AZoom team makes the experience of car-renting relatively stress-free. They are an awesome group of people to work with - quick to respond, always ready to help, positive and open to suggestions for improvements. Keep up the good work!</p>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <div className=\"w3-col l4 m8 w3-margin-bottom w3-padding-16\">\r\n                                <img src={require(\"../pics/goldy.jpg\")} alt=\"goldy\" className=\"\" style={{width:\"100%\"}}/>\r\n                                <div className='w3-dark-grey w3-padding' style={{minHeight:\"400px\"}}>\r\n                                    <h3>Blacky</h3>\r\n                                    <p className=\"w3-opacity w3-large\">The AZoom team makes the experience of car-renting relatively stress-free. They are an awesome group of people to work with - quick to</p>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className=\" \" id=\"pets\">\r\n                \r\n                <div className='w3-border-top w3-border-dark-grey' ></div>\r\n\r\n                <div className=\"w3-container w3-padding-32\" id=\"reviews\">\r\n                    <h3 className=\"w3-padding-16 w3-xxlarge\">What our customer are saying about us</h3>\r\n\r\n                    <div className=\"w3-panel w3-leftbar w3-dark-grey w3-round\">\r\n                        <p><i>\"The AZoom team makes the experience of car-renting relatively stress-free. They are an awesome group of people to work with - quick to respond, always ready to help, positive and open to suggestions for improvements. Keep up the good work! 👍\"</i></p>\r\n                        <p>Albert Tan</p>\r\n                    </div>\r\n\r\n                    <div className=\"w3-panel w3-leftbar w3-dark-grey w3-round\">\r\n                        <p><i>\"AZoom has a great and very responsive customer service team. It is an easy and hassle-free platform for me to rent an eletric car. No confusion and is clear-cut.\"</i></p>\r\n                        <p>Shimei He</p>\r\n                    </div>\r\n\r\n                    <div className=\"w3-panel w3-leftbar w3-dark-grey w3-round\">\r\n                        <p><i>\"Convenient way to rent an eletric car. Hassle free! :)\"</i></p>\r\n                        <p>Jonathan Lai</p>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            {/* <!-- location/map --> */}\r\n            <div className=\"w3-container w3-padding-32\" id=\"location\">\r\n                <h1 className=\"w3-border-bottom w3-border-dark-grey w3-padding-16\">Come visit us at Jurong East.</h1>\r\n                \r\n                <div className='w3-center w3-padding-32'>\r\n                    <h4 className=\"w3-padding-16\">21 Jurong East 3, #34, Singapore 123456 </h4>\r\n                    <img src={require(\"../pics/location.PNG\")} alt=\"location\" className=\"w3-round\" style={{width:\"900px\", height:\"500px\"}}/>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default User","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\Home.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\ReviewRating.js",["132"],[],"import React from 'react';\r\nimport GetReviewRating from './GetReviewRating';\r\nimport NavBarUser from './NavBarUser';\r\nimport  Modal  from 'react-modal'\r\nimport { useState } from 'react';\r\nimport { BsHouse } from 'react-icons/bs';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      backgroundColor       : '#4f4747'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst ReviewRating = () => {\r\n    const [feedback, setFeedback] = useState('');\r\n    const [rating, setRating] = useState(1);\r\n    const [modalIsOpen3, setModalIsOpen3] = useState(false);\r\n    const [modalIsOpen4, setModalIsOpen4] = useState(false);\r\n    const [isPending, setIsPending] = useState(false);\r\n    const history = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const handleSubmit2 = (e) =>{\r\n        history('/user');\r\n        setModalIsOpen4(false)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        const review = { feedback, rating };\r\n        setIsPending(true);\r\n\r\n        fetch('http://localhost:8002/reviews',{\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(review)\r\n        }).then(()=>{\r\n            console.log(\"new review added\");\r\n            setIsPending(false);\r\n            setModalIsOpen3(false);\r\n            setModalIsOpen4(true);\r\n            //history(-1);\r\n            //history('/user');\r\n            \r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        \r\n        <NavBarUser />\r\n\r\n        <div className='w3-row w3-margin'>\r\n            <h3 class=\"w3-twothird w3-container w3-xxlarge w3-border-bottom w3-border-light-grey\" style={{maxWidth:\"\"}}>Review and Rating Section</h3>\r\n            <div className='w3-third w3-container w3-cell w3-cell-middle '>\r\n                <a className='w3-right w3-button w3-deep-orange w3-round-medium w3-margin' onClick={() => setModalIsOpen3(true)}> Submit Review & Feedback</a>\r\n            </div>\r\n\r\n        </div>\r\n        \r\n        \r\n        <Modal\r\n            isOpen={modalIsOpen3}\r\n            onRequestClose={() => setModalIsOpen3(false)}\r\n            style={customStyles} >\r\n            \r\n            <h1 className=\"w3-xxlarge\">Submit Review and Rating <BsHouse /></h1>\r\n            <p className='w3-center'>Your feedback is important to us!!! <br></br>Do let us know what can we improve further.</p>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <label className=\"w3-left w3-xlarge\" >Feedback:</label>\r\n                <textarea\r\n                    className=\"w3-input w3-section w3-border w3-round\"\r\n                    type=\"text\" \r\n                    required\r\n                    value={feedback}\r\n                    onChange={(e) => setFeedback(e.target.value)}\r\n                    />\r\n                <label className=\"w3-left w3-xlarge\" >Rating:</label>\r\n                <select \r\n                    className=\"w3-input w3-section w3-border w3-round\"\r\n                    value={rating}\r\n                    onChange={(e) => setRating(e.target.value)}\r\n                >\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </select>\r\n\r\n                <div className=\"Iwantaligncenter\">\r\n                    <button className='w3-button w3-light-grey w3-round-large w3-margin ' onClick={() => setModalIsOpen3(false)}>Close</button>\r\n                    { !isPending && <button className=\"w3-button w3-light-grey w3-round-large w3-margin\" >Submit</button>}\r\n                    { isPending && <button disabled className=\"w3-button w3-light-grey w3-round-large w3-margin-top\">Submitting release form...</button>}\r\n                </div>\r\n                \r\n            </form>\r\n            \r\n        </Modal>\r\n        <Modal\r\n            isOpen={modalIsOpen4}\r\n            onRequestClose={() => setModalIsOpen4(false)}\r\n            style={customStyles} >\r\n\r\n            <h1>Thank you for your feedback!</h1>\r\n            <div className=\"Iwantaligncenter\">\r\n                <button className='w3-button w3-light-grey w3-round-large w3-margin-top' onClick={handleSubmit2}>Close</button>\r\n            </div>\r\n        </Modal>\r\n        \r\n        <GetReviewRating/>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReviewRating","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\CreateAccount.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\Staff.js",["133","134","135"],[],"import NavBarStaff from './NavBarStaff';\r\nimport React, { useEffect, useState } from 'react';\r\nimport AdoptList from './AdoptList';\r\nimport ReleaseList from './ReleaseList';\r\nimport { useLocation } from 'react-router-dom';\r\nimport TestWater from './TestWater';\r\nimport BookTicket from './BookTicket';\r\nimport ViewSession from './viewSession';\r\n\r\n\r\nconst Staff = () => {\r\n    const [adopt,setAdopt] = useState(null);\r\n    const [release,setRelease] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const location = useLocation();\r\n    \r\n    useEffect(()=> {\r\n        setTimeout(() => {\r\n            fetch('http://localhost:8000/adopt')\r\n            .then(res => {\r\n                //console.log(res);\r\n                if(!res.ok) {\r\n                    throw Error('could not fetch the data for that resource');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setAdopt(data);\r\n                setIsPending(false);\r\n                setError(null);\r\n                console.log(location.state.username);\r\n            })\r\n            .catch(err => {\r\n                setIsPending(false);\r\n                setError(err.message);\r\n            })\r\n        }, 1000);\r\n    }, []);\r\n\r\n    useEffect(()=> {\r\n        setTimeout(() => {\r\n            fetch('http://localhost:8001/release')\r\n            .then(res => {\r\n                //console.log(res);\r\n                if(!res.ok) {\r\n                    throw Error('could not fetch the data for that resource');\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setRelease(data);\r\n                setIsPending(false);\r\n                setError(null);\r\n            })\r\n            .catch(err => {\r\n                setIsPending(false);\r\n                setError(err.message);\r\n            })\r\n        }, 1000);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        \r\n        <NavBarStaff />\r\n\r\n        <ViewSession/>\r\n\r\n        { error && <div> {error} </div> }\r\n        {isPending && <div>Loading...</div>}\r\n\r\n        <div className=\"w3-container w3-padding-8\">\r\n\r\n            <div className=\"w3-row\">    \r\n\r\n                <div className=\"w3-half w3-padding-large\">\r\n                    <h3 className=\"w3-padding-32 w3-xxxlarge w3-border-bottom w3-border-light-grey\">Adopt List</h3>\r\n                    <div className='w3-padding-16'>\r\n                    {adopt && <AdoptList adopt={adopt} title=\" \" />}\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"w3-half w3-padding-large\">\r\n                    <h3 className=\"w3-padding-32 w3-xxxlarge w3-border-bottom w3-border-light-grey\">Release List</h3>\r\n                    <div className='w3-padding-16'>\r\n                    {release && <ReleaseList release={release} title=\" \" />}\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Staff","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\LoyaltyPage.js",["136"],[],"import { useState, useEffect } from \"react\";\r\nimport NavBarUser from \"./NavBarUser\";\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst LoyaltyPage = () => {\r\n    const history = useNavigate();\r\n    const [loyaltyitem, setLoyaltyItem] = useState([]);\r\n    const [item, setItem] = useState('');\r\n    \r\n    const [points, setPoints] = useState('');\r\n    const [itemstatus, setitemstatus] = useState(\"Unclaimed\");\r\n    const [quantity, setquantity] = useState(\" \");\r\n    const [isPending, setIsPending] = useState(false);\r\n    const location = useLocation();\r\n    const username = location.state.username;\r\n    var loyaltypoint = location.state.loyaltypoint;\r\n    var seatpref = location.state.seatpref;\r\n    var id = location.state.id;\r\n    var totalpoints = \" \";\r\n    \r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8004/loyaltyitems')\r\n        .then(res =>{\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setLoyaltyItem(data);\r\n        })\r\n    }, []); \r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        totalpoints = points * quantity;\r\n        console.log(totalpoints)\r\n        \r\n        if (loyaltypoint > totalpoints){\r\n\r\n            var deduction = loyaltypoint - totalpoints; \r\n\r\n            console.log(deduction)\r\n\r\n            var customerid = id;\r\n            const itemstatus =\"Unclaimed\"\r\n            const loyaltytransaction = {item, itemstatus, quantity, customerid};\r\n            \r\n            setIsPending(true);\r\n\r\n            loyaltypoint = deduction\r\n\r\n            fetch(`http://localhost:8005/user/${customerid}`) \r\n            .then(res=>{\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                \r\n                console.log(data)\r\n\r\n                fetch(`http://localhost:8005/user/${customerid}`,\r\n                {\r\n                    method: 'PUT',\r\n                    headers: {\"Content-Type\": \"application/json\"},\r\n                    body: JSON.stringify({...data, loyaltypoint : deduction})\r\n                }) \r\n                \r\n            }); \r\n\r\n            \r\n            \r\n            fetch('http://localhost:8003/loyaltytransaction',{\r\n                method: 'POST',\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify(loyaltytransaction)\r\n            }).then(()=>{\r\n                console.log(\"Item is redeemed\");\r\n                history('/user', {state:{username, loyaltypoint, seatpref, id}});\r\n            })\r\n \r\n\r\n        } else if (loyaltypoint < totalpoints){\r\n\r\n            console.log(\"not enough loyalty point!!\")\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n    \r\n    \r\n    return (  \r\n        <>\r\n            <NavBarUser />\r\n\r\n            <div className=\"loyalty-page\">\r\n                <h1>List of Loyalty Redemption Items</h1>\r\n                <p>Customer points: {loyaltypoint}</p>\r\n                <table>\r\n                    \r\n                        <tr>\r\n                            <th>Item ID</th>\r\n                            <th>Item Name</th>\r\n                            <th>Points required</th>\r\n                            <th>Image</th>\r\n                        </tr>\r\n                        {loyaltyitem.map( record =>(\r\n                        <tr id={record.key}>\r\n                            <td>{record.itemid}</td>\r\n                            <td>{record.itemname}</td>\r\n                            <td>{record.points}</td>\r\n                            <td><img src={record.imagesrc}></img></td>\r\n                        </tr>\r\n                        ))}\r\n                    \r\n                \r\n                </table>\r\n\r\n                <h2>Loyalty Point Redemption</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                    <h3>Select one item in the dropdown bar below to redeem:</h3>\r\n                    <label>Select item:</label>\r\n                    {/* <select \r\n                        value={item}\r\n                        onChange={(e) => setItem(e.target.value)}\r\n\r\n                        value2={points}\r\n                        onChange2={(e) => setPoints(e.target.value)}\r\n                        \r\n                        >\r\n                        {loyaltyitem.map( record =>(\r\n                            <option value={record.points} value2={record.itemname}>{record.itemname}, {record.points} </option>\r\n                            ))}\r\n\r\n                        \r\n                    </select> */}\r\n\r\n                    <select \r\n                        value={item}\r\n                        onChange={(e) => {\r\n                            setItem(e.target.value);\r\n                            const selectedRecord = loyaltyitem.find(record => record.itemname === e.target.value);\r\n                            setPoints(selectedRecord.points);\r\n                        }}\r\n                        >\r\n                        {loyaltyitem.map(record => (\r\n                            <option value={record.itemname}>{record.itemname}, {record.points}</option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <h3>{item}</h3>\r\n                    <h3>{points}</h3>\r\n                    <label className=\"w3-left w3-xlarge\" >Pet Health Status:</label>\r\n                    <select\r\n                        className=\"w3-input w3-section w3-border w3-round w3-dark-grey\"\r\n                        value={itemstatus}\r\n                        onChange={(e) => setitemstatus(e.target.value)}\r\n                    >\r\n                        \r\n                        <option value=\"claimed\">claimed</option>\r\n                        <option value=\"unclaimed\">Unclaimed</option>\r\n                    </select>\r\n\r\n                    <label className=\"w3-left w3-xlarge\" >Quantity:</label>\r\n                    <select\r\n                        className=\"w3-input w3-section w3-border w3-round w3-dark-grey\"\r\n                        value={quantity}\r\n                        onChange={(e) => setquantity(e.target.value)}\r\n                    >\r\n                        \r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n    \r\n                    </select>\r\n                   \r\n                    \r\n\r\n                    { !isPending && <button className=\"w3-button w3-light-grey w3-round-large w3-margin\" >Redeem</button>}\r\n                    { isPending && <button disabled className=\"w3-button w3-light-grey w3-round-large w3-margin-top\">Submitting release form...</button>}\r\n                </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n \r\nexport default LoyaltyPage;","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\LoyaltyTransaction.js",["137","138"],[],"import { useState, useEffect } from \"react\";\r\nimport NavBarUser from \"./NavBarUser\";\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport StaffSetLoyaltyTransaction from \"./StaffSetLoyaltyTransaction\";\r\n\r\n\r\nconst LoyaltyTransaction = () => {\r\n    const [loyaltytransaction, setLoyaltyTransaction] = useState([]);\r\n    const location = useLocation();\r\n    var id = location.state.id;\r\n\r\n    useEffect(()=>{\r\n         fetch('http://localhost:8003/loyaltytransaction')\r\n         .then(res =>{\r\n             return res.json();\r\n         })\r\n         .then(data => {\r\n             console.log(data);\r\n             setLoyaltyTransaction(data);\r\n             console.log(data);\r\n         });\r\n     },[]);\r\n    return (  \r\n        <>\r\n            <NavBarUser />\r\n\r\n            <div>    \r\n                <h1>Loyalty Transaction History</h1>\r\n                <table>\r\n                    <tr>\r\n                        <th>Transaction ID</th>\r\n                        <th>Customer ID</th>\r\n                        <th>Item Name</th>\r\n                        <th>Quantity</th>\r\n                        <th>Item Status</th>\r\n                    </tr>\r\n                    {loyaltytransaction.filter(filtercustomerid => filtercustomerid.customerid === id).slice(0).reverse().map( record =>(\r\n                        <tr id={record.key}>\r\n                            <td>{record.id}</td>\r\n                            <td>{record.customerid}</td>\r\n                            <td>{record.item}</td>\r\n                            <td>{record.quantity}</td>\r\n                            <td>{record.itemstatus}</td>\r\n                        </tr>\r\n\r\n                                ))}\r\n            </table>   \r\n            </div>\r\n        </>\r\n         \r\n    );\r\n}\r\n \r\nexport default LoyaltyTransaction;","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\FoodAndDrink.js",["139"],[],"import { useState, useEffect } from \"react\";\r\nimport NavBarUser from './NavBarUser';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst FoodAndDrink = () => {\r\n    const history = useNavigate();\r\n    const [foodanddrink, setfoodanddrink] = useState([]);\r\n    const [quantity, setquantity] = useState();\r\n    const [item, setItem]= useState();\r\n    const [itemstatus, setitemstatus] = useState(\"Unclaimed\");\r\n    const [isPending, setIsPending] = useState(false);\r\n    const location = useLocation();\r\n    const username = location.state.username;\r\n    var loyaltypoint = location.state.loyaltypoint;\r\n    var seatpref = location.state.seatpref;\r\n    var id = location.state.id;\r\n\r\n    useEffect(()=>{\r\n        fetch('http://localhost:9000/foodanddrink')\r\n        .then(res =>{\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setfoodanddrink(data);\r\n        });\r\n    },[]);\r\n\r\n    const handleSubmit = (e) => {\r\n        var customerid = id;\r\n        const loyaltytransaction = {item, itemstatus, quantity, customerid};\r\n        e.preventDefault();\r\n        setIsPending(true);\r\n        \r\n        fetch('http://localhost:8003/loyaltytransaction',{\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(loyaltytransaction)\r\n        }).then(()=>{\r\n            console.log(\"Order have been placed\");\r\n            history('/user', {state:{username, loyaltypoint, seatpref, id}});\r\n        })\r\n    }\r\n    \r\n\r\n    return ( \r\n        <>\r\n        \r\n        <NavBarUser />\r\n\r\n        <div>\r\n            <h3>{username}food and drink</h3>\r\n            <h1>Food And Drink Purchase Section</h1>\r\n            <p>Select list of items to purchase:</p>\r\n            <form onSubmit={handleSubmit}>\r\n                <table>\r\n                    <tr>\r\n                        \r\n                        <th>Item name</th>\r\n                        <th>Item Description:</th>\r\n                        <th>Price</th>\r\n                    </tr>\r\n                    {foodanddrink.map(record =>(\r\n                        <tr id={record.key}>\r\n                            <td>{record.itemname}</td>\r\n                            <td>{record.itemdesc}</td>\r\n                            <td>${record.price.toFixed(2)}</td>\r\n                        </tr>\r\n                    ))}\r\n                </table>\r\n                <label>Choose a combo:</label>\r\n                <select value={item} onChange={(e)=> setItem(e.target.value)}>\r\n                    {foodanddrink.map(current =>(\r\n                        <option value={current.itemname}>{current.itemname}</option>\r\n                    ))}\r\n                </select>\r\n                <label>Item Quantity: </label>\r\n                <select value={quantity} onChange={(e)=>setquantity(e.target.value)}>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </select>\r\n                <p>Total: $</p>\r\n                { !isPending && <button className=\"w3-button w3-light-grey w3-round-large w3-margin\" >Place Order</button>}\r\n                { isPending && <button disabled className=\"w3-button w3-light-grey w3-round-large w3-margin-top\">Submitting release form...</button>}\r\n                \r\n            </form>\r\n        </div>\r\n        \r\n        </>\r\n        \r\n     );\r\n}\r\n \r\nexport default FoodAndDrink;","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\NavBar.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\Reducer.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\NavBarUser.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\GetReviewRating.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\AdoptList.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\NavBarStaff.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\ReleaseList.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\StaffSetLoyaltyTransaction.js",["140","141"],[],"import { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst StaffSetLoyaltyTransaction = () => {\r\n    \r\n    const [searched, setsearched] = useState(0);\r\n    const [LoyaltyTransaction, setLoyaltyTransaction] = useState([]);\r\n    const [isPending, setIsPending] = useState(false);\r\n    const [id2, setId] = useState(0);\r\n    const [item, setitem] = useState('');\r\n    const location = useLocation();\r\n    const history = useNavigate();\r\n    const username = location.state.username;\r\n    var loyaltypoint = location.state.loyaltypoint;\r\n    var seatpref = location.state.seatpref;\r\n    var id = location.state.id;\r\n    const handleSumit3 = () => {\r\n        history('/user', {state:{username, loyaltypoint, seatpref, id}})\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        fetch('http://localhost:8003/loyaltytransaction')\r\n         .then(res =>{\r\n             return res.json();\r\n         })\r\n         .then(data => {\r\n             console.log(data);\r\n             setLoyaltyTransaction(data);\r\n         });     \r\n             console.log(searched)\r\n             setIsPending(true);\r\n                // console.log(xtype(parseInt(searched)));\r\n     }\r\n    const handleSubmit2 = (e) => {\r\n        e.preventDefault()\r\n        console.log(id2);\r\n        fetch(`http://localhost:8003/loyaltytransaction/${id2}`) \r\n        .then(res=>{\r\n            return res.json();\r\n         })\r\n         .then(data => {\r\n            console.log(data)\r\n            console.log(data.item)\r\n            setitem(data.item)\r\n         }); \r\n    }\r\n    useEffect(()=>{\r\n            console.log(item);    \r\n            const itemstatus =\"Completed\"\r\n            const input = {item, itemstatus}\r\n            fetch(`http://localhost:8003/loyaltytransaction/${id2}`,\r\n            {\r\n                method: 'PUT',\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify(input)\r\n            }) \r\n            \r\n    },[item])\r\n\r\n    return ( \r\n        <div>\r\n                <h1>Below Table is to update Status of Loyalty Points</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <table>\r\n                        <tr>\r\n                            <td><label>Search Transaction History using id:</label></td>\r\n                            <td><input type=\"text\" value={searched} onChange={(e) => setsearched(e.target.value)}></input><button>Submit</button></td>\r\n                            \r\n                        </tr>          \r\n                    </table>\r\n                </form>\r\n                <button onClick={handleSumit3}>Refresh</button>\r\n                <form onSubmit={handleSubmit2}>\r\n                    <table>\r\n                        <tr>\r\n                            <th>Transaction ID</th>\r\n                            <th>Customer ID</th>\r\n                            <th>Item Name</th>\r\n                            <th>Item Status</th>\r\n                            <th>Submit to confirm claim</th>\r\n                        </tr>\r\n                        {isPending && LoyaltyTransaction.filter(records => records.id === parseInt(searched)).map(record =>(\r\n                        <tr id={record.key}>\r\n                            <td>{record.id}</td>\r\n                            <td>Customer ID</td>\r\n                            <td>{record.item}</td>\r\n                            <td>{record.itemstatus}</td>\r\n                            <td><button value={record.id} onClick={(e)=> setId(e.target.value)}>Submit</button></td>\r\n                        </tr>\r\n                        ))}         \r\n                    </table>\r\n                </form>\r\n            </div>\r\n     );\r\n}\r\n \r\nexport default StaffSetLoyaltyTransaction;","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\TestWater.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\BookTicket.js",["142","143","144","145","146"],[],"import { useState, useEffect } from \"react\";\r\nimport NavBarUser from \"./NavBarUser\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst BookTicket = () => {\r\n\r\n    const [date, setDate] = useState(\"\");\r\n    const [selectedTimeslot, setSelectedTimeslot] = useState(\"\");\r\n    const [selectedDate, setSelectedDate] = useState(\"\");\r\n    const [selectedMovie, setSelectedMovie] = useState(\"\");\r\n    const [data, setData] = useState([]);\r\n\r\n    const location = useLocation();\r\n    const history = useNavigate();\r\n    const username = location.state.username;\r\n    var loyaltypoint = location.state.loyaltypoint;\r\n    var seatpref = location.state.seatpref;\r\n    var id = location.state.id;\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8006/moviesession')\r\n        .then(res =>{\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setData(data);\r\n        })\r\n    }, []); \r\n\r\n    // const data = [\r\n    //     { id: 1, date: '0105', movie: 'Movie 1', timeslot: '1000' },\r\n    //     { id: 2, date: '0105', movie: 'Movie 1', timeslot: '1100' },\r\n    //     { id: 3, date: '0105', movie: 'Movie 2', timeslot: '1000' },\r\n    //     { id: 4, date: '0105', movie: 'Movie 3', timeslot: '1100' },\r\n    //     { id: 5, date: '0105', movie: 'Movie 1', timeslot: '1300' },\r\n    //     { id: 6, date: '0105', movie: 'Movie 2', timeslot: '1100' },\r\n    //     { id: 7, date: '0205', movie: 'Movie 2', timeslot: '1200' },\r\n    //     { id: 8, date: '0205', movie: 'Movie 3', timeslot: '1300' },\r\n    //     { id: 9, date: '0305', movie: 'Movie 1', timeslot: '1400' },\r\n    // ];\r\n      \r\n    const groupedData = data.reduce((result, item) => {\r\n        const key = item.movie;\r\n        if (!result[key]) {\r\n            result[key] = [];\r\n        }\r\n        result[key].push(item);\r\n        return result;\r\n    }, {});\r\n\r\n    const groupedData2 = data.reduce((result, item) => {\r\n        const key = item.date;\r\n        if (!result[key]) {\r\n            result[key] = [];\r\n        }\r\n        result[key].push(item);\r\n        return result;\r\n    }, {});\r\n\r\n    const handleTimeslotClick = (e) => {\r\n        const selectedRecord = data.find(record => record.id === parseInt(e.target.value));\r\n        setSelectedTimeslot(selectedRecord.timeslot);\r\n        setSelectedDate(selectedRecord.date);\r\n        setSelectedMovie(selectedRecord.movie);\r\n    }\r\n  \r\n    return ( \r\n        <>\r\n        <NavBarUser/>\r\n\r\n      <div>\r\n        <h3>Booking Ticket</h3>\r\n\r\n        <select \r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n        >\r\n            <option value=\"\">Select a date</option>\r\n            {(Object.keys(groupedData2)).map(record => (\r\n                <option key={record} value={record}>{record}</option>\r\n            ))}\r\n        </select>\r\n\r\n        {Object.keys(groupedData).map((key) => (\r\n            <div key={key}>\r\n                <h2>{key}</h2>\r\n                <ul>\r\n                    {groupedData[key].filter(record => record.date === date).map((item) => (\r\n                        <li key={item.id}>\r\n                            <button \r\n                                value={item.id} \r\n                                onClick={handleTimeslotClick}\r\n                            >\r\n                                Time Slot: {item.timeslot}\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        ))}\r\n\r\n        {selectedTimeslot !== \"\" && (\r\n            <>\r\n                <h3>Selected Date: {selectedDate}</h3>\r\n                <h3>Selected Movie: {selectedMovie}</h3>\r\n                <h3>Selected Time: {selectedTimeslot}</h3>\r\n            </>\r\n        )}\r\n\r\n      </div>\r\n      </>\r\n    );\r\n}\r\n   \r\nexport default BookTicket;\r\n","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\viewSession.jsx",["147","148","149","150","151"],[],"import { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nfunction ViewSession() {\n\n  const [showModal, setShowModal] = useState(false);\n  const [showConfirmModal, setConfirmModal] = useState(false);\n  const [data, setData] = useState([])\n  const [filteredData, setFilteredData] = useState([]);\n  const [query, setQuery] = useState('');\n  const apiUrl_Session = process.env.REACT_APP_API_URL_SESSION;\n  const apiUrl_Movie = process.env.REACT_APP_API_URL_MOVIE;\n  const apiUrl_Room = process.env.REACT_APP_API_URL_ROOM;\n\n  const loadData = () => {\n    fetch(`${apiUrl_Movie}/Movie`)\n      .then(movieResponse => movieResponse.json())\n      .then(movieData => {\n        fetch(`${apiUrl_Session}/MovieSession`)\n          .then(sessionResponse => sessionResponse.json())\n          .then(sessionData => {\n            fetch(`${apiUrl_Room}/Room`) // fetch room data\n              .then(roomResponse => roomResponse.json())\n              .then(roomData => {\n                // Join the movie, movie_session, and room arrays based on their id/movie_id/room_id fields\n                const joinedData = sessionData.map(session => {\n                  const movie = movieData.find(movie => movie.id === parseInt(session.Movie_id));\n                  const movieTitle = movie ? movie.Movie: \"Nil\";\n                  const room = roomData.find(room => room.id === parseInt(session.Room_id));\n                  const roomName = room ? room.Name : \"Nil\";\n                  //console.log({...session, Movie: movieTitle, Room: roomName})\n                  return { ...session, Movie: movieTitle, Room: roomName };\n                });\n                setData(joinedData); // set the state variable to the joined data\n              })\n              .catch(roomError => console.error(roomError));\n          })\n          .catch(sessionError => console.error(sessionError));\n      })\n      .catch(movieError => console.error(movieError));\n  }\n   \n  /* \n    movie deleted will delete movie session\n            const joinedData = sessionData.map(session => {\n            const movie = movieData.find(movie => movie.id === session.Movie_id);\n            return { ...session, Movie: movie.Movie };\n          });\n  */\n\n  const handleChange = event => {\n    setQuery(event.target.value);\n  };\n  \n  const handleCloseModal = () => {\n    setShowModal(false); \n    setConfirmModal(false);\n  };\n  useEffect(() => { //load data on page load \n    loadData()\n  }, [filteredData, query]);\n\n  const handleUpdate = (id) => { //filter by id and pass to modal\n    setFilteredData(data.filter((sessionData) => sessionData.id === id));\n    // filteredData will now contain an array with only the movie data objects that match the given id\n    setShowModal(true);\n  };\n\n\n  const confirmModal = (id) => {\n    setFilteredData(data.filter((sessionData) => sessionData.id === id));\n    //delete modal\n    setConfirmModal(true); \n  }\n\n\n  const handleSubmit = (e)=> {//rename\n    e.preventDefault();\n    fetch(`${apiUrl_Session}/MovieSession?Movie=${query}`)\n      .then(response => response.json())\n      .then(data => setData(data))\n      .catch(error => console.error(error));\n  };\n\n  return (\n    <>\n      <div className=\"d-flex justify-content-end\">\n        <form className=\"input-group p-3\" style={{width : \"350px\"}}   onSubmit={handleSubmit}>\n          <input class=\"form-control border \" type={\"text\"} value={query} onChange={handleChange} ></input>\n        <button  className=\"btn btn-light\" type=\"submit\">search</button>\n        </form>\n    </div>\n    <table className=\"text-black\" style={{backgroundColor : \"whitesmoke\", width : '1000px'}}>\n      <thead>\n        <tr className=\"d-flex-column\" style={{backgroundColor : \"orange\"}}>\n        <th scope=\"col\" className=\"p-3\">Movie</th>\n          <th scope=\"col\">Room</th>\n          <th scope=\"col\">Date</th>\n          <th scope=\"col\">Start</th>\n          <th scope=\"col\">End</th>\n          <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody >\n      {data.length == 0 ?  (<p className=\"p-3\">No Matching Records</p>) : (\n        data?.map((session) => (\n          <>\n          <tr key={session.id}>\n            <td className=\"p-2\">{session.Movie}</td>\n            <td className=\"p-2\">{session.Room}</td>\n            <td className=\"p-2\">{session.Date}</td>\n            <td className=\"p-2\">{session.Start}</td>\n            <td className=\"p-2\">{session.End}</td>\n            <td>\n               <div className=\"d-flex align-items-center justify-content-end\"> \n                    <button type=\"button\" className=\"btn text-white m-1 \" style={{backgroundColor : \"royalblue\"}} onClick={() => handleUpdate(session.id)}>Update</button>\n                    <button type=\"button\" className=\"btn text-white m-1\" style={{backgroundColor : \"red\"}} onClick={() => confirmModal(session.id)}>Delete</button>\n               </div>\n               \n            </td>\n          </tr>\n          <tr>\n              <td colSpan=\"6\" className=\"border-bottom\"></td>\n          </tr>\n          </>\n        )))}\n      </tbody>\n    </table>\n    {showModal === true &&          \n          <UpdateSession\n          data={filteredData}\n          setData = {setFilteredData} //setData to reload parent\n          show={showModal}\n          handleClose={handleCloseModal}\n        />}\n    {showConfirmModal == true &&\n        <DeleteSession\n        data={filteredData}\n        setData = {setFilteredData}\n        show={showConfirmModal}\n        handleClose={handleCloseModal}/>\n    }\n</>\n  );\n}\n\nexport default ViewSession;\n\n\nconst UpdateSession = ({data, setData, show, handleClose}) => {\n  \n    const apiUrl_Room = process.env.REACT_APP_API_URL_ROOM;\n    const apiUrl_Movie = process.env.REACT_APP_API_URL_MOVIE;\n    const apiUrl_Session = process.env.REACT_APP_API_URL_SESSION;\n    const [formData, setFormData] = useState(data[0]);\n    const [movies, setMovies] = useState([])\n    const [rooms , setRooms] = useState([])\n\n  useEffect(() => { //load data on page load \n      fetch(`${apiUrl_Movie}/Movie`)\n      .then(response => response.json())\n      .then(data => {\n           const extractedMovies = data.map(item =>  item.Movie);\n           setMovies(extractedMovies);\n      })\n      .catch(error => console.error(error));\n\n      //fetch room too\n      fetch(`${apiUrl_Room}/Room`)\n      .then(response => response.json())\n      .then(data => {\n           const extractedRooms = data.map(item => ({\n            Room : item.Name,\n            id : item.id\n           }))\n           setRooms(extractedRooms);\n      })\n      .catch(error => console.error(error));\n\n    }, []);\n\n  const handleEdit = (event) => {\n    const { id, value } = event.target;\n    setFormData((prevFormData) => ({ ...prevFormData, [id]: value }));\n  };\n\n  const handleSubmit = (e) => { \n    e.preventDefault();\n    console.log(formData)\n    fetch(`${apiUrl_Movie}/Movie`)\n    .then(movieResponse => movieResponse.json())\n    .then(movieData => {\n      const matchingMovie = movieData.find(movie => movie.Movie === formData.Movie);\n      const movieId = matchingMovie ? matchingMovie.id : null;\n      // Update the movie_id field of the movie_session item using the fetched movieId\n      fetch(`${apiUrl_Session}/MovieSession/${formData.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ ...formData, Movie_id: movieId }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          setData(\"reload parent\")\n          handleClose();\n        })\n        .catch((error) => console.error(error));\n    })\n    .catch(movieError => console.error(movieError));\n    /*\n    default\n    fetch(`${apiUrl_Session}/MovieSession/${formData.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data)\n        setData(\"reload parent\")\n        handleClose();\n        \n      })\n      .catch((error) => console.error(error));\n      */  \n  }\n  return(\n    <>\n        <Modal show={show} onHide={handleClose} >\n        <Modal.Body>\n        <form onSubmit={handleSubmit}>\n        <div class=\"form-group\">\n            <label hmtlfor=\"Movie\" class=\"col-form-label\">Movie:</label>\n            <select className=\"form-select\" onChange={handleEdit} value={formData.Movie} id=\"Movie\">\n                {movies.map((option) => (\n                        <option key={option}  value={option}>{option} </option>\n                    ))}\n            </select>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"Room\" class=\"col-form-label\">Room:</label>\n            <select className=\"form-select\" onChange={handleEdit} value={formData.Room} id=\"Room_id\">\n                {rooms.map((option) => (\n                        <option key={option.id} value={option.id}>{option.Room} </option>\n                    ))}\n            </select>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"Date\" class=\"col-form-label\">Date:</label>\n            <input type=\"Date\" class=\"form-control\" min={new Date().toISOString().split('T')[0]} onChange={handleEdit} value={formData.Date} id=\"Date\"></input>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"Start\" class=\"col-form-label\">Start:</label>\n            <input type=\"time\" class=\"form-control\" onChange={handleEdit} value={formData.Start} id=\"Start\"></input>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"End\" class=\"col-form-label\">End:</label>\n            <input type=\"time\" class=\"form-control\" onChange={handleEdit} value={formData.End} id=\"End\"></input>\n          </div>\n          <button type=\"submit\">update</button>\n        </form>\n        </Modal.Body>\n        \n      </Modal>\n    </>\n  )\n}\n\nconst DeleteSession = ({data, setData, show, handleClose}) => {\n  const [id, setId] = useState(data[0].id)\n  const apiUrl_Session = process.env.REACT_APP_API_URL_SESSION;\n\n  const handleDelete = () => {\n    \n    fetch(`${apiUrl_Session}/MovieSession/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => response.json())\n      .then(data => \n        setData(\"reload\"))\n      .catch(error => console.error(error))\n\n    handleClose()\n  }\n\n  return(\n    <>\n    <Modal show={show} onHide={handleClose}>\n     <Modal.Body>\n          Confirm Delete Movie Session ? \n     </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleDelete}>\n          Yes {/*handle delete/update*/}\n        </Button>\n      </Modal.Footer>\n    </Modal>\n    </>\n  )\n}",{"ruleId":"152","severity":1,"message":"153","line":59,"column":116,"nodeType":"154","messageId":"155","endLine":59,"endColumn":118},{"ruleId":"156","severity":1,"message":"157","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":14},{"ruleId":"160","severity":1,"message":"161","line":59,"column":41,"nodeType":"162","endLine":59,"endColumn":129},{"ruleId":"160","severity":1,"message":"161","line":68,"column":37,"nodeType":"162","endLine":68,"endColumn":124},{"ruleId":"160","severity":1,"message":"163","line":63,"column":17,"nodeType":"162","endLine":63,"endColumn":130},{"ruleId":"156","severity":1,"message":"164","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":17},{"ruleId":"156","severity":1,"message":"165","line":7,"column":8,"nodeType":"158","messageId":"159","endLine":7,"endColumn":18},{"ruleId":"166","severity":1,"message":"167","line":39,"column":8,"nodeType":"168","endLine":39,"endColumn":10,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":113,"column":33,"nodeType":"162","endLine":113,"endColumn":60},{"ruleId":"156","severity":1,"message":"172","line":3,"column":23,"nodeType":"158","messageId":"159","endLine":3,"endColumn":34},{"ruleId":"156","severity":1,"message":"173","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":34},{"ruleId":"156","severity":1,"message":"174","line":8,"column":24,"nodeType":"158","messageId":"159","endLine":8,"endColumn":37},{"ruleId":"156","severity":1,"message":"157","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":14},{"ruleId":"166","severity":1,"message":"175","line":58,"column":7,"nodeType":"168","endLine":58,"endColumn":13,"suggestions":"176"},{"ruleId":"156","severity":1,"message":"177","line":15,"column":11,"nodeType":"158","messageId":"159","endLine":15,"endColumn":18},{"ruleId":"156","severity":1,"message":"178","line":16,"column":11,"nodeType":"158","messageId":"159","endLine":16,"endColumn":19},{"ruleId":"156","severity":1,"message":"179","line":17,"column":9,"nodeType":"158","messageId":"159","endLine":17,"endColumn":21},{"ruleId":"156","severity":1,"message":"180","line":18,"column":9,"nodeType":"158","messageId":"159","endLine":18,"endColumn":17},{"ruleId":"156","severity":1,"message":"181","line":19,"column":9,"nodeType":"158","messageId":"159","endLine":19,"endColumn":11},{"ruleId":"166","severity":1,"message":"182","line":60,"column":6,"nodeType":"168","endLine":60,"endColumn":27,"suggestions":"183"},{"ruleId":"184","severity":1,"message":"185","line":104,"column":20,"nodeType":"186","messageId":"187","endLine":104,"endColumn":22},{"ruleId":"184","severity":1,"message":"185","line":135,"column":23,"nodeType":"186","messageId":"187","endLine":135,"endColumn":25},{"ruleId":"166","severity":1,"message":"188","line":179,"column":8,"nodeType":"168","endLine":179,"endColumn":10,"suggestions":"189"},{"ruleId":"156","severity":1,"message":"190","line":272,"column":14,"nodeType":"158","messageId":"159","endLine":272,"endColumn":19},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'TestWater' is defined but never used.","'BookTicket' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.state.username'. Either include it or remove the dependency array.","ArrayExpression",["191"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useNavigate' is defined but never used.","'StaffSetLoyaltyTransaction' is defined but never used.","'setitemstatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id2'. Either include it or remove the dependency array.",["192"],"'history' is assigned a value but never used.","'username' is assigned a value but never used.","'loyaltypoint' is assigned a value but never used.","'seatpref' is assigned a value but never used.","'id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.",["193"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'apiUrl_Movie' and 'apiUrl_Room'. Either include them or remove the dependency array.",["194"],"'setId' is assigned a value but never used.",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},"Update the dependencies array to be: [location.state.username]",{"range":"203","text":"204"},"Update the dependencies array to be: [id2, item]",{"range":"205","text":"206"},"Update the dependencies array to be: [filteredData, loadData, query]",{"range":"207","text":"208"},"Update the dependencies array to be: [apiUrl_Movie, apiUrl_Room]",{"range":"209","text":"210"},[1312,1314],"[location.state.username]",[2022,2028],"[id2, item]",[2464,2485],"[filteredData, loadData, query]",[6594,6596],"[apiUrl_Movie, apiUrl_Room]"]