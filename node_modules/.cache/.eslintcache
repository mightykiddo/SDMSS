[{"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\index.js":"1","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\App.js":"2","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\GlobalStore.js":"3","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\Login.js":"4","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\User.js":"5","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\Home.js":"6","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\ReviewRating.js":"7","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\CreateAccount.js":"8","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\LoyaltyPage.js":"9","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\LoyaltyTransaction.js":"10","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\FoodAndDrink.js":"11","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\NavBar.js":"12","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\Reducer.js":"13","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\NavBarUser.js":"14","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\GetReviewRating.js":"15","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\AdoptList.js":"16","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\NavBarStaff.js":"17","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\ReleaseList.js":"18","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\BookTicket.js":"19","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\StaffFoodandDrink.js":"20","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\StaffSetLoyaltyStatus.js":"21","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\StaffSetOrderStatus.js":"22","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\SelectSeats.js":"23","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\StaffBookTicket.js":"24","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\StaffSelectSeats.js":"25","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\SystemAdmin\\SystemAdminMain.jsx":"26","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\Manager\\ManagerMain.jsx":"27","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\SystemAdmin\\Create\\CreateUserProfile.jsx":"28","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\SystemAdmin\\Create\\CreateUserAcc.jsx":"29","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\SystemAdmin\\View\\ViewUserAcc.jsx":"30","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\SystemAdmin\\View\\ViewUserProfile.jsx":"31","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\Manager\\create\\CreateMovie.jsx":"32","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\Manager\\create\\CreateMovieSess.jsx":"33","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\Manager\\create\\CreateRoom.jsx":"34","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\Manager\\view\\ViewMovie.jsx":"35","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\Manager\\view\\ViewRoom.jsx":"36","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\Manager\\view\\viewSession.jsx":"37","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\Manager\\report\\GenerateReport.jsx":"38","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\SuccessModal.jsx":"39"},{"size":234,"mtime":1683098684863,"results":"40","hashOfConfig":"41"},{"size":3023,"mtime":1684128124212,"results":"42","hashOfConfig":"41"},{"size":1410,"mtime":1683098684853,"results":"43","hashOfConfig":"41"},{"size":5235,"mtime":1684134791538,"results":"44","hashOfConfig":"41"},{"size":8623,"mtime":1684125773138,"results":"45","hashOfConfig":"41"},{"size":7045,"mtime":1684125690642,"results":"46","hashOfConfig":"41"},{"size":5022,"mtime":1683652354873,"results":"47","hashOfConfig":"41"},{"size":4207,"mtime":1684125017195,"results":"48","hashOfConfig":"41"},{"size":8254,"mtime":1684059568400,"results":"49","hashOfConfig":"41"},{"size":4855,"mtime":1684060685990,"results":"50","hashOfConfig":"41"},{"size":5566,"mtime":1684059785513,"results":"51","hashOfConfig":"41"},{"size":492,"mtime":1683098684855,"results":"52","hashOfConfig":"41"},{"size":558,"mtime":1683098684857,"results":"53","hashOfConfig":"41"},{"size":2221,"mtime":1683393496326,"results":"54","hashOfConfig":"41"},{"size":739,"mtime":1683123162823,"results":"55","hashOfConfig":"41"},{"size":623,"mtime":1683098684850,"results":"56","hashOfConfig":"41"},{"size":729,"mtime":1684074730267,"results":"57","hashOfConfig":"41"},{"size":763,"mtime":1683098684859,"results":"58","hashOfConfig":"41"},{"size":3212,"mtime":1684074480256,"results":"59","hashOfConfig":"41"},{"size":5383,"mtime":1684074286898,"results":"60","hashOfConfig":"41"},{"size":4502,"mtime":1684073408701,"results":"61","hashOfConfig":"41"},{"size":6003,"mtime":1684073337224,"results":"62","hashOfConfig":"41"},{"size":8572,"mtime":1684123902847,"results":"63","hashOfConfig":"41"},{"size":2983,"mtime":1684075500170,"results":"64","hashOfConfig":"41"},{"size":8259,"mtime":1684075772546,"results":"65","hashOfConfig":"41"},{"size":1789,"mtime":1684129921027,"results":"66","hashOfConfig":"41"},{"size":3418,"mtime":1684129927001,"results":"67","hashOfConfig":"41"},{"size":2022,"mtime":1684128934994,"results":"68","hashOfConfig":"41"},{"size":3829,"mtime":1684137693412,"results":"69","hashOfConfig":"41"},{"size":9603,"mtime":1684131416362,"results":"70","hashOfConfig":"41"},{"size":6530,"mtime":1684127342551,"results":"71","hashOfConfig":"41"},{"size":3307,"mtime":1684131511675,"results":"72","hashOfConfig":"41"},{"size":6148,"mtime":1684127342250,"results":"73","hashOfConfig":"41"},{"size":1961,"mtime":1684127342272,"results":"74","hashOfConfig":"41"},{"size":9023,"mtime":1684131504231,"results":"75","hashOfConfig":"41"},{"size":7750,"mtime":1684131467299,"results":"76","hashOfConfig":"41"},{"size":10912,"mtime":1684131475503,"results":"77","hashOfConfig":"41"},{"size":4016,"mtime":1684130743387,"results":"78","hashOfConfig":"41"},{"size":517,"mtime":1684131395633,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"xi3c6n",{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"83"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"83"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"83"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"83"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"83"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"83"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"83"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"83"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"83"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"83"},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"83"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"83"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"83"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"83"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\index.js",[],[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\App.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\GlobalStore.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\Login.js",["213","214","215"],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\User.js",["216","217","218"],[],"import React from 'react';\r\nimport NavBarUser from './NavBarUser';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst User = () => {\r\n\r\n    const [movie, setMovie] = useState([]);\r\n    const location = useLocation();\r\n    const history = useNavigate();\r\n    const username = location.state.username;\r\n    var loyaltypoint = location.state.loyaltypoint;\r\n    var seatpref = location.state.seatpref;\r\n    var id = location.state.id;\r\n    \r\n    useEffect(() => {\r\n        fetch('http://localhost:8008/Movie')\r\n        .then(res =>{\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setMovie(data);\r\n        })\r\n    }, []); \r\n\r\n    const handleSubmit = () => {\r\n        console.log(\"redirect to food and drink page\");\r\n        history('/foodanddrink', {state:{username, loyaltypoint, seatpref, id}});\r\n    }\r\n\r\n    const handleSubmit2 = () => {\r\n        console.log(\"redirect to food and drink page\");\r\n        history('/bookticket', {state:{username, loyaltypoint, seatpref, id}});\r\n    }\r\n\r\n    return (\r\n        <>\r\n        \r\n        <NavBarUser />\r\n\r\n        <div className=\"w3-padding\">\r\n\r\n            <div className=\" \" id=\"pets\">\r\n                \r\n                <div className='w3-border-top w3-border-dark-grey' ></div>\r\n\r\n                <div className=\"w3-row w3-padding-32\">    \r\n\r\n                    <div>\r\n                        <h3>Welcome <span className='w3-text-amber'>{username}</span>, your [ Current Loyalty Point ] : <span className='w3-text-amber'>{loyaltypoint}</span> and [ Seat Preference ] : <span className='w3-text-amber'>{seatpref}</span></h3>\r\n                    </div>\r\n                    \r\n                    <div className=\"w3-third w3-padding-16\">\r\n                        <div className=\"w3-padding-top-64\">\r\n                        <div className=\"w3-padding-top-64\">\r\n                            <div className=\"w3-row-padding w3-padding-16\">\r\n                                    <div className=\"w3-half w3-padding-16\">\r\n                                        <h3 className=\"\">Book Ticket</h3>\r\n                                        <h3 className=\"w3-text-amber\">Now</h3>\r\n                                    </div>\r\n                                    <div className=\"w3-half w3-padding-top-64\">\r\n                                        \r\n                                        <a onClick={handleSubmit2} className=\"w3-button w3-deep-orange w3-round-medium\" href=\"\">Book</a>\r\n                                    </div>\r\n                            </div>\r\n                            <div className=\"w3-row-padding w3-padding-16\">\r\n                                    <div className=\"w3-half w3-padding-16\">\r\n                                        <h3 className=\"\">Buy Food & Drink</h3>\r\n                                        <h3 className=\"w3-text-amber\">Here</h3>\r\n                                    </div>\r\n                                    <div className=\"w3-half w3-padding-top-64\">\r\n                                    <a onClick={handleSubmit} className=\"w3-button w3-deep-orange w3-round-medium\" href=\"\">Order</a>\r\n                                    \r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"w3-twothird w3-padding-16\">\r\n                        \r\n                        <div className=\"w3-row-padding w3-padding-16\">\r\n                            <h3 className=\"w3-border-bottom w3-border-light-grey\" style={{maxWidth:\"170px\"}}>Now Showing</h3>\r\n                    \r\n                            <div className=\"w3-col l4 m8 w3-margin-bottom w3-padding-16\">\r\n                                <img src={require(\"../pics/captainmarvel.jpg\")} alt=\"captainmarvel\" className=\"\" style={{width:\"100%\"}}/>\r\n\r\n                                {movie.filter(filter => filter.id === 1).map((record) => (\r\n                                    <div className='w3-dark-grey w3-padding' style={{minHeight:\"400px\"}}>\r\n                                        <h3>{record.Movie}</h3>\r\n                                        <p className=\"w3-opacity w3-small\">{record.Duration}&emsp;({record.AgeRating})</p>\r\n                                        <p className=\"w3-opacity w3-large\">{record.Synopsis}</p>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n\r\n                            <div className=\"w3-col l4 m8 w3-margin-bottom w3-padding-16\">\r\n                                <img src={require(\"../pics/avengers.jpg\")} alt=\"avengers\" className=\"\" style={{width:\"100%\"}}/>\r\n\r\n                                {movie.filter(filter => filter.id === 2).map((record) => (\r\n                                    <div className='w3-dark-grey w3-padding' style={{minHeight:\"400px\"}}>\r\n                                        <h3>{record.Movie}</h3>\r\n                                        <p className=\"w3-opacity w3-small\">{record.Duration}&emsp;({record.AgeRating})</p>\r\n                                        <p className=\"w3-opacity w3-large\">{record.Synopsis}</p>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n\r\n                            <div className=\"w3-col l4 m8 w3-margin-bottom w3-padding-16\">\r\n                                <img src={require(\"../pics/blackpanther.jpg\")} alt=\"blackpanther\" className=\"\" style={{width:\"100%\"}}/>\r\n                                \r\n                                {movie.filter(filter => filter.id === 3).map((record) => (\r\n                                    <div className='w3-dark-grey w3-padding' style={{minHeight:\"400px\"}}>\r\n                                        <h3>{record.Movie}</h3>\r\n                                        <p className=\"w3-opacity w3-small\">{record.Duration}&emsp;({record.AgeRating})</p>\r\n                                        <p className=\"w3-opacity w3-large\">{record.Synopsis}</p>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className=\" \" id=\"pets\">\r\n                \r\n                <div className='w3-border-top w3-border-dark-grey' ></div>\r\n\r\n                <div className=\"w3-container w3-padding-32\" id=\"reviews\">\r\n                    <h3 className=\"w3-padding-16 w3-xxlarge\">What our customer are saying about us</h3>\r\n\r\n                    <div className=\"w3-panel w3-leftbar w3-dark-grey w3-round\">\r\n                        <p><i>\"I love going to this cinema! The seats are comfortable, the screens are huge, and the sound quality is amazing. The staff are always friendly and helpful too. 👍\"</i></p>\r\n                        <p>Albert Tan</p>\r\n                    </div>\r\n\r\n                    <div className=\"w3-panel w3-leftbar w3-dark-grey w3-round\">\r\n                        <p><i>\"I really enjoyed my experience at this cinema. The staff were friendly, the seats were comfortable, and the movie was amazing. I'll definitely be coming back here again!\"</i></p>\r\n                        <p>Shimei He</p>\r\n                    </div>\r\n\r\n                    <div className=\"w3-panel w3-leftbar w3-dark-grey w3-round\">\r\n                        <p><i>\"I've been to a lot of cinemas, but this one is definitely my favorite. The seats are so comfortable, and the sound quality is amazing. I always have a great time here. :) \"</i></p>\r\n                        <p>Jonathan Lai</p>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            {/* <!-- location/map --> */}\r\n            <div className=\"w3-container w3-padding-32\" id=\"location\">\r\n                <h1 className=\"w3-border-bottom w3-border-dark-grey w3-padding-16\">Come visit us at Jurong East.</h1>\r\n                \r\n                <div className='w3-center w3-padding-32'>\r\n                    <h4 className=\"w3-padding-16\">21 Jurong East 3, #34, Singapore 123456 </h4>\r\n                    <img src={require(\"../pics/location.PNG\")} alt=\"location\" className=\"w3-round\" style={{width:\"900px\", height:\"500px\"}}/>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default User","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\Home.js",["219"],[],"import React from 'react';\r\n\r\nimport NavBar from './NavBar';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport SelectSeats from './SelectSeats';\r\n\r\nconst Home = () => {\r\n\r\n    const [movie, setMovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8008/Movie')\r\n        .then(res =>{\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setMovie(data);\r\n        })\r\n    }, []); \r\n\r\n    return (\r\n        <>\r\n        \r\n        <NavBar />\r\n        \r\n        <div className=\"w3-padding\">\r\n\r\n            <div className=\" \" id=\"pets\">\r\n                \r\n                <div className='w3-border-top w3-border-dark-grey' ></div>\r\n\r\n                <div className=\"w3-row w3-padding-32\">    \r\n                    \r\n                    <div className=\"w3-third w3-padding-16\">\r\n                        <div className=\"w3-padding-top-64\">\r\n                        <div className=\"w3-padding-top-64\">\r\n                        <div className=\"w3-padding-top-64\">\r\n                            <div className=\"w3-row-padding w3-padding-16\">\r\n                                    <div className=\"w3-half w3-padding-16\">\r\n                                        <h3 className=\"\">Join us today</h3>\r\n                                        <h3 className=\"\">to earn</h3>\r\n                                        <h3 className=\"w3-text-amber\">Loyalty Points</h3>\r\n                                    </div>\r\n                                    <div className=\"w3-half w3-padding-top-64\">\r\n                                        <Link to='/createaccount' className=\"w3-button w3-deep-orange w3-round-medium\">Sign Up</Link>\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"w3-twothird w3-padding-16\">\r\n                        \r\n                        <div className=\"w3-row-padding w3-padding-16\">\r\n                            <h3 class=\"w3-border-bottom w3-border-light-grey\" style={{maxWidth:\"170px\"}}>Now Showing</h3>\r\n                    \r\n                            <div className=\"w3-col l4 m8 w3-margin-bottom w3-padding-16\">\r\n                                <img src={require(\"../pics/captainmarvel.jpg\")} alt=\"captainmarvel\" className=\"\" style={{width:\"100%\"}}/>\r\n\r\n                                {movie.filter(filter => filter.id === 1).map((record) => (\r\n                                    <div className='w3-dark-grey w3-padding' style={{minHeight:\"400px\"}}>\r\n                                        <h3>{record.Movie}</h3>\r\n                                        <p className=\"w3-opacity w3-small\">{record.Duration}&emsp;({record.AgeRating})</p>\r\n                                        <p className=\"w3-opacity w3-large\">{record.Synopsis}</p>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n\r\n                            <div className=\"w3-col l4 m8 w3-margin-bottom w3-padding-16\">\r\n                                <img src={require(\"../pics/avengers.jpg\")} alt=\"avengers\" className=\"\" style={{width:\"100%\"}}/>\r\n\r\n                                {movie.filter(filter => filter.id === 2).map((record) => (\r\n                                    <div className='w3-dark-grey w3-padding' style={{minHeight:\"400px\"}}>\r\n                                        <h3>{record.Movie}</h3>\r\n                                        <p className=\"w3-opacity w3-small\">{record.Duration}&emsp;({record.AgeRating})</p>\r\n                                        <p className=\"w3-opacity w3-large\">{record.Synopsis}</p>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n\r\n                            <div className=\"w3-col l4 m8 w3-margin-bottom w3-padding-16\">\r\n                                <img src={require(\"../pics/blackpanther.jpg\")} alt=\"blackpanther\" className=\"\" style={{width:\"100%\"}}/>\r\n                                \r\n                                {movie.filter(filter => filter.id === 3).map((record) => (\r\n                                    <div className='w3-dark-grey w3-padding' style={{minHeight:\"400px\"}}>\r\n                                        <h3>{record.Movie}</h3>\r\n                                        <p className=\"w3-opacity w3-small\">{record.Duration}&emsp;({record.AgeRating})</p>\r\n                                        <p className=\"w3-opacity w3-large\">{record.Synopsis}</p>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            <div className=\" \" id=\"pets\">\r\n                \r\n                <div className='w3-border-top w3-border-dark-grey' ></div>\r\n\r\n                <div className=\"w3-container w3-padding-32\" id=\"reviews\">\r\n                    <h3 class=\"w3-padding-16 w3-xxlarge\">What our customer are saying about us</h3>\r\n\r\n                    <div className=\"w3-panel w3-leftbar w3-dark-grey w3-round\">\r\n                        <p><i>\"I love going to this cinema! The seats are comfortable, the screens are huge, and the sound quality is amazing. The staff are always friendly and helpful too. 👍\"</i></p>\r\n                        <p>Albert Tan</p>\r\n                    </div>\r\n\r\n                    <div className=\"w3-panel w3-leftbar w3-dark-grey w3-round\">\r\n                        <p><i>\"I really enjoyed my experience at this cinema. The staff were friendly, the seats were comfortable, and the movie was amazing. I'll definitely be coming back here again!\"</i></p>\r\n                        <p>Shimei He</p>\r\n                    </div>\r\n\r\n                    <div className=\"w3-panel w3-leftbar w3-dark-grey w3-round\">\r\n                        <p><i>\"I've been to a lot of cinemas, but this one is definitely my favorite. The seats are so comfortable, and the sound quality is amazing. I always have a great time here. :) \"</i></p>\r\n                        <p>Jonathan Lai</p>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            {/* <!-- location/map --> */}\r\n            <div className=\"w3-container w3-padding-32\" id=\"location\">\r\n                <h1 className=\"w3-border-bottom w3-border-dark-grey w3-padding-16\">Come visit us at Jurong East.</h1>\r\n                \r\n                <div className='w3-center w3-padding-32'>\r\n                    <h4 className=\"w3-padding-16\">21 Jurong East 3, #34, Singapore 123456 </h4>\r\n                    <img src={require(\"../pics/location.PNG\")} alt=\"location\" className=\"w3-round\" style={{width:\"900px\", height:\"500px\"}}/>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\ReviewRating.js",["220"],[],"import React from 'react';\r\nimport GetReviewRating from './GetReviewRating';\r\nimport NavBarUser from './NavBarUser';\r\nimport  Modal  from 'react-modal'\r\nimport { useState } from 'react';\r\nimport { BsHouse } from 'react-icons/bs';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      backgroundColor       : '#4f4747'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst ReviewRating = () => {\r\n    const [feedback, setFeedback] = useState('');\r\n    const [rating, setRating] = useState(1);\r\n    const [modalIsOpen3, setModalIsOpen3] = useState(false);\r\n    const [modalIsOpen4, setModalIsOpen4] = useState(false);\r\n    const [isPending, setIsPending] = useState(false);\r\n    const history = useNavigate();\r\n    const location = useLocation();\r\n    const username = location.state.username;\r\n    var loyaltypoint = location.state.loyaltypoint;\r\n    var seatpref = location.state.seatpref;\r\n    var id = location.state.id;\r\n\r\n    const handleSubmit2 = (e) =>{\r\n        e.preventDefault();\r\n        history('/user', {state:{username, loyaltypoint, seatpref, id}});\r\n        setModalIsOpen4(false)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        const review = { feedback, rating };\r\n        setIsPending(true);\r\n\r\n        fetch('http://localhost:8002/reviews',{\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(review)\r\n        }).then(()=>{\r\n            console.log(\"new review added\");\r\n            setIsPending(false);\r\n            setModalIsOpen3(false);\r\n            setModalIsOpen4(true);\r\n            //history(-1);\r\n            //history('/user');\r\n            \r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        \r\n        <NavBarUser />\r\n\r\n        <div className='w3-row w3-margin'>\r\n            <h3 class=\"w3-twothird w3-container w3-xxlarge w3-border-bottom w3-border-light-grey\" style={{maxWidth:\"\"}}>Review and Rating Section</h3>\r\n            <div className='w3-third w3-container w3-cell w3-cell-middle '>\r\n                <a className='w3-right w3-button w3-deep-orange w3-round-medium w3-margin' onClick={() => setModalIsOpen3(true)}> Submit Review & Feedback</a>\r\n            </div>\r\n\r\n        </div>\r\n        \r\n        \r\n        <Modal\r\n            isOpen={modalIsOpen3}\r\n            onRequestClose={() => setModalIsOpen3(false)}\r\n            style={customStyles} >\r\n            \r\n            <h1 className=\"w3-xxlarge\">Submit Review and Rating <BsHouse /></h1>\r\n            <p className='w3-center'>Your feedback is important to us!!! <br></br>Do let us know what can we improve further.</p>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <label className=\"w3-left w3-xlarge\" >Feedback:</label>\r\n                <textarea\r\n                    className=\"w3-input w3-section w3-border w3-round\"\r\n                    type=\"text\" \r\n                    required\r\n                    value={feedback}\r\n                    onChange={(e) => setFeedback(e.target.value)}\r\n                    />\r\n                <label className=\"w3-left w3-xlarge\" >Rating:</label>\r\n                <select \r\n                    className=\"w3-input w3-section w3-border w3-round\"\r\n                    value={rating}\r\n                    onChange={(e) => setRating(e.target.value)}\r\n                >\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                </select>\r\n\r\n                <div className=\"Iwantaligncenter\">\r\n                    <button className='w3-button w3-light-grey w3-round-large w3-margin ' onClick={() => setModalIsOpen3(false)}>Close</button>\r\n                    { !isPending && <button className=\"w3-button w3-light-grey w3-round-large w3-margin\" >Submit</button>}\r\n                    { isPending && <button disabled className=\"w3-button w3-light-grey w3-round-large w3-margin-top\">Submitting release form...</button>}\r\n                </div>\r\n                \r\n            </form>\r\n            \r\n        </Modal>\r\n        <Modal\r\n            isOpen={modalIsOpen4}\r\n            onRequestClose={() => setModalIsOpen4(false)}\r\n            style={customStyles} >\r\n\r\n            <h1>Thank you for your feedback!</h1>\r\n            <div className=\"Iwantaligncenter\">\r\n                <button className='w3-button w3-light-grey w3-round-large w3-margin-top' onClick={handleSubmit2}>Close</button>\r\n            </div>\r\n        </Modal>\r\n        \r\n        <GetReviewRating/>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ReviewRating","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\CreateAccount.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\LoyaltyPage.js",["221","222","223"],[],"import { useState, useEffect } from \"react\";\r\nimport NavBarUser from \"./NavBarUser\";\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport  Modal  from 'react-modal'\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      backgroundColor       : '#4f4747'\r\n    }\r\n};\r\n\r\nconst LoyaltyPage = () => {\r\n    const history = useNavigate();\r\n    const [loyaltyitem, setLoyaltyItem] = useState([]);\r\n    const [item, setItem] = useState('');\r\n    const [modalIsOpen4, setModalIsOpen4] = useState(false);\r\n    const [points, setPoints] = useState('');\r\n    const [itemstatus, setitemstatus] = useState(\"Unclaimed\");\r\n    const [quantity, setquantity] = useState(\" \");\r\n    const [isPending, setIsPending] = useState(false);\r\n    const location = useLocation();\r\n    const username = location.state.username;\r\n    var loyaltypoint = location.state.loyaltypoint;\r\n    var seatpref = location.state.seatpref;\r\n    var id = location.state.id;\r\n    var totalpoints = \" \";\r\n    \r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8004/loyaltyitems')\r\n        .then(res =>{\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setLoyaltyItem(data);\r\n        })\r\n    }, []); \r\n\r\n    const handleSubmit2 = () =>{\r\n        setModalIsOpen4(false)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        totalpoints = points * quantity;\r\n        console.log(totalpoints)\r\n        \r\n        if (loyaltypoint > totalpoints){\r\n\r\n            var deduction = loyaltypoint - totalpoints; \r\n\r\n            console.log(deduction)\r\n\r\n            var customerid = id;\r\n            const itemstatus =\"Unclaimed\"\r\n            const loyaltytransaction = {item, itemstatus, quantity, customerid};\r\n            \r\n            setIsPending(true);\r\n\r\n            loyaltypoint = deduction\r\n\r\n            fetch(`http://localhost:8005/user/${customerid}`) \r\n            .then(res=>{\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                \r\n                console.log(data)\r\n\r\n                fetch(`http://localhost:8005/user/${customerid}`,\r\n                {\r\n                    method: 'PUT',\r\n                    headers: {\"Content-Type\": \"application/json\"},\r\n                    body: JSON.stringify({...data, loyaltypoint : deduction})\r\n                }) \r\n                \r\n            }); \r\n\r\n            \r\n            \r\n            fetch('http://localhost:8003/loyaltytransaction',{\r\n                method: 'POST',\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify(loyaltytransaction)\r\n            }).then(()=>{\r\n                console.log(\"Item is redeemed\");\r\n                history('/user', {state:{username, loyaltypoint, seatpref, id}});\r\n            })\r\n \r\n\r\n        } else if (loyaltypoint < totalpoints){\r\n\r\n            console.log(\"not enough loyalty point!!\")\r\n            setModalIsOpen4(true);\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    const tableStyles = {\r\n        borderCollapse: 'collapse',\r\n        width: '100%',\r\n        backgroundColor: '#f9f9f9',\r\n        color: '#444'\r\n    }\r\n    \r\n    const tableHeaderStyles = {\r\n        backgroundColor: '#333',\r\n        color: '#fff',\r\n        fontWeight: 'bold'\r\n    }\r\n    \r\n    const tableDataStyles = {\r\n        textAlign: 'left',\r\n        padding: '8px'\r\n    }\r\n\r\n    const alternatingRowStyles = {\r\n        backgroundColor: '#f2f2f2'\r\n    }\r\n\r\n    return (  \r\n        <>\r\n            <NavBarUser />\r\n\r\n            <div className='w3-border-top w3-border-dark-grey' ></div>\r\n\r\n            <div style={{margin: '20px'}}>\r\n                <h1>Loyalty Point Redemption</h1>\r\n                <p>Current Loyalty Points: <span className='w3-text-amber'>{loyaltypoint}</span></p>\r\n                <table style={tableStyles}>\r\n                    <thead>\r\n                        <tr style={tableHeaderStyles}>\r\n                            <th style={tableDataStyles}>Item ID</th>\r\n                            <th style={tableDataStyles}>Item Name</th>\r\n                            <th style={tableDataStyles}>Points required</th>\r\n                            <th style={tableDataStyles}>Image</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {loyaltyitem.map((record, index) => (\r\n                        <tr key={index} style={index % 2 === 0 ? null : alternatingRowStyles}>\r\n                            <td style={tableDataStyles}>{record.itemid}</td>\r\n                            <td style={tableDataStyles}>{record.itemname}</td>\r\n                            <td style={tableDataStyles}>{record.points}</td>\r\n                            <td style={tableDataStyles}><img src={record.imagesrc} style={{width:\"300px\", height:\"200px\"}} className=\"w3-round\"></img></td>\r\n                        </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n                \r\n                <form onSubmit={handleSubmit}>\r\n\r\n                    <div className=\"w3-section\">\r\n\r\n                        <div className=\"w3-half w3-padding-small\">\r\n                            <h3>Select your redemption item:</h3>\r\n                            <select \r\n                                className=\"w3-input w3-section w3-border w3-round w3-dark-grey\"\r\n                                value={item}\r\n                                onChange={(e) => {\r\n                                    setItem(e.target.value);\r\n                                    const selectedRecord = loyaltyitem.find(record => record.itemname === e.target.value);\r\n                                    setPoints(selectedRecord.points);\r\n                                }}\r\n                                >\r\n                                <option value=\"\">Choose An Item</option>\r\n                                {loyaltyitem.map(record => (\r\n                                    <option value={record.itemname}>{record.itemname}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    \r\n                        <div className=\"w3-half w3-padding-small\">\r\n                            <h3>Quantity:</h3>\r\n                            <select\r\n                                className=\"w3-input w3-section w3-border w3-round w3-dark-grey\"\r\n                                value={quantity}\r\n                                onChange={(e) => setquantity(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Item Quantity</option>\r\n                                <option value=\"1\">1</option>\r\n                                <option value=\"2\">2</option>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                                <option value=\"5\">5</option>\r\n            \r\n                            </select>\r\n                        </div>\r\n                   \r\n                    </div>\r\n\r\n                    <div className=\"w3-padding-small\">\r\n        \r\n                        { !isPending && <button className=\"w3-button w3-deep-orange w3-round-large\" >Redeem</button>}\r\n                        { isPending && <button disabled className=\"w3-button w3-deep-orange w3-round-large w3-margin-top\">Submitting release form...</button>}\r\n                    \r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n\r\n            <Modal\r\n                isOpen={modalIsOpen4}\r\n                onRequestClose={() => setModalIsOpen4(false)}\r\n                style={customStyles} >\r\n\r\n                <h1>Not Enough Loyalty Point!!</h1>\r\n                <div className=\"Iwantaligncenter\">\r\n                    <button className='w3-button w3-light-grey w3-round-large w3-margin-top' onClick={handleSubmit2}>Close</button>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n \r\nexport default LoyaltyPage;","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\LoyaltyTransaction.js",["224"],[],"import { useState, useEffect } from \"react\";\r\nimport NavBarUser from \"./NavBarUser\";\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst LoyaltyTransaction = () => {\r\n    const [loyaltytransaction, setLoyaltyTransaction] = useState([]);\r\n    const [ordertransaction, setOrderTransaction] = useState([]);\r\n    const location = useLocation();\r\n    var id = location.state.id;\r\n\r\n    useEffect(()=>{\r\n         fetch('http://localhost:8003/loyaltytransaction')\r\n         .then(res =>{\r\n             return res.json();\r\n         })\r\n         .then(data => {\r\n             setLoyaltyTransaction(data);\r\n         });\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        fetch('http://localhost:8007/ordertransaction')\r\n        .then(res =>{\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setOrderTransaction(data);\r\n        });\r\n    },[]);\r\n\r\n    const tableStyles = {\r\n        borderCollapse: 'collapse',\r\n        width: '100%',\r\n        backgroundColor: '#f9f9f9',\r\n        color: '#444'\r\n    }\r\n    \r\n    const tableHeaderStyles = {\r\n        backgroundColor: '#333',\r\n        color: '#fff',\r\n        fontWeight: 'bold'\r\n    }\r\n    \r\n    const tableDataStyles = {\r\n        textAlign: 'left',\r\n        padding: '8px'\r\n    }\r\n\r\n    const alternatingRowStyles = {\r\n        backgroundColor: '#f2f2f2'\r\n    }\r\n\r\n    return (  \r\n        <>\r\n            <NavBarUser />\r\n\r\n            <div className='w3-border-top w3-border-dark-grey' ></div>\r\n\r\n            <div style={{margin: '20px'}}>\r\n                <h1>Order Transaction History</h1>\r\n                <table style={tableStyles}>\r\n                    <thead>\r\n                        <tr style={tableHeaderStyles}>\r\n                            <th style={tableDataStyles}>Transaction ID</th>\r\n                            <th style={tableDataStyles}>Customer ID</th>\r\n                            <th style={tableDataStyles}>Item Name</th>\r\n                            <th style={tableDataStyles}>Quantity</th>\r\n                            <th style={tableDataStyles}>Total Amount</th>\r\n                            <th style={tableDataStyles}>Item Status</th>\r\n                            <th style={tableDataStyles}>Detail</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {ordertransaction.filter(filtercustomerid => filtercustomerid.customerid === id).slice(0).reverse().map((record, index) => (\r\n                            <tr id={record.key} style={index % 2 === 0 ? {} : alternatingRowStyles}>\r\n                                <td style={tableDataStyles}>{record.id}</td>\r\n                                <td style={tableDataStyles}>{record.customerid}</td>\r\n                                <td style={tableDataStyles}>{record.item}</td>\r\n                                <td style={tableDataStyles}>{record.quantity}</td>\r\n                                <td style={tableDataStyles}>${record.totalamount.toFixed(2)}</td>\r\n                                <td style={tableDataStyles}>{record.itemstatus}</td>\r\n                                <td style={tableDataStyles}>{record.detail}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <div style={{margin: '20px'}}>\r\n                <h1>Loyalty Transaction History</h1>\r\n                <table style={tableStyles}>\r\n                    <thead>\r\n                        <tr style={tableHeaderStyles}>\r\n                            <th style={tableDataStyles}>Transaction ID</th>\r\n                            <th style={tableDataStyles}>Customer ID</th>\r\n                            <th style={tableDataStyles}>Item Name</th>\r\n                            <th style={tableDataStyles}>Quantity</th>\r\n                            <th style={tableDataStyles}>Item Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {loyaltytransaction.filter(filtercustomerid => filtercustomerid.customerid === id).slice(0).reverse().map((record, index) => (\r\n                            <tr id={record.key} style={index % 2 === 0 ? {} : alternatingRowStyles}>\r\n                                <td style={tableDataStyles}>{record.id}</td>\r\n                                <td style={tableDataStyles}>{record.customerid}</td>\r\n                                <td style={tableDataStyles}>{record.item}</td>\r\n                                <td style={tableDataStyles}>{record.quantity}</td>\r\n                                <td style={tableDataStyles}>{record.itemstatus}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n \r\nexport default LoyaltyTransaction;\r\n","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\FoodAndDrink.js",["225"],[],"import { useState, useEffect } from \"react\";\r\nimport NavBarUser from './NavBarUser';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst FoodAndDrink = () => {\r\n    const history = useNavigate();\r\n    const [foodanddrink, setfoodanddrink] = useState([]);\r\n    const [quantity, setquantity] = useState();\r\n    const [item, setItem]= useState();\r\n    const [itemstatus, setitemstatus] = useState(\"Unpaid\");\r\n    const [isPending, setIsPending] = useState(false);\r\n    const [price, setPrice] = useState();\r\n    const location = useLocation();\r\n    const username = location.state.username;\r\n    var loyaltypoint = location.state.loyaltypoint;\r\n    var seatpref = location.state.seatpref;\r\n    var id = location.state.id;\r\n    var totalamount = quantity * price;\r\n\r\n    useEffect(()=>{\r\n        fetch('http://localhost:9000/foodanddrink')\r\n        .then(res =>{\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setfoodanddrink(data);\r\n        });\r\n    },[]);\r\n    \r\n    const handleSubmit = (e) => {\r\n        var customerid = id;\r\n        const ordertransaction = {item, itemstatus, quantity, totalamount, customerid};\r\n        e.preventDefault();\r\n        setIsPending(true);\r\n        \r\n        fetch('http://localhost:8007/ordertransaction',{\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(ordertransaction)\r\n        }).then(()=>{\r\n            console.log(\"Order have been placed\");\r\n            history('/user', {state:{username, loyaltypoint, seatpref, id}});\r\n        })\r\n    }\r\n    \r\n    const tableStyles = {\r\n        borderCollapse: 'collapse',\r\n        width: '100%',\r\n        backgroundColor: '#f9f9f9',\r\n        color: '#444'\r\n    }\r\n    \r\n    const tableHeaderStyles = {\r\n        backgroundColor: '#333',\r\n        color: '#fff',\r\n        fontWeight: 'bold'\r\n    }\r\n    \r\n    const tableDataStyles = {\r\n        textAlign: 'left',\r\n        padding: '8px'\r\n    }\r\n\r\n    const alternatingRowStyles = {\r\n        backgroundColor: '#f2f2f2'\r\n    }\r\n\r\n    return ( \r\n        <>\r\n        \r\n        <NavBarUser />\r\n\r\n        <div className='w3-border-top w3-border-dark-grey' ></div>\r\n\r\n        <div style={{margin: '20px'}}>\r\n            <h1>Food And Drink Purchase Section</h1>\r\n            <p>Select a combo to purchase:</p>\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <table style={tableStyles}>\r\n                    <thead>\r\n                    <tr style={tableHeaderStyles}>\r\n                        <th style={tableDataStyles}>Item name</th>\r\n                        <th style={tableDataStyles}>Item Description:</th>\r\n                        <th style={tableDataStyles}>Price</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {foodanddrink.map((record, index) => (\r\n                        <tr style={index % 2 === 0 ? null : alternatingRowStyles} key={record.key}>\r\n                        <td style={tableDataStyles}>{record.itemname}</td>\r\n                        <td style={tableDataStyles}>{record.itemdesc}</td>\r\n                        <td style={tableDataStyles}>${record.price.toFixed(2)}</td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div className=\"w3-section\">\r\n\r\n                    <div className=\"w3-half w3-padding-small\">\r\n                        <p>Choose A Combo:</p>\r\n                        <select className=\"w3-input w3-section w3-border w3-round w3-dark-grey\" value={item} onChange={(e)=> {\r\n                            setItem(e.target.value)\r\n                            const selectedRecord = foodanddrink.find(record => record.itemname === e.target.value);\r\n                            setPrice(selectedRecord.price.toFixed(2));\r\n                        }}\r\n                        >\r\n                            <option value=\"\">Choose A Combo</option>\r\n                            {foodanddrink.map(current =>(\r\n                                <option value={current.itemname}>{current.itemname}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    \r\n                    <div className=\"w3-half w3-padding-small\">\r\n                        <p>Select a Quantity:</p>\r\n                        <select className=\"w3-input w3-section w3-border w3-round w3-dark-grey\" value={quantity} onChange={(e)=>setquantity(e.target.value)}>\r\n                            <option value=\"\">Item Quantity</option>\r\n                            <option value=\"1\">1</option>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"4\">4</option>\r\n                            <option value=\"5\">5</option>\r\n                        </select>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"w3-padding-small\">\r\n                    <p>Total: ${totalamount.toFixed(2)}</p>\r\n                    { !isPending && <button className=\"w3-button w3-deep-orange w3-round-large\" >Place Order</button>}\r\n                    { isPending && <button disabled className=\"w3-button w3-deep-orange w3-round-large w3-margin-top\">Submitting release form...</button>}\r\n                </div>\r\n                \r\n                \r\n            </form>\r\n        </div>\r\n        \r\n        </>\r\n        \r\n     );\r\n}\r\n \r\nexport default FoodAndDrink;","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\NavBar.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\Reducer.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\NavBarUser.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\GetReviewRating.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\AdoptList.js",[],[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\NavBarStaff.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\ReleaseList.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\BookTicket.js",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\StaffFoodandDrink.js",["226","227","228"],[],"import NavBarStaff from './NavBarStaff';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst StaffFoodandDrink = () => {\r\n    const history = useNavigate();\r\n    const [foodanddrink, setfoodanddrink] = useState([]);\r\n    const [quantity, setquantity] = useState();\r\n    const [item, setItem]= useState();\r\n    const [itemstatus, setitemstatus] = useState(\"Paid\");\r\n    const [isPending, setIsPending] = useState(false);\r\n    const [price, setPrice] = useState();\r\n    var totalamount = quantity * price;\r\n    \r\n    useEffect(()=>{\r\n        fetch('http://localhost:9000/foodanddrink')\r\n        .then(res =>{\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setfoodanddrink(data);\r\n        });\r\n    },[]);\r\n\r\n    const handleSubmit = (e) => {\r\n        var customerid = \"staff\";\r\n        const ordertransaction = {item, itemstatus, quantity, totalamount, customerid};\r\n        //e.preventDefault();\r\n        setIsPending(true);\r\n        \r\n        fetch('http://localhost:8007/ordertransaction',{\r\n            method: 'POST',\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify(ordertransaction)\r\n        }).then(()=>{\r\n            console.log(\"Order have been placed\");\r\n            //history('/user', {state:{username, loyaltypoint, seatpref, id}});\r\n        })\r\n    }\r\n    \r\n    const tableStyles = {\r\n        borderCollapse: 'collapse',\r\n        width: '100%',\r\n        backgroundColor: '#f9f9f9',\r\n        color: '#444'\r\n    }\r\n    \r\n    const tableHeaderStyles = {\r\n        backgroundColor: '#333',\r\n        color: '#fff',\r\n        fontWeight: 'bold'\r\n    }\r\n    \r\n    const tableDataStyles = {\r\n        textAlign: 'left',\r\n        padding: '8px'\r\n    }\r\n\r\n    const alternatingRowStyles = {\r\n        backgroundColor: '#f2f2f2'\r\n    }\r\n\r\n    return (\r\n        <>\r\n        \r\n        <NavBarStaff />\r\n\r\n        <div className='w3-border-top w3-border-dark-grey' ></div>\r\n\r\n        <div className=\"w3-padding-32\">\r\n            <h1>Food And Drink Purchase Section</h1>\r\n            <p>Select a combo to purchase:</p>\r\n            <form onSubmit={handleSubmit} style={{margin: '20px'}}>\r\n\r\n                <table style={tableStyles}>\r\n                    <thead>\r\n                    <tr style={tableHeaderStyles}>\r\n                        <th style={tableDataStyles}>Item name</th>\r\n                        <th style={tableDataStyles}>Item Description:</th>\r\n                        <th style={tableDataStyles}>Price</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {foodanddrink.map((record, index) => (\r\n                        <tr style={index % 2 === 0 ? null : alternatingRowStyles} key={record.key}>\r\n                        <td style={tableDataStyles}>{record.itemname}</td>\r\n                        <td style={tableDataStyles}>{record.itemdesc}</td>\r\n                        <td style={tableDataStyles}>${record.price.toFixed(2)}</td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div className=\"w3-section\">\r\n\r\n                    <div className=\"w3-half w3-padding-small\">\r\n                        <p>Choose A Combo:</p>\r\n                        <select className=\"w3-input w3-section w3-border w3-round w3-dark-grey\" value={item} onChange={(e)=> {\r\n                            setItem(e.target.value)\r\n                            const selectedRecord = foodanddrink.find(record => record.itemname === e.target.value);\r\n                            setPrice(selectedRecord.price.toFixed(2));\r\n                        }}\r\n                        >\r\n                            <option value=\"\">Choose A Combo</option>\r\n                            {foodanddrink.map(current =>(\r\n                                <option value={current.itemname}>{current.itemname}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    \r\n                    <div className=\"w3-half w3-padding-small\">\r\n                        <p>Select a Quantity:</p>\r\n                        <select className=\"w3-input w3-section w3-border w3-round w3-dark-grey\" value={quantity} onChange={(e)=>setquantity(e.target.value)}>\r\n                            <option value=\"\">Item Quantity</option>\r\n                            <option value=\"1\">1</option>\r\n                            <option value=\"2\">2</option>\r\n                            <option value=\"3\">3</option>\r\n                            <option value=\"4\">4</option>\r\n                            <option value=\"5\">5</option>\r\n                        </select>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <div className=\"w3-padding-small\">\r\n                    <p>Total: ${totalamount.toFixed(2)}</p>\r\n                    { !isPending && <button className=\"w3-button w3-deep-orange w3-round-large\" >Place Order</button>}\r\n                    { isPending && <button disabled className=\"w3-button w3-deep-orange w3-round-large w3-margin-top\">Submitting release form...</button>}\r\n                </div>\r\n                \r\n                \r\n            </form>\r\n        </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StaffFoodandDrink","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\StaffSetLoyaltyStatus.js",["229","230","231","232","233"],[],"import NavBarStaff from './NavBarStaff';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst StaffSetLoyaltyStatus = () => {\r\n    \r\n    const [searched, setsearched] = useState(0);\r\n    const [LoyaltyTransaction, setLoyaltyTransaction] = useState([]);\r\n    const [isPending, setIsPending] = useState(false);\r\n    const [id2, setId] = useState(0);\r\n    const [item, setitem] = useState('');\r\n    const location = useLocation();\r\n    const history = useNavigate();\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        fetch('http://localhost:8003/loyaltytransaction')\r\n         .then(res =>{\r\n             return res.json();\r\n         })\r\n         .then(data => {\r\n             console.log(data);\r\n             setLoyaltyTransaction(data);\r\n         });     \r\n             console.log(searched)\r\n             setIsPending(true);\r\n                // console.log(xtype(parseInt(searched)));\r\n    }\r\n\r\n    const handleSubmit2 = (e) => {\r\n        e.preventDefault()\r\n        console.log(id2);\r\n        const status =\"Completed\"\r\n        fetch(`http://localhost:8003/loyaltytransaction/${id2}`) \r\n        .then(res=>{\r\n            return res.json();\r\n         })\r\n        .then(data => {\r\n            // console.log(data)\r\n            // console.log(data.item)\r\n            // setitem(data.item)\r\n            console.log(data)\r\n\r\n            fetch(`http://localhost:8003/loyaltytransaction/${id2}`,\r\n            {\r\n                method: 'PUT',\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify({...data, itemstatus : status})\r\n            }) \r\n\r\n            console.log(\"update successfully\")\r\n            console.log(\"refresh page\")\r\n            history(0)   \r\n\r\n        });  \r\n    }\r\n\r\n    const tableStyles = {\r\n        borderCollapse: 'collapse',\r\n        width: '100%',\r\n        backgroundColor: '#f9f9f9',\r\n        color: '#444'\r\n    }\r\n    \r\n    const tableHeaderStyles = {\r\n        backgroundColor: '#333',\r\n        color: '#fff',\r\n        fontWeight: 'bold'\r\n    }\r\n    \r\n    const tableDataStyles = {\r\n        textAlign: 'left',\r\n        padding: '8px'\r\n    }\r\n\r\n    return ( \r\n        <>\r\n        <NavBarStaff />\r\n\r\n        <div className='w3-border-top w3-border-dark-grey' ></div>\r\n        \r\n        <div className=\"w3-padding-32\">\r\n            <h1>Update Loyalty Status</h1>\r\n            <form onSubmit={handleSubmit} style={{margin: '20px'}}>\r\n                <table>\r\n                <thead>\r\n                <tr>\r\n                    <th><h3>Search Loyalty Transaction History Using ID: &nbsp; </h3></th>\r\n                    <th><input type=\"text\" value={searched} onChange={(e) => setsearched(e.target.value)}></input><button>Search</button></th>\r\n                </tr>\r\n                </thead>             \r\n                </table>\r\n            </form>\r\n            \r\n            <form onSubmit={handleSubmit2} style={{margin: '20px'}}>\r\n                <table style={tableStyles}>\r\n                    <thead>\r\n                        <tr style={tableHeaderStyles}>\r\n                            <th style={tableDataStyles}>Transaction ID</th>\r\n                            <th style={tableDataStyles}>Customer ID</th>\r\n                            <th style={tableDataStyles}>Item Name</th>\r\n                            <th style={tableDataStyles}>Item Status</th>\r\n                            <th style={tableDataStyles}>Submit to confirm claim</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {isPending && LoyaltyTransaction.filter(records => records.id === parseInt(searched)).map(record =>(\r\n                        <tr id={record.key}>\r\n                            <td style={tableDataStyles}>{record.id}</td>\r\n                            <td style={tableDataStyles}>{record.customerid}</td>\r\n                            <td style={tableDataStyles}>{record.item}</td>\r\n                            <td style={tableDataStyles}>{record.itemstatus}</td>\r\n                            <td style={tableDataStyles}><button className=\"w3-button w3-red w3-round-large\" value={record.id} onClick={(e)=> setId(e.target.value)}>Submit</button></td>\r\n                        </tr>\r\n                        ))}    \r\n                    </tbody>     \r\n                </table>\r\n            </form>\r\n\r\n        </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default StaffSetLoyaltyStatus;","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\StaffSetOrderStatus.js",["234","235","236","237","238"],[],"import NavBarStaff from './NavBarStaff';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst StaffSetOrderStatus = () => {\r\n    \r\n    const [searched, setsearched] = useState(0);\r\n    const [LoyaltyTransaction, setLoyaltyTransaction] = useState([]);\r\n    const [isPending, setIsPending] = useState(false);\r\n    const [id2, setId2] = useState(0);\r\n    const [item, setitem] = useState('');\r\n    const location = useLocation();\r\n    const history = useNavigate();\r\n    // const [point, setPoint] = useState();\r\n    // const [id, setId] = useState();\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        fetch('http://localhost:8007/ordertransaction')\r\n         .then(res =>{\r\n             return res.json();\r\n         })\r\n         .then(data => {\r\n             console.log(data);\r\n             setLoyaltyTransaction(data);\r\n         });     \r\n             console.log(searched)\r\n             setIsPending(true);\r\n                // console.log(xtype(parseInt(searched)));\r\n    }\r\n\r\n    const handleSubmit2 = (e) => {\r\n        e.preventDefault()\r\n        console.log(id2);\r\n        const status =\"Paid\"\r\n        \r\n        \r\n\r\n        fetch(`http://localhost:8007/ordertransaction/${id2}`) \r\n        .then(res=>{\r\n            return res.json();\r\n         })\r\n        .then(data => {\r\n            // console.log(data)\r\n            // console.log(data.item)\r\n            // setitem(data.item)\r\n            console.log(data)\r\n            var point = data.totalamount\r\n            var id = data.customerid\r\n            console.log(\"loyalty point:\")\r\n            console.log(point)\r\n            console.log(\"customer id:\")\r\n            console.log(id)\r\n\r\n            fetch(`http://localhost:8007/ordertransaction/${id2}`,\r\n            {\r\n                method: 'PUT',\r\n                headers: {\"Content-Type\": \"application/json\"},\r\n                body: JSON.stringify({...data, itemstatus : status})\r\n            }) \r\n\r\n            console.log(\"update successfully\")\r\n\r\n            fetch(`http://localhost:8005/user/${id}`) \r\n            .then(res=>{\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                \r\n                console.log(data)\r\n                var addition =  data.loyaltypoint + point\r\n                console.log(addition)\r\n\r\n                fetch(`http://localhost:8005/user/${id}`,\r\n                {\r\n                    method: 'PUT',\r\n                    headers: {\"Content-Type\": \"application/json\"},\r\n                    body: JSON.stringify({...data, loyaltypoint : addition})\r\n                }) \r\n\r\n                console.log(\"customer gain new point\")\r\n                console.log(\"refresh page\")\r\n                history(0)  \r\n                \r\n            });  \r\n\r\n        });  \r\n\r\n    }\r\n\r\n    const tableStyles = {\r\n        borderCollapse: 'collapse',\r\n        width: '100%',\r\n        backgroundColor: '#f9f9f9',\r\n        color: '#444'\r\n    }\r\n    \r\n    const tableHeaderStyles = {\r\n        backgroundColor: '#333',\r\n        color: '#fff',\r\n        fontWeight: 'bold'\r\n    }\r\n    \r\n    const tableDataStyles = {\r\n        textAlign: 'left',\r\n        padding: '8px'\r\n    }\r\n\r\n    return ( \r\n        <>\r\n        <NavBarStaff />\r\n\r\n        <div className='w3-border-top w3-border-dark-grey' ></div>\r\n        \r\n        <div className=\"w3-padding-32\">\r\n            <h1>Update Order Status</h1>\r\n            <form onSubmit={handleSubmit} style={{margin: '20px'}}>\r\n                <table>\r\n                <thead>\r\n                <tr>\r\n                    <th><h3>Search Order Transaction History Using ID: &nbsp; </h3></th>\r\n                    <th><input type=\"text\" value={searched} onChange={(e) => setsearched(e.target.value)}></input><button>Search</button></th>\r\n                </tr>    \r\n                </thead>      \r\n                </table>\r\n            </form>\r\n            \r\n            <form onSubmit={handleSubmit2} style={{margin: '20px'}}>\r\n                <table style={tableStyles}>\r\n                    <thead>\r\n                        <tr style={tableHeaderStyles}>\r\n                            <th style={tableDataStyles}>Transaction ID</th>\r\n                            <th style={tableDataStyles}>Customer ID</th>\r\n                            <th style={tableDataStyles}>Item Name</th>\r\n                            <th style={tableDataStyles}>Quantity</th>\r\n                            <th style={tableDataStyles}>Total Amount</th>\r\n                            <th style={tableDataStyles}>Item Status</th>\r\n                            <th style={tableDataStyles}>Item Detail</th>\r\n                            <th style={tableDataStyles}>Submit to confirm claim</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {isPending && LoyaltyTransaction.filter(records => records.id === parseInt(searched)).map(record =>(\r\n                        <tr id={record.key}>\r\n                            <td style={tableDataStyles}>{record.id}</td>\r\n                            <td style={tableDataStyles}>{record.customerid}</td>\r\n                            <td style={tableDataStyles}>{record.item}</td>\r\n                            <td style={tableDataStyles}>{record.quantity}</td>\r\n                            <td style={tableDataStyles}>${record.totalamount.toFixed(2)}</td>\r\n                            <td style={tableDataStyles}>{record.itemstatus}</td>\r\n                            <td style={tableDataStyles}>{record.detail}</td>\r\n                            <td style={tableDataStyles}><button className=\"w3-button w3-red w3-round-large\" value={record.id} onClick={(e)=> setId2(e.target.value)}>Submit</button></td>\r\n                        </tr>\r\n                        ))}     \r\n                    </tbody>    \r\n                </table>\r\n            </form>\r\n            \r\n        </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default StaffSetOrderStatus;","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\SelectSeats.js",["239","240"],[],"import { useEffect, useState } from \"react\";\r\nimport NavBarUser from \"./NavBarUser\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SelectSeats = () => {\r\n  const [data2, setData2] = useState([]);\r\n  const [seats, setSeats] = useState([]);\r\n  const [selectedSeats, setSelectedSeats] = useState([]);\r\n  const [tickettype, setTickettype] = useState();\r\n  const [ticketprice, setTicketprice] = useState(\"\");\r\n  const numberOfSelectedSeats = selectedSeats.length;\r\n  const totalamount = numberOfSelectedSeats * ticketprice;\r\n\r\n  const location = useLocation();\r\n  const history = useNavigate();\r\n  const username = location.state.username;\r\n  var loyaltypoint = location.state.loyaltypoint;\r\n  var seatpref = location.state.seatpref;\r\n  var id = location.state.id;\r\n\r\n  var selectedTimeslot = location.state.selectedTimeslot;\r\n  var selectedDate = location.state.selectedDate;\r\n  var selectedMovie = location.state.selectedMovie;\r\n  var selectedId = location.state.selectedId;\r\n  var selectedRoom = location.state.selectedRoom;\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8009/moviesession\")\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setData2(data);\r\n        console.log(\"console 1\");\r\n        console.log(data);\r\n      });\r\n\r\n  }, []);\r\n\r\n  const handleSomething = () => {\r\n    console.log(\"console 2\");\r\n    console.log(data2);\r\n    setSeats(data2.filter(filter => filter.id === selectedId).flatMap(session => session.seats));\r\n    console.log(\"console 3\");\r\n    console.log(seats);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleSomething();\r\n  }, [data2]);\r\n\r\n  const handleTicketChange = (e) => {\r\n    const selectedTicketType = e.target.value;\r\n    setTickettype(selectedTicketType);\r\n    \r\n    // Set the ticket price based on the selected ticket type\r\n    switch(selectedTicketType) {\r\n      case \"adult\":\r\n        setTicketprice(12);\r\n        break;\r\n      case \"child\":\r\n        setTicketprice(7);\r\n        break;\r\n      case \"student\":\r\n        setTicketprice(7);\r\n        break;\r\n      case \"senior\":\r\n        setTicketprice(9);\r\n        break;\r\n      default:\r\n        setTicketprice(0);\r\n        break;\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setSelectedSeats([]);\r\n    setSeats((seats) =>\r\n      seats.map((s) => {\r\n        if (s.selected) {\r\n          return { ...s, selected: false };\r\n        }\r\n        return s;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    console.log(e.target.value);\r\n    console.log(\"Selected seats:\", selectedSeats);\r\n\r\n    //const updatedSeats = selectedSeats;\r\n    const movieSessionId = selectedId;\r\n    console.log(movieSessionId)\r\n\r\n    var customerid = id;\r\n    var quantity = numberOfSelectedSeats;\r\n    var itemstatus = \"Unpaid\";\r\n    var item = \"Movie Ticket\";\r\n    var movie = selectedMovie;\r\n    var detail = \" [Date]: \"+selectedDate+\",  [Timeslot]: \"+selectedTimeslot+\",  [Movie]: \"+selectedMovie+\",  [Room]: \"+selectedRoom+\",  [Ticket Type]: \"+tickettype+\",  [Seats]: \"+selectedSeats;\r\n    console.log(\"Detail\", detail);\r\n\r\n    const ordertransaction = {item, itemstatus, quantity, totalamount, customerid, movie, detail};\r\n    e.preventDefault();\r\n    \r\n    fetch('http://localhost:8007/ordertransaction',{\r\n        method: 'POST',\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(ordertransaction)\r\n    }).then(()=>{\r\n        console.log(\"Order have been placed\");\r\n        \r\n    })\r\n\r\n    fetch(`http://localhost:8009/moviesession/${movieSessionId}`)\r\n    .then(res=>{\r\n      return res.json();\r\n    })\r\n    .then(data => {\r\n\r\n      console.log(data)\r\n      const updatedSeats = data.seats.map(seat => {\r\n        if (selectedSeats.includes(seat.seat)) {\r\n          return { seat: seat.seat, occupy: \"yes\", id: seat.id };\r\n        } else {\r\n          return seat;\r\n        }\r\n      });\r\n\r\n      fetch(`http://localhost:8009/moviesession/${movieSessionId}`, \r\n      {\r\n        method: \"PUT\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify({...data, seats: updatedSeats})\r\n      })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          // handle successful update\r\n          console.log(\"update successfully\")\r\n          history('/user', {state:{username, loyaltypoint, seatpref, id}});\r\n        } else {\r\n          throw new Error(\"Failed to update seats.\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        // handle error\r\n        console.log(\"something error\")\r\n      });\r\n\r\n    })\r\n    \r\n  };\r\n\r\n  const handleSeatClick = (seat) => {\r\n    if (seat.occupy === \"no\") {\r\n      setSeats((seats) =>\r\n        seats.map((s) =>\r\n          s.id === seat.id ? { ...s, selected: !s.selected } : s\r\n        )\r\n      );\r\n      if (!seat.selected) {\r\n        setSelectedSeats((selectedSeats) => [...selectedSeats, seat.seat]);\r\n      } else {\r\n        setSelectedSeats((selectedSeats) =>\r\n          selectedSeats.filter((selectedSeat) => selectedSeat !== seat.seat)\r\n        );\r\n      }\r\n    }\r\n  };\r\n  \r\n  const renderSeat = (seat) => {\r\n    let style;\r\n    if (seat.occupy === \"yes\") {\r\n      style = { backgroundColor: \"white\" };\r\n    } else if (seat.selected) {\r\n      style = { backgroundColor: \"cyan\" };\r\n    } else {\r\n      style = { backgroundColor: \"grey\" };\r\n    }\r\n    return (\r\n      <div\r\n        key={seat.id}\r\n        style={{ ...style, width: \"50px\", height: \"40px\" }}\r\n        onClick={() => handleSeatClick(seat)}\r\n      >\r\n        {seat.occupy === \"no\" && !seat.selected ? seat.seat : \"\"}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const renderRow = (rowSeats) => {\r\n    return (\r\n      <tr>\r\n        {rowSeats.map((seat) => (\r\n          <td key={seat.id}>{renderSeat(seat)}</td>\r\n        ))}\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  const firstRowSeats = seats.filter((seat) => [1, 2, 3].includes(seat.id));\r\n  const secondRowSeats = seats.filter((seat) => [4, 5, 6].includes(seat.id));\r\n  const thirdRowSeats = seats.filter((seat) => [7, 8, 9].includes(seat.id));\r\n\r\n  return (\r\n    <>\r\n    <NavBarUser/>\r\n\r\n    <div className='w3-border-top w3-border-dark-grey' ></div>\r\n\r\n    <div className=\"w3-padding-32\">\r\n      <div className=\"w3-row-padding w3-padding-16\">\r\n\r\n        <div className=\"w3-half w3-padding-16\">\r\n          <p>Movie: <span className=\"w3-text-amber\">{selectedMovie}</span></p>\r\n          <p>Date: <span className=\"w3-text-amber\">{selectedDate}</span></p>\r\n          <p>Timeslot: <span className=\"w3-text-amber\">{selectedTimeslot}</span></p>\r\n          <p>Seat Preference: <span className=\"w3-text-amber\">{seatpref}</span></p>\r\n        </div>\r\n\r\n        <div className=\"w3-half w3-padding-16\">\r\n          <p>Select Ticket Type:</p>\r\n          <select className=\"w3-section w3-border w3-round w3-dark-grey\" value={tickettype} onChange={handleTicketChange}>\r\n          <option value=\"\">Ticket Type</option>\r\n          <option value=\"adult\">Adult</option>\r\n          <option value=\"child\">Child</option>\r\n          <option value=\"student\">Student</option>\r\n          <option value=\"senior\">Senior</option>\r\n          </select>\r\n\r\n          {ticketprice && <p>Price: ${ticketprice.toFixed(2)}</p>}\r\n        </div>\r\n\r\n      </div>\r\n      \r\n      <div className='w3-padding-16 w3-border-top w3-border-dark-grey' ></div>\r\n\r\n      <div className=\"w3-row-padding w3-padding-16\">\r\n\r\n        <div className=\"w3-half w3-padding-16\">\r\n          <img src={require(\"../pics/seatinfo.jpg\")} alt=\"seatinfo\" className=\"w3-round\" style={{width:\"300px\", height:\"30px\"}}/>\r\n          \r\n          <div className=\"w3-row-padding w3-padding-32\">\r\n            <p>-----Screen-----</p>\r\n            <table>\r\n              <tbody>\r\n                {renderRow(firstRowSeats)}\r\n                {renderRow(secondRowSeats)}\r\n                {renderRow(thirdRowSeats)}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"w3-half w3-padding-16\">\r\n          <p>Selected seats: {selectedSeats.join(\", \")}</p>\r\n          <p>Number Of Selected Seats: {numberOfSelectedSeats}</p>\r\n          <p>Total: ${totalamount.toFixed(2)}</p>\r\n\r\n          <div>\r\n            <button className=\"w3-button w3-dark-grey w3-round-large w3-margin-right\" onClick={handleReset}>Reset</button>\r\n            <button className=\"w3-button w3-dark-grey w3-round-large\" onClick={handleSubmit}>Place Order</button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n    </>\r\n  );\r\n      \r\n};\r\n\r\nexport default SelectSeats;\r\n","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\StaffBookTicket.js",["241"],[],"import { useState, useEffect } from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport NavBarStaff from \"./NavBarStaff\";\r\n\r\nconst StaffBookTicket = () => {\r\n\r\n    const [date, setDate] = useState(\"\");\r\n    const [data, setData] = useState([]);\r\n\r\n    const history = useNavigate();\r\n    \r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:8009/moviesession')\r\n        .then(res =>{\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            setData(data);\r\n        })\r\n    }, []); \r\n      \r\n    const groupedData = data.reduce((result, item) => {\r\n        const key = item.movie;\r\n        if (!result[key]) {\r\n            result[key] = [];\r\n        }\r\n        result[key].push(item);\r\n        return result;\r\n    }, {});\r\n\r\n    const groupedData2 = data.reduce((result, item) => {\r\n        const key = item.date;\r\n        if (!result[key]) {\r\n            result[key] = [];\r\n        }\r\n        result[key].push(item);\r\n        return result;\r\n    }, {});\r\n\r\n    const handleTimeslotClick = (e) => {\r\n\r\n        e.preventDefault();\r\n        const selectedRecord = data.find(record => record.id === parseInt(e.target.value));\r\n        var selectedTimeslot = selectedRecord.timeslot;\r\n        var selectedDate = selectedRecord.date;\r\n        var selectedMovie = selectedRecord.movie;\r\n        var selectedId = selectedRecord.id;\r\n        var selectedRoom = selectedRecord.room;\r\n        history('/staffselectseats', {state:{selectedDate, selectedId, selectedMovie, selectedTimeslot, selectedRoom}});\r\n    }\r\n  \r\n    return ( \r\n        <>\r\n        <NavBarStaff/>\r\n\r\n        <div className='w3-border-top w3-border-dark-grey' ></div>\r\n\r\n        <div className='w3-padding-32'> \r\n            <h3>Booking Ticket</h3>\r\n\r\n            <select \r\n                value={date}\r\n                onChange={(e) => setDate(e.target.value)}\r\n            >\r\n                <option value=\"\">Select a date</option>\r\n                {(Object.keys(groupedData2)).map(record => (\r\n                    <option key={record} value={record}>{record}</option>\r\n                ))}\r\n            </select>\r\n\r\n            {Object.keys(groupedData).map((key) => (\r\n                <div key={key}>\r\n                    <h2>{key}</h2>\r\n                    <ul>\r\n                        {groupedData[key].filter(record => record.date === date).map((item) => (\r\n                            <li key={item.id}>\r\n                                <button \r\n                                    value={item.id} \r\n                                    onClick={handleTimeslotClick}\r\n                                >\r\n                                    Time Slot: {item.timeslot}\r\n                                </button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            ))}\r\n\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n   \r\nexport default StaffBookTicket;\r\n","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\StaffSelectSeats.js",["242","243"],[],"import { useEffect, useState } from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBarStaff from \"./NavBarStaff\";\r\n\r\nconst StaffSelectSeats = () => {\r\n  const [data2, setData2] = useState([]);\r\n  const [seats, setSeats] = useState([]);\r\n  const [selectedSeats, setSelectedSeats] = useState([]);\r\n  const [tickettype, setTickettype] = useState();\r\n  const [ticketprice, setTicketprice] = useState(\"\");\r\n  const numberOfSelectedSeats = selectedSeats.length;\r\n  const totalamount = numberOfSelectedSeats * ticketprice;\r\n\r\n  const location = useLocation();\r\n  const history = useNavigate();\r\n\r\n  var selectedTimeslot = location.state.selectedTimeslot;\r\n  var selectedDate = location.state.selectedDate;\r\n  var selectedMovie = location.state.selectedMovie;\r\n  var selectedId = location.state.selectedId;\r\n  var selectedRoom = location.state.selectedRoom;\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8009/moviesession\")\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setData2(data);\r\n        console.log(\"console 1\");\r\n        console.log(data);\r\n      });\r\n\r\n  }, []);\r\n\r\n  const handleSomething = () => {\r\n    console.log(\"console 2\");\r\n    console.log(data2);\r\n    setSeats(data2.filter(filter => filter.id === selectedId).flatMap(session => session.seats));\r\n    console.log(\"console 3\");\r\n    console.log(seats);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleSomething();\r\n  }, [data2]);\r\n\r\n  const handleTicketChange = (e) => {\r\n    const selectedTicketType = e.target.value;\r\n    setTickettype(selectedTicketType);\r\n    \r\n    // Set the ticket price based on the selected ticket type\r\n    switch(selectedTicketType) {\r\n      case \"adult\":\r\n        setTicketprice(12);\r\n        break;\r\n      case \"child\":\r\n        setTicketprice(7);\r\n        break;\r\n      case \"student\":\r\n        setTicketprice(7);\r\n        break;\r\n      case \"senior\":\r\n        setTicketprice(9);\r\n        break;\r\n      default:\r\n        setTicketprice(0);\r\n        break;\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setSelectedSeats([]);\r\n    setSeats((seats) =>\r\n      seats.map((s) => {\r\n        if (s.selected) {\r\n          return { ...s, selected: false };\r\n        }\r\n        return s;\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    console.log(e.target.value);\r\n    console.log(\"Selected seats:\", selectedSeats);\r\n\r\n    //const updatedSeats = selectedSeats;\r\n    const movieSessionId = selectedId;\r\n    console.log(movieSessionId)\r\n\r\n    var customerid = \"staff\";\r\n    var quantity = numberOfSelectedSeats;\r\n    var itemstatus = \"Paid\";\r\n    var item = \"Movie Ticket\";\r\n    var detail = \" [Date]: \"+selectedDate+\",  [Timeslot]: \"+selectedTimeslot+\",  [Movie]: \"+selectedMovie+\",  [Room]: \"+selectedRoom+\",  [Ticket Type]: \"+tickettype+\",  [Seats]: \"+selectedSeats;\r\n    console.log(\"Detail\", detail);\r\n\r\n    const ordertransaction = {item, itemstatus, quantity, totalamount, customerid, detail};\r\n    e.preventDefault();\r\n    \r\n    fetch('http://localhost:8007/ordertransaction',{\r\n        method: 'POST',\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(ordertransaction)\r\n    }).then(()=>{\r\n        console.log(\"Order have been placed\");\r\n        \r\n    })\r\n\r\n    fetch(`http://localhost:8009/moviesession/${movieSessionId}`)\r\n    .then(res=>{\r\n      return res.json();\r\n    })\r\n    .then(data => {\r\n\r\n      console.log(data)\r\n      const updatedSeats = data.seats.map(seat => {\r\n        if (selectedSeats.includes(seat.seat)) {\r\n          return { seat: seat.seat, occupy: \"yes\", id: seat.id };\r\n        } else {\r\n          return seat;\r\n        }\r\n      });\r\n\r\n      fetch(`http://localhost:8009/moviesession/${movieSessionId}`, \r\n      {\r\n        method: \"PUT\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify({...data, seats: updatedSeats})\r\n      })\r\n      .then(response => {\r\n        if (response.ok) {\r\n          // handle successful update\r\n          console.log(\"update successfully\")\r\n          history('/stafffoodanddrink');\r\n        } else {\r\n          throw new Error(\"Failed to update seats.\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        // handle error\r\n        console.log(\"something error\")\r\n      });\r\n\r\n    })\r\n    \r\n  };\r\n\r\n  const handleSeatClick = (seat) => {\r\n    if (seat.occupy === \"no\") {\r\n      setSeats((seats) =>\r\n        seats.map((s) =>\r\n          s.id === seat.id ? { ...s, selected: !s.selected } : s\r\n        )\r\n      );\r\n      if (!seat.selected) {\r\n        setSelectedSeats((selectedSeats) => [...selectedSeats, seat.seat]);\r\n      } else {\r\n        setSelectedSeats((selectedSeats) =>\r\n          selectedSeats.filter((selectedSeat) => selectedSeat !== seat.seat)\r\n        );\r\n      }\r\n    }\r\n  };\r\n  \r\n  const renderSeat = (seat) => {\r\n    let style;\r\n    if (seat.occupy === \"yes\") {\r\n      style = { backgroundColor: \"white\" };\r\n    } else if (seat.selected) {\r\n      style = { backgroundColor: \"cyan\" };\r\n    } else {\r\n      style = { backgroundColor: \"grey\" };\r\n    }\r\n    return (\r\n      <div\r\n        key={seat.id}\r\n        style={{ ...style, width: \"50px\", height: \"40px\" }}\r\n        onClick={() => handleSeatClick(seat)}\r\n      >\r\n        {seat.occupy === \"no\" && !seat.selected ? seat.seat : \"\"}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const renderRow = (rowSeats) => {\r\n    return (\r\n      <tr>\r\n        {rowSeats.map((seat) => (\r\n          <td key={seat.id}>{renderSeat(seat)}</td>\r\n        ))}\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  const firstRowSeats = seats.filter((seat) => [1, 2, 3].includes(seat.id));\r\n  const secondRowSeats = seats.filter((seat) => [4, 5, 6].includes(seat.id));\r\n  const thirdRowSeats = seats.filter((seat) => [7, 8, 9].includes(seat.id));\r\n\r\n  return (\r\n    <>\r\n    <NavBarStaff/>\r\n\r\n    <div className='w3-border-top w3-border-dark-grey' ></div>\r\n\r\n    <div className=\"w3-padding-32\">\r\n      <div className=\"w3-row-padding w3-padding-16\">\r\n\r\n        <div className=\"w3-half w3-padding-16\">\r\n          <p>Movie: <span className=\"w3-text-amber\">{selectedMovie}</span></p>\r\n          <p>Date: <span className=\"w3-text-amber\">{selectedDate}</span></p>\r\n          <p>Timeslot: <span className=\"w3-text-amber\">{selectedTimeslot}</span></p>\r\n        </div>\r\n\r\n        <div className=\"w3-half w3-padding-16\">\r\n          <p>Select Ticket Type:</p>\r\n          <select className=\"w3-section w3-border w3-round w3-dark-grey\" value={tickettype} onChange={handleTicketChange}>\r\n          <option value=\"\">Ticket Type</option>\r\n          <option value=\"adult\">Adult</option>\r\n          <option value=\"child\">Child</option>\r\n          <option value=\"student\">Student</option>\r\n          <option value=\"senior\">Senior</option>\r\n          </select>\r\n\r\n          {ticketprice && <p>Price: ${ticketprice.toFixed(2)}</p>}\r\n        </div>\r\n\r\n      </div>\r\n      \r\n      <div className='w3-padding-16 w3-border-top w3-border-dark-grey' ></div>\r\n\r\n      <div className=\"w3-row-padding w3-padding-16\">\r\n\r\n        <div className=\"w3-half w3-padding-16\">\r\n          <img src={require(\"../pics/seatinfo.jpg\")} alt=\"seatinfo\" className=\"w3-round\" style={{width:\"300px\", height:\"30px\"}}/>\r\n          \r\n          <div className=\"w3-row-padding w3-padding-32\">\r\n            <p>-----Screen-----</p>\r\n            <table>\r\n              <tbody>\r\n                {renderRow(firstRowSeats)}\r\n                {renderRow(secondRowSeats)}\r\n                {renderRow(thirdRowSeats)}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"w3-half w3-padding-16\">\r\n          <p>Selected seats: {selectedSeats.join(\", \")}</p>\r\n          <p>Number Of Selected Seats: {numberOfSelectedSeats}</p>\r\n          <p>Total: ${totalamount.toFixed(2)}</p>\r\n\r\n          <div>\r\n            <button className=\"w3-button w3-dark-grey w3-round-large w3-margin-right\" onClick={handleReset}>Reset</button>\r\n            <button className=\"w3-button w3-dark-grey w3-round-large\" onClick={handleSubmit}>Place Order</button>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n    </>\r\n  );\r\n      \r\n};\r\n\r\nexport default StaffSelectSeats;\r\n","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\SystemAdmin\\SystemAdminMain.jsx",["244","245","246","247"],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\Manager\\ManagerMain.jsx",["248","249","250","251","252","253","254","255","256"],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\SystemAdmin\\Create\\CreateUserProfile.jsx",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\SystemAdmin\\Create\\CreateUserAcc.jsx",["257"],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\SystemAdmin\\View\\ViewUserAcc.jsx",["258","259","260"],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\SystemAdmin\\View\\ViewUserProfile.jsx",["261","262"],[],"import { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nfunction ViewUserProfile() {\n    const [showModal, setShowModal] = useState(false);\n    const [showConfirmModal, setConfirmModal] = useState(false);\n    const [data, setData] = useState([])\n    const [filteredData, setFilteredData] = useState([]);\n    const [query, setQuery] = useState('');\n    const [type, setType] = useState('');\n\n    const apiUrl = process.env.REACT_APP_API_URL_USEPROFILE;\n\n    const loadData = () => {\n        fetch(`${apiUrl}/UserProfile`)\n        .then(response => response.json())\n        .then(data => {\n          setData(data)\n          \n        })\n        .catch(error => console.error(error));\n      }\n    \n    useEffect(() => { //load data on page load \n        loadData()\n        }, [filteredData, query]);\n\n    const handleUpdate = (id) => { //filter by id and pass to modal\n        setFilteredData(data.filter((userData) => userData.id === id));\n        // filteredData will now contain an array with only the movie data objects that match the given id\n        setShowModal(true);\n      };\n\n      const handleChange = event => {\n        setQuery(event.target.value);\n      };\n    \n      const handleCloseModal = () => {\n        setShowModal(false); \n        setConfirmModal(false);\n        setType('');\n      };\n\n      const confirmModal = (id) => {\n        setFilteredData(data.filter((userData) => userData.id === id));\n        setType(\"delete\");\n        setConfirmModal(true); \n      };\n\n      const handleSubmit = (e)=> {\n        e.preventDefault();\n        fetch(`${apiUrl}/Userprofile?UserProfile=${query}`)\n          .then(response => response.json())\n          .then(data => setData(data))\n          .catch(error => console.error(error));\n      };\n\n      return (\n        <>\n        <div className=\"d-flex justify-content-end\">\n            <form className=\"input-group p-3\" style={{width : \"350px\"}}   onSubmit={handleSubmit}>\n                <input class=\"form-control border \" type={\"text\"} value={query} onChange={handleChange} ></input>\n                <button  className=\"btn btn-light\" type=\"submit\">Search</button>\n            </form>\n        </div>\n      <table className=\"text-black\" style={{backgroundColor : \"whitesmoke\", width : '1000px'}}>\n      <thead>\n        <tr className=\"d-flex-column\" style={{backgroundColor : \"orange\"}}>\n            <th scope=\"col\">User Profile</th>\n            <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.length == 0 ?  (<p className=\"p-3\">No Matching Records</p>) : (\n            data?.map((userprof) => (\n                <>\n                <tr key={userprof.UserProfile}>\n                    <td className=\"p-2\">{userprof.UserProfile}</td>\n                    <td>\n                        <div className=\"d-flex align-items-center justify-content-end\"> \n                            <button type=\"button\" className=\"btn text-white m-1 \" style={{backgroundColor : \"royalblue\"}}\n                                onClick={() => handleUpdate(userprof.id)}>\n                                Update\n                            </button>\n                            <button type=\"button\" className=\"btn text-white m-1\" style={{backgroundColor : \"red\"}} onClick={()=> confirmModal(userprof.id, \"delete\")}>Delete</button>\n                        </div>\n                    </td>\n                </tr>\n                <tr>\n                    <td colSpan=\"6\" className=\"border-bottom\"></td>\n                </tr>\n                </>    \n            )))}\n      </tbody>\n      </table>\n      {showModal === true &&\n        <UpdateUserProfile \n            data = {filteredData}\n            setData = {setFilteredData}\n            show = {showModal}\n            handleClose = {handleCloseModal}/>\n      }\n      {showConfirmModal === true && type === \"delete\" &&\n        <DeleteUserProfile\n            data =  {filteredData}\n            setData = {setFilteredData}\n            show =  {showConfirmModal}\n            handleClose = {handleCloseModal}/>\n      }  \n      </>\n      );\n}\n\nexport default ViewUserProfile;\n\nconst UpdateUserProfile = ({data, setData, show, handleClose}) => {\n    const apiUrl_UserProf = process.env.REACT_APP_API_URL_USEPROFILE;\n    const [formData, setFormData] = useState(data[0]);\n\n    const handleEdit = (event) => {\n        const {id,value} = event.target;\n        setFormData((prevFormData) => ({...prevFormData, [id]: value}));\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n    \n\n    fetch(`${apiUrl_UserProf}/Userprofile/${formData.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          setData(\"re-load parent\")\n          handleClose();\n          \n        })\n        .catch((error) => console.error(error));\n    }\n    return (\n        <>\n            <Modal show={show} onHide = {handleClose}>\n                <Modal.Body>\n                    <form onSubmit={handleSubmit}>\n                    <div class=\"form-group\">\n                        <label hmtlfor=\"UserProfile\"  class=\"col-form-label\">User Profile:</label>\n                        <input type=\"text\" onChange={handleEdit}  value={formData.Userprofile} class=\"form-control\" id=\"UserProfile\"></input>\n                    </div>\n                    <button type=\"submit\">Update</button>\n                    </form>\n                </Modal.Body>\n            </Modal>\n        </>\n    )\n    }\n\nconst DeleteUserProfile = ({data, setData, show , handleClose}) => {\n    const apiUrl_UserProf = process.env.REACT_APP_API_URL_USEPROFILE;\n    const handleDelete = e => {\n        fetch(`${apiUrl_UserProf}/Userprofile/${data[0].id}`, {\n            method: 'DELETE',\n            headers: {\n              'Content-Type': 'application/json',\n        }})\n            .then((response) => response.json())\n            .then(data => {\n              setData(\"reload\")\n            .catch((error) => console.error(error));\n        \n        handleClose()\n        })\n\n        }\n    return (\n      <>\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Body>\n            Confirm Delete User Profile?\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant = \"secondary\" onClick={handleDelete}>\n              Yes {/*handle Delete / update */}\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    )\n}\n \n","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\Manager\\create\\CreateMovie.jsx",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\Manager\\create\\CreateMovieSess.jsx",["263"],[],"import { useEffect, useState } from \"react\";\nimport SuccessModel from \"../../components/SuccessModal\";\nfunction CreateMovieSession() {\n     const apiUrl_Movie = process.env.REACT_APP_API_URL_MOVIE;\n     const apiUrl_Room = process.env.REACT_APP_API_URL_ROOM;\n     const apiUrl_Session = process.env.REACT_APP_API_URL_SESSION;\n\n     const [showModal, setShowModal] = useState(false);\n     const [movies, setMovies] = useState([])\n     const [rooms , setRooms] = useState([])\n     const [formData, setFormData] = useState({\n          id: \"\",\n          movie_id:  \"\",\n          movie: \"\",\n          room_id: \"\",\n          room: \"\",\n          timeslot: \"\",\n          seats :  [\n               {\n                 \"seat\" : \"A1\",\n                 \"occupy\" : \"no\",\n                 \"id\" : 1\n               },\n               {\n                 \"seat\" : \"A2\",\n                 \"occupy\" : \"no\",\n                 \"id\" : 2\n               },\n               {\n                 \"seat\" : \"A3\",\n                 \"occupy\" : \"no\",\n                 \"id\" : 3\n               },\n               {\n                 \"seat\" : \"B1\",\n                 \"occupy\" : \"no\",\n                 \"id\" : 4\n               },\n               {\n                 \"seat\" : \"B2\",\n                 \"occupy\" : \"no\",\n                 \"id\" : 5\n               },\n               {\n                 \"seat\" : \"B3\",\n                 \"occupy\" : \"no\",\n                 \"id\" : 6\n               },\n               {\n                 \"seat\" : \"C1\",\n                 \"occupy\" : \"no\",\n                 \"id\" : 7\n               },\n               {\n                 \"seat\" : \"C2\",\n                 \"occupy\" : \"no\",\n                 \"id\" : 8\n               },\n               {\n                 \"seat\" : \"C3\",\n                 \"occupy\" : \"no\",\n                 \"id\" : 9\n               }\n             ]\n     });\n\n     const loadMoviesnRooms = () => {\n          // read the data from the JSON file when the component mounts\n          fetch(`${apiUrl_Movie}/Movie`)\n          .then(response => response.json())\n          .then(data => {\n               const extractedMovies = data.map(item => ({\n                    Movie: item.Movie,\n                    id: item.id\n                  }));\n               setMovies(extractedMovies);\n               \n          })\n          .catch(error => console.error(error));\n          //fetch room too\n          fetch(`${apiUrl_Room}/Room`)\n          .then(response => response.json())\n          .then(data => {\n               const extractedRooms = data.map(item => ({\n                    Name: item.Name,\n                    id: item.id\n                  }));\n               setRooms(extractedRooms);\n          })\n          .catch(error => console.error(error));\n     }\n\n     \n     //on page load\n     useEffect(() => {\n          loadMoviesnRooms()\n     }, []);\n\n\n     const handleCloseModal = () => {\n          setShowModal(false); \n     };\n          \n     const handleEdit = (event) => {\n          const { id, value } = event.target;\n          setFormData((prevFormData) => ({ ...prevFormData, [id]: value }));\n             \n     }\n      \n     const handleSubmit = (event) =>{\n          event.preventDefault();\n          console.log(formData)\n          const movie = movies.find(movie => movie.id === parseInt(formData.movie_id));\n          console.log(\"movie\", movie)\n          const room = rooms.find(room => room.id === parseInt(formData.room_id));\n          console.log(movie)\n          fetch(`${apiUrl_Session}/moviesession`, {\n               method: 'POST',\n               headers: {\n                 'Content-Type': 'application/json',\n               },\n               body: JSON.stringify({...formData, movie: movie.Movie, room : room.Name }),\n             })\n               .then((response) => response.json())\n               .then((data) => console.log(data))\n               .catch((error) => console.error(error));\n     }\n\n     return (\n          <>\n          <form onSubmit={handleSubmit} className=\"CreateMovie text-white bg-dark d-flex-column \">\n          \n          <div className=\"form-group d-flex p-3\">\n               <p class=\"col-form-label\" style={{width:'100px'}}>Movie</p>\n               <select id=\"movie_id\" className=\"form-select text-wrap\" style={{ width: '400px'}} onChange={handleEdit}>\n                    {/* got data then use map to populate the dd */}\n                    {movies.map((option) => (\n                         <option key={option.id} value={option.id}>{option.Movie} </option>\n                    ))}\n               </select>\n          </div>\n\n          <div className=\"form-group d-flex align-items-center text-left p-3 \">\n               <p class=\"col-form-label\"  style={{width:'100px'}}>Room:</p>\n               <select id=\"room_id\" className=\"form-select text-wrap\" style={{ width: '400px'}} onChange={handleEdit}>\n                    {/* got data then use map to populate the dd */}\n                    {rooms.map((option) => (\n                         <option key={option.id} value={option.id}>{option.Name} </option>\n                    ))}\n               </select>\n          </div>\n\n          <div className=\"form-group d-flex p-3\">\n               <p  style={{width:'100px'}}>Date</p>\n               <input min={new Date().toISOString().split('T')[0]} type=\"date\" id=\"date\" class=\"form-control\" style={{ width: '400px'}} onChange={handleEdit}  ></input>\n          </div>\n\n          <div className=\"form-group d-flex align-items-center text-left p-3 \">\n               <label class=\"col-form-label\"  style={{width:'100px'}}>From:</label>\n               <input id= \"timeslot\" class=\"form-control\" type=\"text\" style={{ width: '400px'}}  onChange={handleEdit} ></input>\n          </div>\n\n          <div className=\"d-flex justify-content-center  p-3\">\n               <button type=\"submit\" onClick={()=>setShowModal(true)} className=\"btn btn-danger\">Create</button>\n          </div>\n     </form>\n          <SuccessModel \n               message = \"Movie Successfully Created !\" \n               show = {showModal}\n               handleClose={handleCloseModal}\n          />\n  </>\n     );\n   }\n   \n   export default CreateMovieSession;\n   ","C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\Manager\\create\\CreateRoom.jsx",[],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\Manager\\view\\ViewMovie.jsx",["264","265","266","267"],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\Manager\\view\\ViewRoom.jsx",["268","269","270"],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\Manager\\view\\viewSession.jsx",["271","272","273","274","275","276","277","278","279","280","281"],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\Manager\\report\\GenerateReport.jsx",["282","283"],[],"C:\\Users\\yawja\\Documents\\GitHub\\SDMSS\\src\\components\\SuccessModal.jsx",["284"],[],{"ruleId":"285","severity":1,"message":"286","line":2,"column":10,"nodeType":"287","messageId":"288","endLine":2,"endColumn":28},{"ruleId":"285","severity":1,"message":"289","line":5,"column":20,"nodeType":"287","messageId":"288","endLine":5,"endColumn":29},{"ruleId":"290","severity":1,"message":"291","line":46,"column":148,"nodeType":"292","messageId":"293","endLine":46,"endColumn":150},{"ruleId":"285","severity":1,"message":"294","line":3,"column":10,"nodeType":"287","messageId":"288","endLine":3,"endColumn":14},{"ruleId":"295","severity":1,"message":"296","line":65,"column":41,"nodeType":"297","endLine":65,"endColumn":129},{"ruleId":"295","severity":1,"message":"296","line":74,"column":37,"nodeType":"297","endLine":74,"endColumn":124},{"ruleId":"285","severity":1,"message":"298","line":8,"column":8,"nodeType":"287","messageId":"288","endLine":8,"endColumn":19},{"ruleId":"295","severity":1,"message":"299","line":71,"column":17,"nodeType":"297","endLine":71,"endColumn":130},{"ruleId":"285","severity":1,"message":"300","line":24,"column":12,"nodeType":"287","messageId":"288","endLine":24,"endColumn":22},{"ruleId":"285","severity":1,"message":"301","line":24,"column":24,"nodeType":"287","messageId":"288","endLine":24,"endColumn":37},{"ruleId":"302","severity":1,"message":"303","line":153,"column":57,"nodeType":"297","endLine":153,"endColumn":145},{"ruleId":"285","severity":1,"message":"304","line":3,"column":23,"nodeType":"287","messageId":"288","endLine":3,"endColumn":34},{"ruleId":"285","severity":1,"message":"301","line":10,"column":24,"nodeType":"287","messageId":"288","endLine":10,"endColumn":37},{"ruleId":"285","severity":1,"message":"305","line":3,"column":10,"nodeType":"287","messageId":"288","endLine":3,"endColumn":21},{"ruleId":"285","severity":1,"message":"306","line":7,"column":11,"nodeType":"287","messageId":"288","endLine":7,"endColumn":18},{"ruleId":"285","severity":1,"message":"301","line":11,"column":24,"nodeType":"287","messageId":"288","endLine":11,"endColumn":37},{"ruleId":"285","severity":1,"message":"289","line":2,"column":20,"nodeType":"287","messageId":"288","endLine":2,"endColumn":29},{"ruleId":"285","severity":1,"message":"294","line":3,"column":10,"nodeType":"287","messageId":"288","endLine":3,"endColumn":14},{"ruleId":"285","severity":1,"message":"307","line":11,"column":12,"nodeType":"287","messageId":"288","endLine":11,"endColumn":16},{"ruleId":"285","severity":1,"message":"308","line":11,"column":18,"nodeType":"287","messageId":"288","endLine":11,"endColumn":25},{"ruleId":"285","severity":1,"message":"309","line":12,"column":11,"nodeType":"287","messageId":"288","endLine":12,"endColumn":19},{"ruleId":"285","severity":1,"message":"289","line":2,"column":20,"nodeType":"287","messageId":"288","endLine":2,"endColumn":29},{"ruleId":"285","severity":1,"message":"294","line":3,"column":10,"nodeType":"287","messageId":"288","endLine":3,"endColumn":14},{"ruleId":"285","severity":1,"message":"307","line":11,"column":12,"nodeType":"287","messageId":"288","endLine":11,"endColumn":16},{"ruleId":"285","severity":1,"message":"308","line":11,"column":18,"nodeType":"287","messageId":"288","endLine":11,"endColumn":25},{"ruleId":"285","severity":1,"message":"309","line":12,"column":11,"nodeType":"287","messageId":"288","endLine":12,"endColumn":19},{"ruleId":"285","severity":1,"message":"294","line":5,"column":10,"nodeType":"287","messageId":"288","endLine":5,"endColumn":14},{"ruleId":"310","severity":1,"message":"311","line":52,"column":6,"nodeType":"312","endLine":52,"endColumn":13,"suggestions":"313"},{"ruleId":"285","severity":1,"message":"305","line":2,"column":10,"nodeType":"287","messageId":"288","endLine":2,"endColumn":21},{"ruleId":"285","severity":1,"message":"294","line":4,"column":10,"nodeType":"287","messageId":"288","endLine":4,"endColumn":14},{"ruleId":"310","severity":1,"message":"311","line":48,"column":6,"nodeType":"312","endLine":48,"endColumn":13,"suggestions":"314"},{"ruleId":"315","severity":1,"message":"316","line":38,"column":23,"nodeType":"317","messageId":"318","endLine":38,"endColumn":25},{"ruleId":"315","severity":1,"message":"316","line":39,"column":23,"nodeType":"317","messageId":"318","endLine":39,"endColumn":25},{"ruleId":"315","severity":1,"message":"316","line":40,"column":23,"nodeType":"317","messageId":"318","endLine":40,"endColumn":25},{"ruleId":"315","severity":1,"message":"316","line":41,"column":23,"nodeType":"317","messageId":"318","endLine":41,"endColumn":25},{"ruleId":"285","severity":1,"message":"294","line":2,"column":23,"nodeType":"287","messageId":"288","endLine":2,"endColumn":27},{"ruleId":"285","severity":1,"message":"319","line":20,"column":12,"nodeType":"287","messageId":"288","endLine":20,"endColumn":22},{"ruleId":"315","severity":1,"message":"316","line":72,"column":25,"nodeType":"317","messageId":"318","endLine":72,"endColumn":27},{"ruleId":"315","severity":1,"message":"316","line":73,"column":25,"nodeType":"317","messageId":"318","endLine":73,"endColumn":27},{"ruleId":"315","severity":1,"message":"316","line":74,"column":24,"nodeType":"317","messageId":"318","endLine":74,"endColumn":26},{"ruleId":"315","severity":1,"message":"316","line":75,"column":24,"nodeType":"317","messageId":"318","endLine":75,"endColumn":26},{"ruleId":"315","severity":1,"message":"316","line":76,"column":24,"nodeType":"317","messageId":"318","endLine":76,"endColumn":26},{"ruleId":"315","severity":1,"message":"316","line":77,"column":24,"nodeType":"317","messageId":"318","endLine":77,"endColumn":26},{"ruleId":"315","severity":1,"message":"316","line":78,"column":24,"nodeType":"317","messageId":"318","endLine":78,"endColumn":26},{"ruleId":"310","severity":1,"message":"320","line":25,"column":7,"nodeType":"312","endLine":25,"endColumn":9,"suggestions":"321"},{"ruleId":"310","severity":1,"message":"322","line":24,"column":6,"nodeType":"312","endLine":24,"endColumn":27,"suggestions":"323"},{"ruleId":"315","severity":1,"message":"316","line":83,"column":22,"nodeType":"317","messageId":"318","endLine":83,"endColumn":24},{"ruleId":"310","severity":1,"message":"320","line":150,"column":6,"nodeType":"312","endLine":150,"endColumn":8,"suggestions":"324"},{"ruleId":"310","severity":1,"message":"322","line":26,"column":12,"nodeType":"312","endLine":26,"endColumn":33,"suggestions":"325"},{"ruleId":"315","severity":1,"message":"316","line":74,"column":22,"nodeType":"317","messageId":"318","endLine":74,"endColumn":24},{"ruleId":"310","severity":1,"message":"326","line":97,"column":9,"nodeType":"312","endLine":97,"endColumn":11,"suggestions":"327"},{"ruleId":"310","severity":1,"message":"322","line":22,"column":6,"nodeType":"312","endLine":22,"endColumn":26,"suggestions":"328"},{"ruleId":"315","severity":1,"message":"316","line":74,"column":20,"nodeType":"317","messageId":"318","endLine":74,"endColumn":22},{"ruleId":"315","severity":1,"message":"316","line":107,"column":23,"nodeType":"317","messageId":"318","endLine":107,"endColumn":25},{"ruleId":"285","severity":1,"message":"329","line":121,"column":9,"nodeType":"287","messageId":"288","endLine":121,"endColumn":20},{"ruleId":"310","severity":1,"message":"322","line":22,"column":6,"nodeType":"312","endLine":22,"endColumn":27,"suggestions":"330"},{"ruleId":"315","severity":1,"message":"316","line":73,"column":20,"nodeType":"317","messageId":"318","endLine":73,"endColumn":22},{"ruleId":"315","severity":1,"message":"316","line":99,"column":23,"nodeType":"317","messageId":"318","endLine":99,"endColumn":25},{"ruleId":"285","severity":1,"message":"331","line":11,"column":9,"nodeType":"287","messageId":"288","endLine":11,"endColumn":21},{"ruleId":"285","severity":1,"message":"329","line":12,"column":9,"nodeType":"287","messageId":"288","endLine":12,"endColumn":20},{"ruleId":"310","severity":1,"message":"322","line":33,"column":6,"nodeType":"312","endLine":33,"endColumn":27,"suggestions":"332"},{"ruleId":"315","severity":1,"message":"316","line":76,"column":20,"nodeType":"317","messageId":"318","endLine":76,"endColumn":22},{"ruleId":"315","severity":1,"message":"316","line":106,"column":23,"nodeType":"317","messageId":"318","endLine":106,"endColumn":25},{"ruleId":"310","severity":1,"message":"333","line":144,"column":8,"nodeType":"312","endLine":144,"endColumn":10,"suggestions":"334"},{"ruleId":"315","severity":1,"message":"316","line":157,"column":47,"nodeType":"317","messageId":"318","endLine":157,"endColumn":49},{"ruleId":"315","severity":1,"message":"316","line":161,"column":41,"nodeType":"317","messageId":"318","endLine":161,"endColumn":43},{"ruleId":"285","severity":1,"message":"335","line":251,"column":14,"nodeType":"287","messageId":"288","endLine":251,"endColumn":19},{"ruleId":"285","severity":1,"message":"329","line":252,"column":9,"nodeType":"287","messageId":"288","endLine":252,"endColumn":20},{"ruleId":"285","severity":1,"message":"331","line":253,"column":9,"nodeType":"287","messageId":"288","endLine":253,"endColumn":21},{"ruleId":"285","severity":1,"message":"336","line":5,"column":10,"nodeType":"287","messageId":"288","endLine":5,"endColumn":14},{"ruleId":"310","severity":1,"message":"337","line":42,"column":6,"nodeType":"312","endLine":42,"endColumn":8,"suggestions":"338"},{"ruleId":"285","severity":1,"message":"339","line":3,"column":10,"nodeType":"287","messageId":"288","endLine":3,"endColumn":18},"no-unused-vars","'createSearchParams' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'SelectSeats' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'itemstatus' is assigned a value but never used.","'setitemstatus' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useNavigate' is defined but never used.","'useLocation' is defined but never used.","'history' is assigned a value but never used.","'item' is assigned a value but never used.","'setitem' is assigned a value but never used.","'location' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleSomething'. Either include it or remove the dependency array.","ArrayExpression",["340"],["341"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'currentUrl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'apiUrl_profile'. Either include it or remove the dependency array.",["342"],"React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.",["343"],["344"],["345"],"React Hook useEffect has a missing dependency: 'loadMoviesnRooms'. Either include it or remove the dependency array.",["346"],["347"],"'apiUrl_Room' is assigned a value but never used.",["348"],"'apiUrl_Movie' is assigned a value but never used.",["349"],"React Hook useEffect has missing dependencies: 'apiUrl_Movie' and 'apiUrl_Room'. Either include them or remove the dependency array.",["350"],"'setId' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'apiUrl_tx'. Either include it or remove the dependency array.",["351"],"'useState' is defined but never used.",{"desc":"352","fix":"353"},{"desc":"352","fix":"354"},{"desc":"355","fix":"356"},{"desc":"357","fix":"358"},{"desc":"355","fix":"359"},{"desc":"357","fix":"360"},{"desc":"361","fix":"362"},{"desc":"357","fix":"363"},{"desc":"357","fix":"364"},{"desc":"357","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},"Update the dependencies array to be: [data2, handleSomething]",{"range":"370","text":"371"},{"range":"372","text":"371"},"Update the dependencies array to be: [apiUrl_profile]",{"range":"373","text":"374"},"Update the dependencies array to be: [filteredData, loadData, query]",{"range":"375","text":"376"},{"range":"377","text":"374"},{"range":"378","text":"376"},"Update the dependencies array to be: [loadMoviesnRooms]",{"range":"379","text":"380"},{"range":"381","text":"376"},{"range":"382","text":"376"},{"range":"383","text":"376"},"Update the dependencies array to be: [apiUrl_Movie, apiUrl_Room]",{"range":"384","text":"385"},"Update the dependencies array to be: [apiUrl_tx]",{"range":"386","text":"387"},[1704,1711],"[data2, handleSomething]",[1541,1548],[782,784],"[apiUrl_profile]",[724,745],"[filteredData, loadData, query]",[5171,5173],[811,832],[2821,2823],"[loadMoviesnRooms]",[671,691],[665,686],[996,1017],[4897,4899],"[apiUrl_Movie, apiUrl_Room]",[1341,1343],"[apiUrl_tx]"]