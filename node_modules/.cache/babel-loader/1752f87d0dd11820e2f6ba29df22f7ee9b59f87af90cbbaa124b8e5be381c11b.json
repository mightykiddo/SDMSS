{"ast":null,"code":"var _jsxFileName = \"/Users/sheng/Documents/GitHub/SDMSS-2/SDMSS/src/Manager/create/CreateRoom.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport SuccessModel from \"../../components/SuccessModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CreateRoom() {\n  _s();\n  const apiUrl = process.env.REACT_APP_API_URL_ROOM;\n  const [showModal, setShowModal] = useState(false);\n  const [formData, setFormData] = useState({\n    id: \"\",\n    Name: \"\"\n  });\n\n  //modal\n  const postRoom = async formData => {\n    //return void\n    await fetch(`${apiUrl}/Room`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n    return true;\n  };\n  const handleEdit = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [id]: value\n    }));\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = getFormData();\n    const state = await postRoom(formData);\n    setShowModal(state);\n  };\n\n  //view function\n  const getFormData = () => {\n    return formData;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e),\n      className: \"CreateRoom text-white bg-dark d-flex-column \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group d-flex align-items-center text-left p-3 \",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"col-form-label\",\n          style: {\n            width: '100px'\n          },\n          children: \"Room:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"Name\",\n          class: \"form-control\",\n          type: \"text\",\n          style: {\n            width: '400px'\n          },\n          onChange: e => handleEdit(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center  p-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-danger\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(SuccessModel, {\n      message: \"Room Successfully Created !\",\n      show: showModal,\n      handleClose: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true);\n}\n_s(CreateRoom, \"MGl26IBZV2vLbcUlZMxTYlD154A=\");\n_c = CreateRoom;\nexport default CreateRoom;\nvar _c;\n$RefreshReg$(_c, \"CreateRoom\");","map":{"version":3,"names":["useState","SuccessModel","CreateRoom","apiUrl","process","env","REACT_APP_API_URL_ROOM","showModal","setShowModal","formData","setFormData","id","Name","postRoom","fetch","method","headers","body","JSON","stringify","handleEdit","e","value","target","prevFormData","handleCloseModal","handleSubmit","preventDefault","getFormData","state","width"],"sources":["/Users/sheng/Documents/GitHub/SDMSS-2/SDMSS/src/Manager/create/CreateRoom.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport SuccessModel from \"../../components/SuccessModal\";\nfunction CreateRoom() {\n\n     const apiUrl= process.env.REACT_APP_API_URL_ROOM;\n     const [showModal, setShowModal] = useState(false);\n     const [formData, setFormData] = useState({\n               id : \"\",\n               Name : \"\"\n     });\n\n     //modal\n     const postRoom = async (formData) => { //return void\n          await fetch(`${apiUrl}/Room`, {\n               method: 'POST',\n               headers: {\n                 'Content-Type': 'application/json',\n               },\n               body: JSON.stringify(formData),\n             })\n          return true;\n     }\n\n     const handleEdit = (e) => {\n          const { id, value } = e.target;\n          setFormData((prevFormData) => ({ ...prevFormData, [id]: value }));\n     };\n\n     const handleCloseModal = () => {\n          setShowModal(false); \n     };\n\n     const handleSubmit = async (e) =>{\n          e.preventDefault();\n          const formData = getFormData();\n          const state = await postRoom(formData)\n          setShowModal(state);\n     }\n\n     //view function\n     const getFormData = () => {\n          return formData\n     }\n\n     return (\n     <>\n       <form onSubmit={(e) => handleSubmit(e)}  className=\"CreateRoom text-white bg-dark d-flex-column \">\n               <div className=\"form-group d-flex align-items-center text-left p-3 \">\n                    <label class=\"col-form-label\"  style={{width:'100px'}}>Room:</label>\n                    <input id=\"Name\" class=\"form-control\" type=\"text\" style={{ width: '400px'}}  onChange={(e) => handleEdit(e)} ></input>\n               </div>\n               <div className=\"d-flex justify-content-center  p-3\">\n                    <button type=\"submit\" className=\"btn btn-danger\">Create</button>\n               </div>\n       </form >\n               <SuccessModel \n               message = \"Room Successfully Created !\" \n               show = {showModal}\n               handleClose={handleCloseModal}\n          />\n       </>\n     );\n   }\n   \n   export default CreateRoom;\n   \n   "],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,YAAY,MAAM,+BAA+B;AAAC;AAAA;AACzD,SAASC,UAAU,GAAG;EAAA;EAEjB,MAAMC,MAAM,GAAEC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EAChD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC;IAC/BW,EAAE,EAAG,EAAE;IACPC,IAAI,EAAG;EACjB,CAAC,CAAC;;EAEF;EACA,MAAMC,QAAQ,GAAG,MAAOJ,QAAQ,IAAK;IAAE;IAClC,MAAMK,KAAK,CAAE,GAAEX,MAAO,OAAM,EAAE;MACzBY,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,QAAQ;IAC/B,CAAC,CAAC;IACL,OAAO,IAAI;EAChB,CAAC;EAED,MAAMW,UAAU,GAAIC,CAAC,IAAK;IACrB,MAAM;MAAEV,EAAE;MAAEW;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAC9Bb,WAAW,CAAEc,YAAY,KAAM;MAAE,GAAGA,YAAY;MAAE,CAACb,EAAE,GAAGW;IAAM,CAAC,CAAC,CAAC;EACtE,CAAC;EAED,MAAMG,gBAAgB,GAAG,MAAM;IAC1BjB,YAAY,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,MAAMkB,YAAY,GAAG,MAAOL,CAAC,IAAI;IAC5BA,CAAC,CAACM,cAAc,EAAE;IAClB,MAAMlB,QAAQ,GAAGmB,WAAW,EAAE;IAC9B,MAAMC,KAAK,GAAG,MAAMhB,QAAQ,CAACJ,QAAQ,CAAC;IACtCD,YAAY,CAACqB,KAAK,CAAC;EACxB,CAAC;;EAED;EACA,MAAMD,WAAW,GAAG,MAAM;IACrB,OAAOnB,QAAQ;EACpB,CAAC;EAED,oBACA;IAAA,wBACE;MAAM,QAAQ,EAAGY,CAAC,IAAKK,YAAY,CAACL,CAAC,CAAE;MAAE,SAAS,EAAC,8CAA8C;MAAA,wBACzF;QAAK,SAAS,EAAC,qDAAqD;QAAA,wBAC/D;UAAO,KAAK,EAAC,gBAAgB;UAAE,KAAK,EAAE;YAACS,KAAK,EAAC;UAAO,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc,eACpE;UAAO,EAAE,EAAC,MAAM;UAAC,KAAK,EAAC,cAAc;UAAC,IAAI,EAAC,MAAM;UAAC,KAAK,EAAE;YAAEA,KAAK,EAAE;UAAO,CAAE;UAAE,QAAQ,EAAGT,CAAC,IAAKD,UAAU,CAACC,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAU;MAAA;QAAA;QAAA;QAAA;MAAA,QACrH,eACN;QAAK,SAAS,EAAC,oCAAoC;QAAA,uBAC9C;UAAQ,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAC,gBAAgB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAgB;QAAA;QAAA;QAAA;MAAA,QAC/D;IAAA;MAAA;MAAA;MAAA;IAAA,QACN,eACA,QAAC,YAAY;MACb,OAAO,EAAG,6BAA6B;MACvC,IAAI,EAAId,SAAU;MAClB,WAAW,EAAEkB;IAAiB;MAAA;MAAA;MAAA;IAAA,QACjC;EAAA,gBACF;AAEP;AAAC,GA5DKvB,UAAU;AAAA,KAAVA,UAAU;AA8DhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}