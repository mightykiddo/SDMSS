{"ast":null,"code":"var _jsxFileName = \"/Users/sheng/Documents/GitHub/SDMSS-2/SDMSS/src/Manager/view/UpdateSession.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpdateSession = _ref => {\n  _s();\n  let {\n    data,\n    reload,\n    show,\n    handleClose\n  } = _ref;\n  const apiUrl_Room = process.env.REACT_APP_API_URL_ROOM;\n  const apiUrl_Movie = process.env.REACT_APP_API_URL_MOVIE;\n  const apiUrl_Session = process.env.REACT_APP_API_URL_SESSION;\n  const [formData, setFormData] = useState(data[0]);\n  const [movies, setMovies] = useState();\n  const [rooms, setRooms] = useState();\n\n  //modal\n  const getRoomMovie = async () => {\n    const [movieResponse, roomResponse] = await Promise.all([fetch(`${apiUrl_Movie}/Movie`), fetch(`${apiUrl_Room}/Room`)]);\n    const movieData = await movieResponse.json();\n    const roomData = await roomResponse.json();\n    return [movieData, roomData]; //return movie and room\n  };\n\n  const updateMovieSession = async (formData, movie, room) => {\n    await fetch(`${apiUrl_Session}/moviesession/${formData.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...formData,\n        movie: movie,\n        room: room,\n        room_id: parseInt(formData.room_id),\n        movie_id: parseInt(formData.movie_id)\n      })\n    });\n  };\n  //controller\n  useEffect(() => {\n    getRoomMovie().then(_ref2 => {\n      let [moviesData, roomsData] = _ref2;\n      setMovies(moviesData);\n      setRooms(roomsData);\n    }).catch(error => console.error(error));\n  }, []);\n  const handleEdit = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [id]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    var movie = null;\n    var room = null;\n    if (formData.Movie_id !== null) {\n      movie = movies.find(movie => movie.id == formData.movie_id); //will return undefined and break\n      movie = movie.Movie;\n    }\n    if (formData.room_id !== null) {\n      room = rooms.find(room => room.id == formData.room_id);\n      room = room.Name;\n    }\n    updateMovieSession(formData, movie, room);\n    reload(\"reload parent\");\n    handleClose();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handleSubmit(e),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              hmtlfor: \"movie\",\n              class: \"col-form-label text-dark\",\n              children: \"Movie:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              onChange: e => handleEdit(e),\n              value: formData.movie_id,\n              id: \"movie_id\",\n              children: movies === null || movies === void 0 ? void 0 : movies.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.id,\n                children: [option.Movie, \" \"]\n              }, option.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              hmtlfor: \"room\",\n              class: \"col-form-label text-dark\",\n              children: \"Room:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              onChange: e => handleEdit(e),\n              value: formData.room_id,\n              id: \"room_id\",\n              children: rooms === null || rooms === void 0 ? void 0 : rooms.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.id,\n                children: option.Name\n              }, option.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              hmtlfor: \"Date\",\n              class: \"col-form-label text-dark\",\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              class: \"form-control\",\n              min: new Date().toISOString().split('T')[0],\n              onChange: e => handleEdit(e),\n              value: formData.Date,\n              id: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              hmtlfor: \"Start\",\n              class: \"col-form-label text-dark\",\n              children: \"Timeslot:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              class: \"form-control\",\n              onChange: e => handleEdit(e),\n              value: formData.Start,\n              id: \"timeslot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(UpdateSession, \"gvR44IZBrYlzzI/9TArfeBEgZyc=\");\n_c = UpdateSession;\nexport default UpdateSession;\nvar _c;\n$RefreshReg$(_c, \"UpdateSession\");","map":{"version":3,"names":["useState","useEffect","Modal","Button","Form","UpdateSession","data","reload","show","handleClose","apiUrl_Room","process","env","REACT_APP_API_URL_ROOM","apiUrl_Movie","REACT_APP_API_URL_MOVIE","apiUrl_Session","REACT_APP_API_URL_SESSION","formData","setFormData","movies","setMovies","rooms","setRooms","getRoomMovie","movieResponse","roomResponse","Promise","all","fetch","movieData","json","roomData","updateMovieSession","movie","room","id","method","headers","body","JSON","stringify","room_id","parseInt","movie_id","then","moviesData","roomsData","catch","error","console","handleEdit","e","value","target","prevFormData","handleSubmit","preventDefault","Movie_id","find","Movie","Name","map","option","Date","toISOString","split","Start"],"sources":["/Users/sheng/Documents/GitHub/SDMSS-2/SDMSS/src/Manager/view/UpdateSession.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\n\nconst UpdateSession = ({data, reload, show, handleClose}) => {\n  \n    const apiUrl_Room = process.env.REACT_APP_API_URL_ROOM;\n    const apiUrl_Movie = process.env.REACT_APP_API_URL_MOVIE;\n    const apiUrl_Session = process.env.REACT_APP_API_URL_SESSION;\n    const [formData, setFormData] = useState(data[0]);\n    const [movies, setMovies] = useState()\n    const [rooms , setRooms] = useState()\n\n    //modal\n    const getRoomMovie = async () => {\n      const [movieResponse, roomResponse] = await Promise.all([\n        fetch(`${apiUrl_Movie}/Movie`),\n        fetch(`${apiUrl_Room}/Room`)\n      ]);\n      const movieData = await movieResponse.json();\n      const roomData = await roomResponse.json();\n     \n      return [movieData, roomData]; //return movie and room\n    }\n\n    const updateMovieSession = async (formData, movie, room) => {\n        await fetch(`${apiUrl_Session}/moviesession/${formData.id}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              ...formData, \n              movie : movie,\n              room : room,\n              room_id : parseInt(formData.room_id),\n              movie_id : parseInt(formData.movie_id)\n            }),\n          })\n    }\n    //controller\n    useEffect(() => {\n        getRoomMovie()\n            .then(([moviesData, roomsData]) => {\n              setMovies(moviesData);\n              setRooms(roomsData);\n            })\n            .catch(error => console.error(error));\n    }, []);\n\n  const handleEdit = (e) => {\n    const { id, value } = e.target;\n    setFormData((prevFormData) => ({ ...prevFormData, [id]: value }));\n  };\n\n  const handleSubmit = async (e) => { \n    e.preventDefault();\n    var movie = null;\n    var room = null;\n    if(formData.Movie_id !== null ){   \n        movie = movies.find(movie => movie.id == formData.movie_id) //will return undefined and break\n        movie = movie.Movie\n      }\n    if(formData.room_id !== null){\n      room = rooms.find(room => room.id == formData.room_id)\n      room = room.Name\n    }\n    updateMovieSession(formData, movie, room)\n    reload(\"reload parent\")\n    handleClose();\n\n  }\n\n\n  return(\n    <>\n        <Modal show={show} onHide={handleClose}>\n        <Modal.Body>\n        <form onSubmit={(e) => handleSubmit(e)}>\n        <div class=\"form-group\">\n            <label hmtlfor=\"movie\" class=\"col-form-label text-dark\">Movie:</label>\n            <select className=\"form-select\" onChange={(e) => handleEdit(e)} value={formData.movie_id} id=\"movie_id\">\n                {movies?.map((option) => (\n                        <option key={option.id} value={option.id}>{option.Movie} </option>\n                    ))}\n            </select>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"room\" class=\"col-form-label text-dark\">Room:</label>\n            <select className=\"form-select\" onChange={(e) => handleEdit(e)} value={formData.room_id} id=\"room_id\">\n                {rooms?.map((option) => (\n                        <option key={option.id} value={option.id}>{option.Name}</option>\n                    ))}\n            </select>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"Date\" class=\"col-form-label text-dark\">Date:</label>\n            <input type=\"date\" class=\"form-control\" min={new Date().toISOString().split('T')[0]} onChange={(e) => handleEdit(e)} value={formData.Date} id=\"date\"></input>\n          </div>\n          <div class=\"form-group\">\n            <label hmtlfor=\"Start\" class=\"col-form-label text-dark\">Timeslot:</label>\n            <input type=\"text\" class=\"form-control\" onChange={(e) => handleEdit(e)} value={formData.Start} id=\"timeslot\"></input>\n          </div>\n          <button type=\"submit\">update</button>\n        </form>\n        </Modal.Body>\n        \n      </Modal>\n    </>\n  )\n}\n\nexport default UpdateSession;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}