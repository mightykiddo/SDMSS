{"ast":null,"code":"var _jsxFileName = \"/Users/sheng/Documents/GitHub/SDMSS-2/SDMSS/src/SystemAdmin/View/UpdateUserAccount.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpdateUserAccount = _ref => {\n  _s();\n  let {\n    data,\n    reload,\n    show,\n    handleClose\n  } = _ref;\n  const apiUrl_User = process.env.REACT_APP_API_URL_USERACC;\n  const apiUrl_profile = process.env.REACT_APP_API_URL_USEPROFILE;\n  const [profile, setProfile] = useState();\n  const [formData, setFormData] = useState(data[0]);\n\n  //modal\n  const getUserProfile = async () => {\n    return fetch(`${apiUrl_profile}/Userprofile`).then(response => response.json());\n  };\n  const updateUserById = async data => {\n    await fetch(`${apiUrl_User}/user/${data.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n  };\n\n  //controller\n  useEffect(() => {\n    getUserProfile().then(data => setProfile(data)).catch(error => console.error(error));\n  }, []);\n  const handleEdit = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [id]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = getFormData();\n    await updateUserById(data);\n    reload(\"re-load parent\");\n    handleClose();\n    /*\n    updateUserById(data)\n      .then(() => {\n        reload(\"re-load parent\");\n        handleClose();})\n      .catch((error) => console.error(error));\n      */\n  };\n\n  //view function\n  const getFormData = () => {\n    return formData;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => handleSubmit(e),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              hmtlfor: \"username\",\n              class: \"col-form-label text-dark\",\n              children: \"username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => handleEdit(e),\n              value: formData.username,\n              class: \"form-control \",\n              id: \"username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              hmtlfor: \"Email\",\n              class: \"col-form-label text-dark\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              disabled: true,\n              onChange: e => handleEdit(e),\n              value: formData.email,\n              class: \"form-control\",\n              id: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              hmtlfor: \"Status\",\n              class: \"col-form-label text-dark\",\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              class: \"form-control\",\n              disabled: true,\n              onChange: e => handleEdit(e),\n              value: formData.status,\n              id: \"status\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Suspend\",\n                children: \"Suspend\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Active\",\n                children: \"Active\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              hmtlfor: \"Type\",\n              class: \"col-form-label text-dark\",\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-select\",\n              onChange: e => handleEdit(e),\n              value: formData.acctype,\n              id: \"acctype\",\n              children: profile === null || profile === void 0 ? void 0 : profile.map(item => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: item.UserProfile,\n                  children: item.UserProfile\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(UpdateUserAccount, \"AGPvo5CIPvFS0iPEPZEFuilW3Ps=\");\n_c = UpdateUserAccount;\nexport default UpdateUserAccount;\nvar _c;\n$RefreshReg$(_c, \"UpdateUserAccount\");","map":{"version":3,"names":["useState","useEffect","Modal","Button","UpdateUserAccount","data","reload","show","handleClose","apiUrl_User","process","env","REACT_APP_API_URL_USERACC","apiUrl_profile","REACT_APP_API_URL_USEPROFILE","profile","setProfile","formData","setFormData","getUserProfile","fetch","then","response","json","updateUserById","id","method","headers","body","JSON","stringify","catch","error","console","handleEdit","e","value","target","prevFormData","handleSubmit","preventDefault","getFormData","username","email","status","acctype","map","item","UserProfile"],"sources":["/Users/sheng/Documents/GitHub/SDMSS-2/SDMSS/src/SystemAdmin/View/UpdateUserAccount.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst UpdateUserAccount = ({data, reload, show, handleClose}) => {\n    const apiUrl_User = process.env.REACT_APP_API_URL_USERACC;\n    const apiUrl_profile =  process.env.REACT_APP_API_URL_USEPROFILE;\n    const [profile, setProfile] = useState()\n    const [formData, setFormData] = useState(data[0]);\n  \n    //modal\n    const getUserProfile = async () => {\n        return fetch(`${apiUrl_profile}/Userprofile`)\n        .then((response) => response.json())\n    }\n  \n    const updateUserById = async (data) => {\n      await fetch(`${apiUrl_User}/user/${data.id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      })\n    }\n  \n    //controller\n    useEffect(() => {\n      getUserProfile()\n          .then((data) => setProfile(data))\n          .catch((error) => console.error(error));\n    } , [])\n  \n    const handleEdit = (e) => {\n      const { id, value } = e.target;\n      setFormData((prevFormData) => ({ ...prevFormData, [id]: value }));\n    };\n  \n  \n    const handleSubmit = async (e) => {\n      e.preventDefault();\n      const data = getFormData();\n      await updateUserById(data)\n      reload(\"re-load parent\");\n      handleClose();\n      /*\n      updateUserById(data)\n        .then(() => {\n          reload(\"re-load parent\");\n          handleClose();})\n        .catch((error) => console.error(error));\n        */\n    }\n  \n    //view function\n    const getFormData = () => {\n        return formData\n    }\n      \n    return(\n      <>\n        <Modal show={show} onHide={handleClose}>\n        <Modal.Body>\n        <form  onSubmit={(e) => handleSubmit(e)}>\n            <div class=\"form-group\">\n              <label hmtlfor=\"username\"  class=\"col-form-label text-dark\">username:</label>\n              <input type=\"text\" onChange={(e) => handleEdit(e)}  value={formData.username} class=\"form-control \" id=\"username\"></input>\n            </div>\n            <div class=\"form-group\">\n              <label hmtlfor=\"Email\"  class=\"col-form-label text-dark\">Email:</label>\n              <input type=\"text\" disabled onChange={(e) => handleEdit(e)}  value={formData.email} class=\"form-control\" id=\"email\"></input>\n            </div>\n            <div class=\"form-group\">\n              <label hmtlfor=\"Status\" class=\"col-form-label text-dark\">Status:</label>\n              <select class=\"form-control\" disabled onChange={(e) => handleEdit(e)} value={formData.status} id=\"status\">\n                <option value=\"Suspend\">Suspend</option>\n                <option value=\"Active\">Active</option>\n              </select>\n            </div>\n            <div class=\"form-group\">\n              <label hmtlfor=\"Type\" class=\"col-form-label text-dark\">Type</label>\n              <select className=\"form-select\" onChange={(e) => handleEdit(e)} value={formData.acctype} id=\"acctype\">\n                      {profile?.map((item) => (\n                           <>\n                                <option value={item.UserProfile} key={item.id}>{item.UserProfile}</option>\n                           </>\n                      ))}\n              </select>\n            </div>\n            <button type=\"submit\">Update</button>\n         </form>\n        </Modal.Body>\n        </Modal>\n  \n      </>\n    )\n  }\n  \n\nexport default UpdateUserAccount;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}