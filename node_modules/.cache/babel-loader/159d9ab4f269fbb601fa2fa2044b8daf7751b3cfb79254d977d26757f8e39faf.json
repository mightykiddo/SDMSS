{"ast":null,"code":"var _jsxFileName = \"D:\\\\314project\\\\SDMSS2\\\\SDMSS\\\\src\\\\Manager\\\\view\\\\DeleteMovie.jsx\";\nimport { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DeleteMovie = _ref => {\n  let {\n    data,\n    reload,\n    show,\n    handleClose\n  } = _ref;\n  const apiUrl_Movie = process.env.REACT_APP_API_URL_MOVIE;\n  const apiUrl_Session = process.env.REACT_APP_API_URL_SESSION;\n  const id = data[0].id;\n\n  //model\n  const deleteMovie = async id => {\n    const res = await fetch(`${apiUrl_Movie}/Movie/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    await res.json();\n    const session_res = fetch(`${apiUrl_Session}/moviesession?movie_id=${id}`);\n    const sessionData = await session_res.json();\n    return fetch(`${apiUrl_Movie}/Movie/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(() => {\n      // Find all movie sessions with the deleted room's id and set the room_id and Room fields to null\n      fetch(`${apiUrl_Session}/moviesession?movie_id=${id}`).then(sessionResponse => sessionResponse.json()).then(sessionData => {\n        const updatedSessions = sessionData.map(session => {\n          return {\n            ...session,\n            movie_id: null,\n            movie: null\n          };\n        });\n        // Send a PUT request to update the MovieSession data on the server for each updated session\n        updatedSessions.forEach(session => {\n          fetch(`${apiUrl_Session}/moviesession/${session.id}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(session)\n          }).catch(error => console.error(error));\n        });\n      }).catch(sessionError => console.error(sessionError));\n    });\n  };\n\n  //controller\n  const handleDelete = (e, id) => {\n    e.preventDefault();\n    deleteMovie(id) //call model\n    .then(() => {\n      reload(\"reload\");\n      handleClose();\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"text-dark\",\n        children: \"Confirm Delete Movie ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: e => handleDelete(e, id),\n          children: \"Yes \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = DeleteMovie;\nexport default DeleteMovie;\nvar _c;\n$RefreshReg$(_c, \"DeleteMovie\");","map":{"version":3,"names":["useState","useEffect","Modal","Button","DeleteMovie","data","reload","show","handleClose","apiUrl_Movie","process","env","REACT_APP_API_URL_MOVIE","apiUrl_Session","REACT_APP_API_URL_SESSION","id","deleteMovie","res","fetch","method","headers","json","session_res","sessionData","then","response","sessionResponse","updatedSessions","map","session","movie_id","movie","forEach","body","JSON","stringify","catch","error","console","sessionError","handleDelete","e","preventDefault"],"sources":["D:/314project/SDMSS2/SDMSS/src/Manager/view/DeleteMovie.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst DeleteMovie = ({data, reload, show, handleClose}) => {\r\n    const apiUrl_Movie = process.env.REACT_APP_API_URL_MOVIE;\r\n    const apiUrl_Session = process.env.REACT_APP_API_URL_SESSION;\r\n  \r\n    const id =data[0].id\r\n\r\n\r\n    //model\r\n    const deleteMovie = async (id) => {\r\n      const res = await fetch(`${apiUrl_Movie}/Movie/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n\r\n      await res.json();\r\n\r\n      const session_res = fetch(`${apiUrl_Session}/moviesession?movie_id=${id}`)\r\n      const sessionData = await session_res.json();\r\n      return fetch(`${apiUrl_Movie}/Movie/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n        })\r\n        .then(response => response.json())\r\n        .then(() => {\r\n          // Find all movie sessions with the deleted room's id and set the room_id and Room fields to null\r\n          fetch(`${apiUrl_Session}/moviesession?movie_id=${id}`)\r\n            .then(sessionResponse => sessionResponse.json())\r\n            .then(sessionData => {\r\n              const updatedSessions = sessionData.map(session => {\r\n                return { ...session, movie_id: null, movie: null }\r\n              });\r\n              // Send a PUT request to update the MovieSession data on the server for each updated session\r\n              updatedSessions.forEach(session => {\r\n                fetch(`${apiUrl_Session}/moviesession/${session.id}`, {\r\n                  method: 'PUT',\r\n                  headers: {\r\n                    'Content-Type': 'application/json'\r\n                  },\r\n                  body: JSON.stringify(session)\r\n                  })\r\n                  .catch(error => console.error(error));\r\n                });\r\n              })\r\n            .catch(sessionError => console.error(sessionError));\r\n          })\r\n\r\n    }\r\n\r\n\r\n    //controller\r\n    const handleDelete = (e, id) => {\r\n          e.preventDefault();\r\n          deleteMovie(id) //call model\r\n            .then(() =>{\r\n              reload(\"reload\");\r\n              handleClose();})\r\n            .catch(error => console.error(error));\r\n    };\r\n  \r\n\r\n    \r\n    return(\r\n      <>\r\n      <Modal show={show} onHide={handleClose}>\r\n       <Modal.Body className=\"text-dark\">\r\n            Confirm Delete Movie ?\r\n       </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={(e) => handleDelete(e, id)}>\r\n            Yes {/*handle delete/update*/}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      </>\r\n    )\r\n  }\r\n\r\nexport default DeleteMovie;\r\n  \r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}