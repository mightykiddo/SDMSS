{"ast":null,"code":"var _jsxFileName = \"/Users/sheng/Documents/GitHub/SDMSS-2/SDMSS/src/SystemAdmin/View/SuspendUserAccount,.jsx\";\nimport { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SuspendUserAccount = _ref => {\n  let {\n    type,\n    data,\n    reload,\n    show,\n    handleClose\n  } = _ref;\n  const apiUrl_User = process.env.REACT_APP_API_URL_USERACC;\n  const updateStatus = async (data, type) => {\n    //void\n    await fetch(`${apiUrl_User}/user/${data[0].id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...data[0],\n        status: type\n      })\n    });\n    return true;\n  };\n  const handleSuspend = async e => {\n    e.preventDefault();\n    const data = getFormData();\n    if (type === \"unsuspend\") {\n      const state = await updateStatus(data, 'Active'); //call model\n      reload(state);\n      handleClose();\n    } else if (type === \"suspend\") {\n      const state = await updateStatus(data, 'Suspended'); //call model\n      reload(state);\n      handleClose(state);\n    }\n  };\n\n  //view function\n  const getFormData = () => {\n    return data;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"text-dark\",\n        children: type === \"suspend\" ? \"Confirm Suspend User ?\" : \"Confirm Unsuspend User ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: e => handleSuspend(e),\n          children: \"Yes \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = SuspendUserAccount;\nexport default SuspendUserAccount;\nvar _c;\n$RefreshReg$(_c, \"SuspendUserAccount\");","map":{"version":3,"names":["useState","useEffect","Modal","Button","SuspendUserAccount","type","data","reload","show","handleClose","apiUrl_User","process","env","REACT_APP_API_URL_USERACC","updateStatus","fetch","id","method","headers","body","JSON","stringify","status","handleSuspend","e","preventDefault","getFormData","state"],"sources":["/Users/sheng/Documents/GitHub/SDMSS-2/SDMSS/src/SystemAdmin/View/SuspendUserAccount,.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst SuspendUserAccount = ({type, data, reload, show , handleClose}) => {\n    const apiUrl_User = process.env.REACT_APP_API_URL_USERACC;\n  \n    const updateStatus = async (data, type) => { //void\n      await fetch(`${apiUrl_User}/user/${data[0].id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify( {...data[0], status : type}),\n      })\n      return true\n    }\n  \n  \n    const handleSuspend = async (e) =>{\n      e.preventDefault();\n      const data = getFormData();\n      if (type === \"unsuspend\"){\n        const state = await updateStatus(data, 'Active')//call model\n        reload(state)\n        handleClose()\n      }\n      else if (type === \"suspend\") {\n        const state = await updateStatus(data, 'Suspended')//call model\n        reload(state)\n        handleClose(state)\n      }\n    } \n  \n    //view function\n    const getFormData = () => {\n        return data\n    }\n      \n    return(\n      <>\n      <Modal show={show} onHide={handleClose}>\n       <Modal.Body className=\"text-dark\">\n            {type === \"suspend\" ?  \"Confirm Suspend User ?\" : \"Confirm Unsuspend User ?\"}\n       </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={(e) => handleSuspend(e)}>\n            Yes {/*handle delete/update*/}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      </>\n    )\n  }\n\nexport default SuspendUserAccount;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,KAAK,EAAEC,MAAM,QAAQ,iBAAiB;AAAC;AAAA;AAEhD,MAAMC,kBAAkB,GAAG,QAA8C;EAAA,IAA7C;IAACC,IAAI;IAAEC,IAAI;IAAEC,MAAM;IAAEC,IAAI;IAAGC;EAAW,CAAC;EAChE,MAAMC,WAAW,GAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB;EAEzD,MAAMC,YAAY,GAAG,OAAOR,IAAI,EAAED,IAAI,KAAK;IAAE;IAC3C,MAAMU,KAAK,CAAE,GAAEL,WAAY,SAAQJ,IAAI,CAAC,CAAC,CAAC,CAACU,EAAG,EAAC,EAAE;MAC/CC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAE;QAAC,GAAGf,IAAI,CAAC,CAAC,CAAC;QAAEgB,MAAM,EAAGjB;MAAI,CAAC;IACnD,CAAC,CAAC;IACF,OAAO,IAAI;EACb,CAAC;EAGD,MAAMkB,aAAa,GAAG,MAAOC,CAAC,IAAI;IAChCA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMnB,IAAI,GAAGoB,WAAW,EAAE;IAC1B,IAAIrB,IAAI,KAAK,WAAW,EAAC;MACvB,MAAMsB,KAAK,GAAG,MAAMb,YAAY,CAACR,IAAI,EAAE,QAAQ,CAAC;MAChDC,MAAM,CAACoB,KAAK,CAAC;MACblB,WAAW,EAAE;IACf,CAAC,MACI,IAAIJ,IAAI,KAAK,SAAS,EAAE;MAC3B,MAAMsB,KAAK,GAAG,MAAMb,YAAY,CAACR,IAAI,EAAE,WAAW,CAAC;MACnDC,MAAM,CAACoB,KAAK,CAAC;MACblB,WAAW,CAACkB,KAAK,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAMD,WAAW,GAAG,MAAM;IACtB,OAAOpB,IAAI;EACf,CAAC;EAED,oBACE;IAAA,uBACA,QAAC,KAAK;MAAC,IAAI,EAAEE,IAAK;MAAC,MAAM,EAAEC,WAAY;MAAA,wBACtC,QAAC,KAAK,CAAC,IAAI;QAAC,SAAS,EAAC,WAAW;QAAA,UAC3BJ,IAAI,KAAK,SAAS,GAAI,wBAAwB,GAAG;MAA0B;QAAA;QAAA;QAAA;MAAA,QACpE,eACZ,QAAC,KAAK,CAAC,MAAM;QAAA,uBACX,QAAC,MAAM;UAAC,OAAO,EAAC,WAAW;UAAC,OAAO,EAAGmB,CAAC,IAAKD,aAAa,CAACC,CAAC,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAEpD;QAAA;QAAA;QAAA;MAAA,QACI;IAAA;MAAA;MAAA;MAAA;IAAA;EACT,iBACL;AAEP,CAAC;AAAA,KAjDGpB,kBAAkB;AAmDxB,eAAeA,kBAAkB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}