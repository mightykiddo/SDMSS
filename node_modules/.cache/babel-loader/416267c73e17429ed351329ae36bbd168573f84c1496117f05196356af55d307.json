{"ast":null,"code":"var _jsxFileName = \"D:\\\\314project\\\\SDMSS2\\\\SDMSS\\\\src\\\\Manager\\\\view\\\\DeleteRoom.jsx\";\nimport { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DeleteRoom = _ref => {\n  let {\n    data,\n    reload,\n    show,\n    handleClose\n  } = _ref;\n  const apiUrl_Room = process.env.REACT_APP_API_URL_ROOM;\n  const apiUrl_Session = process.env.REACT_APP_API_URL_SESSION;\n  const id = data[0].id;\n  const deleteRoom = async id => {\n    return fetch(`${apiUrl_Room}/Room/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(deletedRoom => {\n      console.log(`Deleted room with id ${id}`);\n\n      // Find all movie sessions with the deleted room's id and set the room_id and Room fields to null\n      fetch(`${apiUrl_Session}/moviesession?room_id=${id}`).then(sessionResponse => sessionResponse.json()).then(sessionData => {\n        const updatedSessions = sessionData.map(session => {\n          return {\n            ...session,\n            room_id: null,\n            room: null\n          };\n        });\n        console.log(\"Updated sessions: \", updatedSessions);\n\n        // Send a PUT request to update the MovieSession data on the server for each updated session\n        updatedSessions.forEach(session => {\n          fetch(`${apiUrl_Session}/moviesession/${session.id}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(session)\n          }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error(error));\n        });\n      }).catch(sessionError => console.error(sessionError));\n    });\n  };\n\n  //delete room in movie session // do here instead of in movie sessions\n  const handleDelete = (e, id) => {\n    e.preventDefault();\n    deleteRoom(id).then(() => {\n      reload(\"reload\");\n      handleClose();\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"text-dark\",\n        children: \"Confirm Delete Room ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: e => handleDelete(e, id),\n          children: \"Yes \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = DeleteRoom;\nexport default DeleteRoom;\nvar _c;\n$RefreshReg$(_c, \"DeleteRoom\");","map":{"version":3,"names":["useState","useEffect","Modal","Button","DeleteRoom","data","reload","show","handleClose","apiUrl_Room","process","env","REACT_APP_API_URL_ROOM","apiUrl_Session","REACT_APP_API_URL_SESSION","id","deleteRoom","fetch","method","headers","then","response","json","deletedRoom","console","log","sessionResponse","sessionData","updatedSessions","map","session","room_id","room","forEach","body","JSON","stringify","catch","error","sessionError","handleDelete","e","preventDefault"],"sources":["D:/314project/SDMSS2/SDMSS/src/Manager/view/DeleteRoom.jsx"],"sourcesContent":["import { useState, useEffect} from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst DeleteRoom = ({data, reload, show, handleClose}) => {\r\n    const apiUrl_Room = process.env.REACT_APP_API_URL_ROOM;\r\n    const apiUrl_Session = process.env.REACT_APP_API_URL_SESSION;\r\n  \r\n    const id =data[0].id\r\n    const deleteRoom = async (id) => {\r\n      return       fetch(`${apiUrl_Room}/Room/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      })\r\n        .then(response => response.json())\r\n        .then(deletedRoom => {\r\n          console.log(`Deleted room with id ${id}`);\r\n    \r\n          // Find all movie sessions with the deleted room's id and set the room_id and Room fields to null\r\n          fetch(`${apiUrl_Session}/moviesession?room_id=${id}`)\r\n            .then(sessionResponse => sessionResponse.json())\r\n            .then(sessionData => {\r\n              const updatedSessions = sessionData.map(session => {\r\n                return { ...session, room_id: null, room: null }\r\n              });\r\n              console.log(\"Updated sessions: \", updatedSessions);\r\n    \r\n              // Send a PUT request to update the MovieSession data on the server for each updated session\r\n              updatedSessions.forEach(session => {\r\n                fetch(`${apiUrl_Session}/moviesession/${session.id}`, {\r\n                  method: 'PUT',\r\n                  headers: {\r\n                    'Content-Type': 'application/json'\r\n                  },\r\n                  body: JSON.stringify(session)\r\n                })\r\n                  .then(response => response.json())\r\n                  .then(data => console.log(data))\r\n                  .catch(error => console.error(error));\r\n              });\r\n            })\r\n            .catch(sessionError => console.error(sessionError));\r\n          })\r\n    }\r\n  \r\n    //delete room in movie session // do here instead of in movie sessions\r\n    const handleDelete = (e, id) => {\r\n      e.preventDefault();\r\n      deleteRoom(id)\r\n      .then(() => { \r\n          reload(\"reload\");\r\n          handleClose();\r\n        })\r\n      .catch(error => console.error(error));\r\n    };\r\n    \r\n  \r\n    return(\r\n      <>\r\n      <Modal show={show} onHide={handleClose}>\r\n       <Modal.Body className=\"text-dark\">\r\n            Confirm Delete Room ?\r\n       </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={(e) => handleDelete(e, id)}>\r\n            Yes {/*handle delete/update*/}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      </>\r\n    )\r\n  }\r\n  \r\n\r\nexport default DeleteRoom;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}